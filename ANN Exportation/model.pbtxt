node {
  name: "dense_7_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "dense_7/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "dense_7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_7/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4555683
    }
  }
}
node {
  name: "dense_7/random_uniform/sub"
  op: "Sub"
  input: "dense_7/random_uniform/max"
  input: "dense_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/random_uniform/mul"
  op: "Mul"
  input: "dense_7/random_uniform/RandomUniform"
  input: "dense_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/random_uniform"
  op: "Add"
  input: "dense_7/random_uniform/mul"
  input: "dense_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_7/kernel"
    }
  }
}
node {
  name: "dense_7/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_7/kernel"
}
node {
  name: "dense_7/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_7/kernel"
  input: "dense_7/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_7/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_7/bias"
    }
  }
}
node {
  name: "dense_7/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_7/bias"
}
node {
  name: "dense_7/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_7/bias"
  input: "dense_7/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/MatMul"
  op: "MatMul"
  input: "dense_7_input"
  input: "dense_7/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_7/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/BiasAdd"
  op: "BiasAdd"
  input: "dense_7/MatMul"
  input: "dense_7/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_7/Relu"
  op: "Relu"
  input: "dense_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "dense_8/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_8/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_8/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_8/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5827979
    }
  }
}
node {
  name: "dense_8/random_uniform/sub"
  op: "Sub"
  input: "dense_8/random_uniform/max"
  input: "dense_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/random_uniform/mul"
  op: "Mul"
  input: "dense_8/random_uniform/RandomUniform"
  input: "dense_8/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/random_uniform"
  op: "Add"
  input: "dense_8/random_uniform/mul"
  input: "dense_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_8/kernel"
    }
  }
}
node {
  name: "dense_8/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_8/kernel"
}
node {
  name: "dense_8/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_8/kernel"
  input: "dense_8/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/weight_regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/weight_regularizer/Square"
  op: "Square"
  input: "dense_8/weight_regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_8/weight_regularizer/Sum"
  op: "Sum"
  input: "dense_8/weight_regularizer/Square"
  input: "dense_8/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_8/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_8/weight_regularizer/mul"
  op: "Mul"
  input: "dense_8/weight_regularizer/mul/x"
  input: "dense_8/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_8/weight_regularizer/add"
  op: "AddV2"
  input: "dense_8/weight_regularizer/add/x"
  input: "dense_8/weight_regularizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_8/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_8/bias"
    }
  }
}
node {
  name: "dense_8/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_8/bias"
}
node {
  name: "dense_8/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_8/bias"
  input: "dense_8/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/weight_regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/weight_regularizer_1/Square"
  op: "Square"
  input: "dense_8/weight_regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/weight_regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense_8/weight_regularizer_1/Sum"
  op: "Sum"
  input: "dense_8/weight_regularizer_1/Square"
  input: "dense_8/weight_regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_8/weight_regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_8/weight_regularizer_1/mul"
  op: "Mul"
  input: "dense_8/weight_regularizer_1/mul/x"
  input: "dense_8/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/weight_regularizer_1/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_8/weight_regularizer_1/add"
  op: "AddV2"
  input: "dense_8/weight_regularizer_1/add/x"
  input: "dense_8/weight_regularizer_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/MatMul"
  op: "MatMul"
  input: "dense_7/Relu"
  input: "dense_8/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_8/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8/BiasAdd"
  op: "BiasAdd"
  input: "dense_8/MatMul"
  input: "dense_8/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_8/Relu"
  op: "Relu"
  input: "dense_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\027\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_9/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_9/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_9/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_9/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7771035
    }
  }
}
node {
  name: "dense_9/random_uniform/sub"
  op: "Sub"
  input: "dense_9/random_uniform/max"
  input: "dense_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9/random_uniform/mul"
  op: "Mul"
  input: "dense_9/random_uniform/RandomUniform"
  input: "dense_9/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9/random_uniform"
  op: "Add"
  input: "dense_9/random_uniform/mul"
  input: "dense_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_9/kernel"
    }
  }
}
node {
  name: "dense_9/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_9/kernel"
}
node {
  name: "dense_9/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_9/kernel"
  input: "dense_9/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_9/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_9/bias"
    }
  }
}
node {
  name: "dense_9/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_9/bias"
}
node {
  name: "dense_9/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_9/bias"
  input: "dense_9/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9/MatMul"
  op: "MatMul"
  input: "dense_8/Relu"
  input: "dense_9/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_9/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9/BiasAdd"
  op: "BiasAdd"
  input: "dense_9/MatMul"
  input: "dense_9/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_9/Sigmoid"
  op: "Sigmoid"
  input: "dense_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "dense_7/kernel"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7/kernel"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_7/bias"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "dense_7/bias"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "dense_8/kernel"
  input: "Placeholder_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "dense_8/kernel"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "dense_8/bias"
  input: "Placeholder_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "dense_8/bias"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "dense_9/kernel"
  input: "Placeholder_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_9/kernel"
  input: "^AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "dense_9/bias"
  input: "Placeholder_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_9/bias"
  input: "^AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_7/kernel"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "dense_8/bias"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "dense_9/kernel"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "dense_8/kernel"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "dense_9/bias"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "dense_7/bias"
}
node {
  name: "init"
  op: "NoOp"
  input: "^dense_7/bias/Assign"
  input: "^dense_7/kernel/Assign"
  input: "^dense_8/bias/Assign"
  input: "^dense_8/kernel/Assign"
  input: "^dense_9/bias/Assign"
  input: "^dense_9/kernel/Assign"
}
node {
  name: "Adam/iterations/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam/iterations"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/iterations"
    }
  }
}
node {
  name: "Adam/iterations/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/iterations"
}
node {
  name: "Adam/iterations/Assign"
  op: "AssignVariableOp"
  input: "Adam/iterations"
  input: "Adam/iterations/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam/iterations/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/learning_rate"
    }
  }
}
node {
  name: "Adam/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/learning_rate"
}
node {
  name: "Adam/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "Adam/learning_rate"
  input: "Adam/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/beta_1"
    }
  }
}
node {
  name: "Adam/beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/beta_1"
}
node {
  name: "Adam/beta_1/Assign"
  op: "AssignVariableOp"
  input: "Adam/beta_1"
  input: "Adam/beta_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/beta_2"
    }
  }
}
node {
  name: "Adam/beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/beta_2"
}
node {
  name: "Adam/beta_2/Assign"
  op: "AssignVariableOp"
  input: "Adam/beta_2"
  input: "Adam/beta_2/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/decay"
    }
  }
}
node {
  name: "Adam/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/decay"
}
node {
  name: "Adam/decay/Assign"
  op: "AssignVariableOp"
  input: "Adam/decay"
  input: "Adam/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "dense_9_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "total/Assign"
  op: "AssignVariableOp"
  input: "total"
  input: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "count/Assign"
  op: "AssignVariableOp"
  input: "count"
  input: "Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_1"
    }
  }
}
node {
  name: "total_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_1"
}
node {
  name: "total_1/Assign"
  op: "AssignVariableOp"
  input: "total_1"
  input: "Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_1"
    }
  }
}
node {
  name: "count_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_1"
}
node {
  name: "count_1/Assign"
  op: "AssignVariableOp"
  input: "count_1"
  input: "Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/Round"
  op: "Round"
  input: "dense_9/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/Equal"
  op: "Equal"
  input: "dense_9_target"
  input: "metrics/accuracy/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/accuracy/Cast"
  op: "Cast"
  input: "metrics/accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/accuracy/Mean"
  op: "Mean"
  input: "metrics/accuracy/Cast"
  input: "metrics/accuracy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/accuracy/Sum"
  op: "Sum"
  input: "metrics/accuracy/Mean"
  input: "metrics/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total"
  input: "metrics/accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/accuracy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/Size"
  op: "Size"
  input: "metrics/accuracy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/accuracy/Cast_1"
  op: "Cast"
  input: "metrics/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count"
  input: "metrics/accuracy/Cast_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/accuracy/AssignAddVariableOp"
  input: "^metrics/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/accuracy/AssignAddVariableOp"
  input: "^metrics/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/truediv"
  op: "RealDiv"
  input: "metrics/accuracy/ReadVariableOp_2"
  input: "metrics/accuracy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/Identity"
  op: "Identity"
  input: "metrics/accuracy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_9/BiasAdd"
  input: "metrics/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "metrics/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_9/BiasAdd"
  input: "metrics/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "metrics/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "metrics/binary_crossentropy/logistic_loss/Neg"
  input: "dense_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_9/BiasAdd"
  input: "dense_9_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "metrics/binary_crossentropy/logistic_loss/Select"
  input: "metrics/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "metrics/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "metrics/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "metrics/binary_crossentropy/logistic_loss/sub"
  input: "metrics/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/binary_crossentropy/Mean"
  op: "Mean"
  input: "metrics/binary_crossentropy/logistic_loss"
  input: "metrics/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/binary_crossentropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/binary_crossentropy/Sum"
  op: "Sum"
  input: "metrics/binary_crossentropy/Mean"
  input: "metrics/binary_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/binary_crossentropy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_1"
  input: "metrics/binary_crossentropy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^metrics/binary_crossentropy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/Size"
  op: "Size"
  input: "metrics/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/binary_crossentropy/Cast"
  op: "Cast"
  input: "metrics/binary_crossentropy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/binary_crossentropy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_1"
  input: "metrics/binary_crossentropy/Cast"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^metrics/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^metrics/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^metrics/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/truediv"
  op: "RealDiv"
  input: "metrics/binary_crossentropy/ReadVariableOp_2"
  input: "metrics/binary_crossentropy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/binary_crossentropy/Identity"
  op: "Identity"
  input: "metrics/binary_crossentropy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_9/BiasAdd"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_9/BiasAdd"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
  input: "dense_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_9/BiasAdd"
  input: "dense_9_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Select"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/Mean"
  op: "Mean"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss"
  input: "loss/dense_9_loss/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  op: "Mul"
  input: "dense_9_sample_weights"
  input: "loss/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
  op: "Sum"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  op: "Size"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
  op: "RealDiv"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add"
  op: "AddV2"
  input: "loss/mul"
  input: "dense_8/weight_regularizer/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add_1"
  op: "AddV2"
  input: "loss/add"
  input: "dense_8/weight_regularizer_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "loss/add_1"
  input: "Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Fill"
  op: "Fill"
  input: "training/Adam/gradients/Shape"
  input: "training/Adam/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/Fill"
  input: "training/Adam/gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/Mean_grad/Reshape"
  input: "training/Adam/gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/Mean_grad/Tile"
  input: "training/Adam/gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer_1/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "dense_8/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer_1/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "dense_8/weight_regularizer_1/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/mul_grad/Mul_1"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  op: "Neg"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "dense_8/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "dense_8/weight_regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer_1/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/dense_8/weight_regularizer_1/mul_grad/Mul_1"
  input: "training/Adam/gradients/dense_8/weight_regularizer_1/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer_1/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 279
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer_1/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/dense_8/weight_regularizer_1/Sum_grad/Reshape"
  input: "training/Adam/gradients/dense_8/weight_regularizer_1/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/dense_8/weight_regularizer/mul_grad/Mul_1"
  input: "training/Adam/gradients/dense_8/weight_regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/dense_8/weight_regularizer/Sum_grad/Reshape"
  input: "training/Adam/gradients/dense_8/weight_regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer_1/Square_grad/Const"
  op: "Const"
  input: "^training/Adam/gradients/dense_8/weight_regularizer_1/Sum_grad/Tile"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer_1/Square"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer_1/Square_grad/Mul"
  op: "Mul"
  input: "dense_8/weight_regularizer_1/Square/ReadVariableOp"
  input: "training/Adam/gradients/dense_8/weight_regularizer_1/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer_1/Square"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer_1/Square_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/dense_8/weight_regularizer_1/Sum_grad/Tile"
  input: "training/Adam/gradients/dense_8/weight_regularizer_1/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer_1/Square"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_9_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  input: "loss/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_9_sample_weights"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer/Square_grad/Const"
  op: "Const"
  input: "^training/Adam/gradients/dense_8/weight_regularizer/Sum_grad/Tile"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer/Square"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer/Square_grad/Mul"
  op: "Mul"
  input: "dense_8/weight_regularizer/Square/ReadVariableOp"
  input: "training/Adam/gradients/dense_8/weight_regularizer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer/Square"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/weight_regularizer/Square_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/dense_8/weight_regularizer/Sum_grad/Tile"
  input: "training/Adam/gradients/dense_8/weight_regularizer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer/Square"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Shape"
  op: "Shape"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/add"
  op: "AddV2"
  input: "loss/dense_9_loss/binary_crossentropy/Mean/reduction_indices"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/add"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/range"
  op: "Range"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/range/start"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Shape_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/range"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/mod"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Prod"
  op: "Prod"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Shape_2"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Prod_1"
  op: "Prod"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Shape_3"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Prod_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Prod"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Cast"
  op: "Cast"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Tile"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape"
  op: "Shape"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  op: "AddV2"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dense_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "dense_9_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  input: "dense_9_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_9/BiasAdd"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "loss/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/AddN"
  op: "AddN"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  input: "training/Adam/gradients/loss/dense_9_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_9/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/dense_9/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adam/gradients/AddN"
  input: "dense_9/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/dense_9/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_8/Relu"
  input: "training/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/dense_9/MatMul_grad/MatMul"
  input: "dense_8/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/dense_8/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adam/gradients/dense_8/Relu_grad/ReluGrad"
  input: "dense_8/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/dense_8/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_7/Relu"
  input: "training/Adam/gradients/dense_8/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/dense_7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/dense_8/MatMul_grad/MatMul"
  input: "dense_7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_1"
  op: "AddN"
  input: "training/Adam/gradients/dense_8/weight_regularizer_1/Square_grad/Mul_1"
  input: "training/Adam/gradients/dense_8/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer_1/Square"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/dense_7/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_2"
  op: "AddN"
  input: "training/Adam/gradients/dense_8/weight_regularizer/Square_grad/Mul_1"
  input: "training/Adam/gradients/dense_8/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8/weight_regularizer/Square"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_7/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adam/gradients/dense_7/Relu_grad/ReluGrad"
  input: "dense_7/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/dense_7/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_7_input"
  input: "training/Adam/gradients/dense_7/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "Adam/iterations"
  input: "training/Adam/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  input: "^training/Adam/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Cast/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Cast"
  op: "Cast"
  input: "training/Adam/Cast/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/add"
  op: "AddV2"
  input: "training/Adam/Cast"
  input: "training/Adam/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow"
  op: "Pow"
  input: "training/Adam/Pow/ReadVariableOp"
  input: "training/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub"
  op: "Sub"
  input: "training/Adam/sub/x"
  input: "training/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value/Minimum"
  op: "Minimum"
  input: "training/Adam/sub"
  input: "training/Adam/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value"
  op: "Maximum"
  input: "training/Adam/clip_by_value/Minimum"
  input: "training/Adam/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt"
  op: "Sqrt"
  input: "training/Adam/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow_1"
  op: "Pow"
  input: "training/Adam/Pow_1/ReadVariableOp"
  input: "training/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_1"
  op: "Sub"
  input: "training/Adam/sub_1/x"
  input: "training/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv"
  op: "RealDiv"
  input: "training/Adam/Sqrt"
  input: "training/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_1"
  input: "training/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_0_1"
    }
  }
}
node {
  name: "training/Adam/m_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_0_1"
}
node {
  name: "training/Adam/m_0_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_0_1"
  input: "training/Adam/m_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_1_1"
    }
  }
}
node {
  name: "training/Adam/m_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_1_1"
}
node {
  name: "training/Adam/m_1_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_1_1"
  input: "training/Adam/m_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_2"
  op: "Fill"
  input: "training/Adam/m_2/shape_as_tensor"
  input: "training/Adam/m_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_2_1"
    }
  }
}
node {
  name: "training/Adam/m_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_2_1"
}
node {
  name: "training/Adam/m_2_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_2_1"
  input: "training/Adam/m_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_3_1"
    }
  }
}
node {
  name: "training/Adam/m_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_3_1"
}
node {
  name: "training/Adam/m_3_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_3_1"
  input: "training/Adam/m_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_4_1"
    }
  }
}
node {
  name: "training/Adam/m_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_4_1"
}
node {
  name: "training/Adam/m_4_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_4_1"
  input: "training/Adam/m_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_5_1"
    }
  }
}
node {
  name: "training/Adam/m_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_5_1"
}
node {
  name: "training/Adam/m_5_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_5_1"
  input: "training/Adam/m_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_0_1"
    }
  }
}
node {
  name: "training/Adam/v_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_0_1"
}
node {
  name: "training/Adam/v_0_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_0_1"
  input: "training/Adam/v_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_1_1"
    }
  }
}
node {
  name: "training/Adam/v_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_1_1"
}
node {
  name: "training/Adam/v_1_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_1_1"
  input: "training/Adam/v_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_2"
  op: "Fill"
  input: "training/Adam/v_2/shape_as_tensor"
  input: "training/Adam/v_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_2_1"
    }
  }
}
node {
  name: "training/Adam/v_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_2_1"
}
node {
  name: "training/Adam/v_2_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_2_1"
  input: "training/Adam/v_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_3_1"
    }
  }
}
node {
  name: "training/Adam/v_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_3_1"
}
node {
  name: "training/Adam/v_3_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_3_1"
  input: "training/Adam/v_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_4_1"
    }
  }
}
node {
  name: "training/Adam/v_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_4_1"
}
node {
  name: "training/Adam/v_4_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_4_1"
  input: "training/Adam/v_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_5_1"
    }
  }
}
node {
  name: "training/Adam/v_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_5_1"
}
node {
  name: "training/Adam/v_5_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_5_1"
  input: "training/Adam/v_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_0/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_0"
  op: "Fill"
  input: "training/Adam/vhat_0/shape_as_tensor"
  input: "training/Adam/vhat_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_0_1"
    }
  }
}
node {
  name: "training/Adam/vhat_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_0_1"
}
node {
  name: "training/Adam/vhat_0_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_0_1"
  input: "training/Adam/vhat_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_1"
  op: "Fill"
  input: "training/Adam/vhat_1/shape_as_tensor"
  input: "training/Adam/vhat_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_1_1"
    }
  }
}
node {
  name: "training/Adam/vhat_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_1_1"
}
node {
  name: "training/Adam/vhat_1_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_1_1"
  input: "training/Adam/vhat_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_2"
  op: "Fill"
  input: "training/Adam/vhat_2/shape_as_tensor"
  input: "training/Adam/vhat_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_2_1"
    }
  }
}
node {
  name: "training/Adam/vhat_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_2_1"
}
node {
  name: "training/Adam/vhat_2_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_2_1"
  input: "training/Adam/vhat_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_3/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_3"
  op: "Fill"
  input: "training/Adam/vhat_3/shape_as_tensor"
  input: "training/Adam/vhat_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_3_1"
    }
  }
}
node {
  name: "training/Adam/vhat_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_3_1"
}
node {
  name: "training/Adam/vhat_3_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_3_1"
  input: "training/Adam/vhat_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_4"
  op: "Fill"
  input: "training/Adam/vhat_4/shape_as_tensor"
  input: "training/Adam/vhat_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_4_1"
    }
  }
}
node {
  name: "training/Adam/vhat_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_4_1"
}
node {
  name: "training/Adam/vhat_4_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_4_1"
  input: "training/Adam/vhat_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_5/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_5"
  op: "Fill"
  input: "training/Adam/vhat_5/shape_as_tensor"
  input: "training/Adam/vhat_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_5_1"
    }
  }
}
node {
  name: "training/Adam/vhat_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_5_1"
}
node {
  name: "training/Adam/vhat_5_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_5_1"
  input: "training/Adam/vhat_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_1"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_2"
  input: "training/Adam/mul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_2"
  op: "Sub"
  input: "training/Adam/sub_2/x"
  input: "training/Adam/ReadVariableOp_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_2"
  op: "Mul"
  input: "training/Adam/sub_2"
  input: "training/Adam/gradients/dense_7/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_1"
  op: "AddV2"
  input: "training/Adam/mul_1"
  input: "training/Adam/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_3"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_4"
  input: "training/Adam/mul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_3"
  op: "Sub"
  input: "training/Adam/sub_3/x"
  input: "training/Adam/ReadVariableOp_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square"
  op: "Square"
  input: "training/Adam/gradients/dense_7/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_4"
  op: "Mul"
  input: "training/Adam/sub_3"
  input: "training/Adam/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_2"
  op: "AddV2"
  input: "training/Adam/mul_3"
  input: "training/Adam/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_5"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training/Adam/add_2"
  input: "training/Adam/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_1"
  op: "Maximum"
  input: "training/Adam/clip_by_value_1/Minimum"
  input: "training/Adam/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_1"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_3"
  op: "AddV2"
  input: "training/Adam/Sqrt_1"
  input: "training/Adam/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_1"
  op: "RealDiv"
  input: "training/Adam/mul_5"
  input: "training/Adam/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "dense_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_4"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_6"
  input: "training/Adam/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/Adam/m_0_1"
  input: "training/Adam/add_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "training/Adam/m_0_1"
  input: "^training/Adam/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "training/Adam/v_0_1"
  input: "training/Adam/add_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "training/Adam/v_0_1"
  input: "^training/Adam/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "dense_7/kernel"
  input: "training/Adam/sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "dense_7/kernel"
  input: "^training/Adam/AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_6"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_10"
  input: "training/Adam/mul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_5"
  op: "Sub"
  input: "training/Adam/sub_5/x"
  input: "training/Adam/ReadVariableOp_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_7"
  op: "Mul"
  input: "training/Adam/sub_5"
  input: "training/Adam/gradients/dense_7/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_4"
  op: "AddV2"
  input: "training/Adam/mul_6"
  input: "training/Adam/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_8"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_12"
  input: "training/Adam/mul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_6"
  op: "Sub"
  input: "training/Adam/sub_6/x"
  input: "training/Adam/ReadVariableOp_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_1"
  op: "Square"
  input: "training/Adam/gradients/dense_7/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_9"
  op: "Mul"
  input: "training/Adam/sub_6"
  input: "training/Adam/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_5"
  op: "AddV2"
  input: "training/Adam/mul_8"
  input: "training/Adam/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_10"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training/Adam/add_5"
  input: "training/Adam/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_2"
  op: "Maximum"
  input: "training/Adam/clip_by_value_2/Minimum"
  input: "training/Adam/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_2"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_6"
  op: "AddV2"
  input: "training/Adam/Sqrt_2"
  input: "training/Adam/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_2"
  op: "RealDiv"
  input: "training/Adam/mul_10"
  input: "training/Adam/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "dense_7/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_7"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_14"
  input: "training/Adam/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training/Adam/m_1_1"
  input: "training/Adam/add_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "training/Adam/m_1_1"
  input: "^training/Adam/AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "training/Adam/v_1_1"
  input: "training/Adam/add_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "training/Adam/v_1_1"
  input: "^training/Adam/AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "dense_7/bias"
  input: "training/Adam/sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "dense_7/bias"
  input: "^training/Adam/AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_11"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_18"
  input: "training/Adam/mul_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_8"
  op: "Sub"
  input: "training/Adam/sub_8/x"
  input: "training/Adam/ReadVariableOp_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_12"
  op: "Mul"
  input: "training/Adam/sub_8"
  input: "training/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_7"
  op: "AddV2"
  input: "training/Adam/mul_11"
  input: "training/Adam/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_13"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_20"
  input: "training/Adam/mul_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_9"
  op: "Sub"
  input: "training/Adam/sub_9/x"
  input: "training/Adam/ReadVariableOp_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_2"
  op: "Square"
  input: "training/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_14"
  op: "Mul"
  input: "training/Adam/sub_9"
  input: "training/Adam/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_8"
  op: "AddV2"
  input: "training/Adam/mul_13"
  input: "training/Adam/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_15"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training/Adam/add_8"
  input: "training/Adam/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_3"
  op: "Maximum"
  input: "training/Adam/clip_by_value_3/Minimum"
  input: "training/Adam/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_3"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_9"
  op: "AddV2"
  input: "training/Adam/Sqrt_3"
  input: "training/Adam/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_3"
  op: "RealDiv"
  input: "training/Adam/mul_15"
  input: "training/Adam/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "dense_8/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_10"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_22"
  input: "training/Adam/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "training/Adam/m_2_1"
  input: "training/Adam/add_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "training/Adam/m_2_1"
  input: "^training/Adam/AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "training/Adam/v_2_1"
  input: "training/Adam/add_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "training/Adam/v_2_1"
  input: "^training/Adam/AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dense_8/kernel"
  input: "training/Adam/sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "dense_8/kernel"
  input: "^training/Adam/AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_16"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_26"
  input: "training/Adam/mul_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_11"
  op: "Sub"
  input: "training/Adam/sub_11/x"
  input: "training/Adam/ReadVariableOp_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_17"
  op: "Mul"
  input: "training/Adam/sub_11"
  input: "training/Adam/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_10"
  op: "AddV2"
  input: "training/Adam/mul_16"
  input: "training/Adam/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_18"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_28"
  input: "training/Adam/mul_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_12"
  op: "Sub"
  input: "training/Adam/sub_12/x"
  input: "training/Adam/ReadVariableOp_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_3"
  op: "Square"
  input: "training/Adam/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_19"
  op: "Mul"
  input: "training/Adam/sub_12"
  input: "training/Adam/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_11"
  op: "AddV2"
  input: "training/Adam/mul_18"
  input: "training/Adam/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_20"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training/Adam/add_11"
  input: "training/Adam/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_4"
  op: "Maximum"
  input: "training/Adam/clip_by_value_4/Minimum"
  input: "training/Adam/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_4"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_12"
  op: "AddV2"
  input: "training/Adam/Sqrt_4"
  input: "training/Adam/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_4"
  op: "RealDiv"
  input: "training/Adam/mul_20"
  input: "training/Adam/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "dense_8/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_13"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_30"
  input: "training/Adam/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training/Adam/m_3_1"
  input: "training/Adam/add_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "training/Adam/m_3_1"
  input: "^training/Adam/AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training/Adam/v_3_1"
  input: "training/Adam/add_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "training/Adam/v_3_1"
  input: "^training/Adam/AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dense_8/bias"
  input: "training/Adam/sub_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "dense_8/bias"
  input: "^training/Adam/AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_21"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_34"
  input: "training/Adam/mul_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_14"
  op: "Sub"
  input: "training/Adam/sub_14/x"
  input: "training/Adam/ReadVariableOp_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_22"
  op: "Mul"
  input: "training/Adam/sub_14"
  input: "training/Adam/gradients/dense_9/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_13"
  op: "AddV2"
  input: "training/Adam/mul_21"
  input: "training/Adam/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_23"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_36"
  input: "training/Adam/mul_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_15"
  op: "Sub"
  input: "training/Adam/sub_15/x"
  input: "training/Adam/ReadVariableOp_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_4"
  op: "Square"
  input: "training/Adam/gradients/dense_9/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_24"
  op: "Mul"
  input: "training/Adam/sub_15"
  input: "training/Adam/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_14"
  op: "AddV2"
  input: "training/Adam/mul_23"
  input: "training/Adam/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_25"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training/Adam/add_14"
  input: "training/Adam/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_5"
  op: "Maximum"
  input: "training/Adam/clip_by_value_5/Minimum"
  input: "training/Adam/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_5"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_15"
  op: "AddV2"
  input: "training/Adam/Sqrt_5"
  input: "training/Adam/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_5"
  op: "RealDiv"
  input: "training/Adam/mul_25"
  input: "training/Adam/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "dense_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_16"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_38"
  input: "training/Adam/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training/Adam/m_4_1"
  input: "training/Adam/add_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "training/Adam/m_4_1"
  input: "^training/Adam/AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training/Adam/v_4_1"
  input: "training/Adam/add_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "training/Adam/v_4_1"
  input: "^training/Adam/AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "dense_9/kernel"
  input: "training/Adam/sub_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "dense_9/kernel"
  input: "^training/Adam/AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_26"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_42"
  input: "training/Adam/mul_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_17"
  op: "Sub"
  input: "training/Adam/sub_17/x"
  input: "training/Adam/ReadVariableOp_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_27"
  op: "Mul"
  input: "training/Adam/sub_17"
  input: "training/Adam/gradients/dense_9/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_16"
  op: "AddV2"
  input: "training/Adam/mul_26"
  input: "training/Adam/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_28"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_44"
  input: "training/Adam/mul_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_18"
  op: "Sub"
  input: "training/Adam/sub_18/x"
  input: "training/Adam/ReadVariableOp_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_5"
  op: "Square"
  input: "training/Adam/gradients/dense_9/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_29"
  op: "Mul"
  input: "training/Adam/sub_18"
  input: "training/Adam/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_17"
  op: "AddV2"
  input: "training/Adam/mul_28"
  input: "training/Adam/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_30"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training/Adam/add_17"
  input: "training/Adam/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_6"
  op: "Maximum"
  input: "training/Adam/clip_by_value_6/Minimum"
  input: "training/Adam/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_6"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_18"
  op: "AddV2"
  input: "training/Adam/Sqrt_6"
  input: "training/Adam/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_6"
  op: "RealDiv"
  input: "training/Adam/mul_30"
  input: "training/Adam/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "dense_9/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_19"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_46"
  input: "training/Adam/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training/Adam/m_5_1"
  input: "training/Adam/add_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "training/Adam/m_5_1"
  input: "^training/Adam/AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training/Adam/v_5_1"
  input: "training/Adam/add_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "training/Adam/v_5_1"
  input: "^training/Adam/AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "dense_9/bias"
  input: "training/Adam/sub_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "dense_9/bias"
  input: "^training/Adam/AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/decay"
}
node {
  name: "training/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_5_1"
}
node {
  name: "training/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_0_1"
}
node {
  name: "training/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_1_1"
}
node {
  name: "training/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_4_1"
}
node {
  name: "training/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "Adam/iterations"
}
node {
  name: "training/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "training/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_1_1"
}
node {
  name: "training/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_3_1"
}
node {
  name: "training/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "count_1"
}
node {
  name: "training/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_0_1"
}
node {
  name: "training/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_2_1"
}
node {
  name: "training/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_0_1"
}
node {
  name: "training/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "Adam/beta_2"
}
node {
  name: "training/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "total_1"
}
node {
  name: "training/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_1_1"
}
node {
  name: "training/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_4_1"
}
node {
  name: "training/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_3_1"
}
node {
  name: "training/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_5_1"
}
node {
  name: "training/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_3_1"
}
node {
  name: "training/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "Adam/learning_rate"
}
node {
  name: "training/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "training/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_2_1"
}
node {
  name: "training/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_4_1"
}
node {
  name: "training/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_2_1"
}
node {
  name: "training/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_5_1"
}
node {
  name: "training/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "Adam/beta_1"
}
node {
  name: "training/init"
  op: "NoOp"
  input: "^Adam/beta_1/Assign"
  input: "^Adam/beta_2/Assign"
  input: "^Adam/decay/Assign"
  input: "^Adam/iterations/Assign"
  input: "^Adam/learning_rate/Assign"
  input: "^count/Assign"
  input: "^count_1/Assign"
  input: "^total/Assign"
  input: "^total_1/Assign"
  input: "^training/Adam/m_0_1/Assign"
  input: "^training/Adam/m_1_1/Assign"
  input: "^training/Adam/m_2_1/Assign"
  input: "^training/Adam/m_3_1/Assign"
  input: "^training/Adam/m_4_1/Assign"
  input: "^training/Adam/m_5_1/Assign"
  input: "^training/Adam/v_0_1/Assign"
  input: "^training/Adam/v_1_1/Assign"
  input: "^training/Adam/v_2_1/Assign"
  input: "^training/Adam/v_3_1/Assign"
  input: "^training/Adam/v_4_1/Assign"
  input: "^training/Adam/v_5_1/Assign"
  input: "^training/Adam/vhat_0_1/Assign"
  input: "^training/Adam/vhat_1_1/Assign"
  input: "^training/Adam/vhat_2_1/Assign"
  input: "^training/Adam/vhat_3_1/Assign"
  input: "^training/Adam/vhat_4_1/Assign"
  input: "^training/Adam/vhat_5_1/Assign"
}
node {
  name: "training/group_deps"
  op: "NoOp"
  input: "^Mean"
  input: "^metrics/accuracy/AssignAddVariableOp"
  input: "^metrics/accuracy/AssignAddVariableOp_1"
  input: "^metrics/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics/binary_crossentropy/AssignAddVariableOp_1"
  input: "^training/Adam/AssignAddVariableOp"
  input: "^training/Adam/AssignVariableOp"
  input: "^training/Adam/AssignVariableOp_1"
  input: "^training/Adam/AssignVariableOp_10"
  input: "^training/Adam/AssignVariableOp_11"
  input: "^training/Adam/AssignVariableOp_12"
  input: "^training/Adam/AssignVariableOp_13"
  input: "^training/Adam/AssignVariableOp_14"
  input: "^training/Adam/AssignVariableOp_15"
  input: "^training/Adam/AssignVariableOp_16"
  input: "^training/Adam/AssignVariableOp_17"
  input: "^training/Adam/AssignVariableOp_2"
  input: "^training/Adam/AssignVariableOp_3"
  input: "^training/Adam/AssignVariableOp_4"
  input: "^training/Adam/AssignVariableOp_5"
  input: "^training/Adam/AssignVariableOp_6"
  input: "^training/Adam/AssignVariableOp_7"
  input: "^training/Adam/AssignVariableOp_8"
  input: "^training/Adam/AssignVariableOp_9"
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "Adam/iterations"
  input: "Placeholder_6"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  input: "^AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "training/Adam/m_0_1"
  input: "Placeholder_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "training/Adam/m_0_1"
  input: "^AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "training/Adam/m_1_1"
  input: "Placeholder_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "training/Adam/m_1_1"
  input: "^AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training/Adam/m_2_1"
  input: "Placeholder_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "training/Adam/m_2_1"
  input: "^AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training/Adam/m_3_1"
  input: "Placeholder_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "training/Adam/m_3_1"
  input: "^AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "training/Adam/m_4_1"
  input: "Placeholder_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "training/Adam/m_4_1"
  input: "^AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training/Adam/m_5_1"
  input: "Placeholder_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "training/Adam/m_5_1"
  input: "^AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training/Adam/v_0_1"
  input: "Placeholder_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "training/Adam/v_0_1"
  input: "^AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "training/Adam/v_1_1"
  input: "Placeholder_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "training/Adam/v_1_1"
  input: "^AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training/Adam/v_2_1"
  input: "Placeholder_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "training/Adam/v_2_1"
  input: "^AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training/Adam/v_3_1"
  input: "Placeholder_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "training/Adam/v_3_1"
  input: "^AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "training/Adam/v_4_1"
  input: "Placeholder_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "training/Adam/v_4_1"
  input: "^AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "training/Adam/v_5_1"
  input: "Placeholder_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "training/Adam/v_5_1"
  input: "^AssignVariableOp_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_0_1"
  input: "Placeholder_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_0_1"
  input: "^AssignVariableOp_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_1_1"
  input: "Placeholder_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_1_1"
  input: "^AssignVariableOp_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_2_1"
  input: "Placeholder_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_2_1"
  input: "^AssignVariableOp_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_3_1"
  input: "Placeholder_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_3_1"
  input: "^AssignVariableOp_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_4_1"
  input: "Placeholder_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_4_1"
  input: "^AssignVariableOp_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_5_1"
  input: "Placeholder_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_5_1"
  input: "^AssignVariableOp_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_10_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "dense_10/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "dense_10/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_10/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_10/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_10/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9573430
    }
  }
}
node {
  name: "dense_10/random_uniform/sub"
  op: "Sub"
  input: "dense_10/random_uniform/max"
  input: "dense_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_10/random_uniform/mul"
  op: "Mul"
  input: "dense_10/random_uniform/RandomUniform"
  input: "dense_10/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_10/random_uniform"
  op: "Add"
  input: "dense_10/random_uniform/mul"
  input: "dense_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_10/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_10/kernel"
    }
  }
}
node {
  name: "dense_10/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_10/kernel"
}
node {
  name: "dense_10/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_10/kernel"
  input: "dense_10/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_10/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_10/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_10/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_10/bias"
    }
  }
}
node {
  name: "dense_10/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_10/bias"
}
node {
  name: "dense_10/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_10/bias"
  input: "dense_10/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_10/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_10/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_10/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_10/MatMul"
  op: "MatMul"
  input: "dense_10_input"
  input: "dense_10/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_10/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_10/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_10/BiasAdd"
  op: "BiasAdd"
  input: "dense_10/MatMul"
  input: "dense_10/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_10/Sigmoid"
  op: "Sigmoid"
  input: "dense_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "dense_11/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_11/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_11/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_11/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5362249
    }
  }
}
node {
  name: "dense_11/random_uniform/sub"
  op: "Sub"
  input: "dense_11/random_uniform/max"
  input: "dense_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/random_uniform/mul"
  op: "Mul"
  input: "dense_11/random_uniform/RandomUniform"
  input: "dense_11/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/random_uniform"
  op: "Add"
  input: "dense_11/random_uniform/mul"
  input: "dense_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_11/kernel"
    }
  }
}
node {
  name: "dense_11/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_11/kernel"
}
node {
  name: "dense_11/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_11/kernel"
  input: "dense_11/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_11/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/weight_regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_11/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/weight_regularizer/Square"
  op: "Square"
  input: "dense_11/weight_regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_11/weight_regularizer/Sum"
  op: "Sum"
  input: "dense_11/weight_regularizer/Square"
  input: "dense_11/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_11/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_11/weight_regularizer/mul"
  op: "Mul"
  input: "dense_11/weight_regularizer/mul/x"
  input: "dense_11/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_11/weight_regularizer/add"
  op: "AddV2"
  input: "dense_11/weight_regularizer/add/x"
  input: "dense_11/weight_regularizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_11/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_11/bias"
    }
  }
}
node {
  name: "dense_11/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_11/bias"
}
node {
  name: "dense_11/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_11/bias"
  input: "dense_11/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_11/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/weight_regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_11/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/weight_regularizer_1/Square"
  op: "Square"
  input: "dense_11/weight_regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/weight_regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense_11/weight_regularizer_1/Sum"
  op: "Sum"
  input: "dense_11/weight_regularizer_1/Square"
  input: "dense_11/weight_regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_11/weight_regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_11/weight_regularizer_1/mul"
  op: "Mul"
  input: "dense_11/weight_regularizer_1/mul/x"
  input: "dense_11/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/weight_regularizer_1/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_11/weight_regularizer_1/add"
  op: "AddV2"
  input: "dense_11/weight_regularizer_1/add/x"
  input: "dense_11/weight_regularizer_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_11/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/MatMul"
  op: "MatMul"
  input: "dense_10/Sigmoid"
  input: "dense_11/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_11/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_11/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_11/BiasAdd"
  op: "BiasAdd"
  input: "dense_11/MatMul"
  input: "dense_11/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_11/Relu"
  op: "Relu"
  input: "dense_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\027\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_12/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_12/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_12/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_12/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1421466
    }
  }
}
node {
  name: "dense_12/random_uniform/sub"
  op: "Sub"
  input: "dense_12/random_uniform/max"
  input: "dense_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12/random_uniform/mul"
  op: "Mul"
  input: "dense_12/random_uniform/RandomUniform"
  input: "dense_12/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12/random_uniform"
  op: "Add"
  input: "dense_12/random_uniform/mul"
  input: "dense_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_12/kernel"
    }
  }
}
node {
  name: "dense_12/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_12/kernel"
}
node {
  name: "dense_12/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_12/kernel"
  input: "dense_12/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_12/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_12/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_12/bias"
    }
  }
}
node {
  name: "dense_12/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_12/bias"
}
node {
  name: "dense_12/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_12/bias"
  input: "dense_12/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_12/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12/MatMul"
  op: "MatMul"
  input: "dense_11/Relu"
  input: "dense_12/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_12/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_12/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12/BiasAdd"
  op: "BiasAdd"
  input: "dense_12/MatMul"
  input: "dense_12/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_12/Sigmoid"
  op: "Sigmoid"
  input: "dense_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "dense_10/kernel"
  input: "Placeholder_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "dense_10/kernel"
  input: "^AssignVariableOp_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "dense_10/bias"
  input: "Placeholder_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "dense_10/bias"
  input: "^AssignVariableOp_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "dense_11/kernel"
  input: "Placeholder_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "dense_11/kernel"
  input: "^AssignVariableOp_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "dense_11/bias"
  input: "Placeholder_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "dense_11/bias"
  input: "^AssignVariableOp_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "dense_12/kernel"
  input: "Placeholder_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "dense_12/kernel"
  input: "^AssignVariableOp_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "dense_12/bias"
  input: "Placeholder_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "dense_12/bias"
  input: "^AssignVariableOp_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "dense_12/bias"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "dense_10/kernel"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dense_11/bias"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dense_12/kernel"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dense_10/bias"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dense_11/kernel"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^dense_10/bias/Assign"
  input: "^dense_10/kernel/Assign"
  input: "^dense_11/bias/Assign"
  input: "^dense_11/kernel/Assign"
  input: "^dense_12/bias/Assign"
  input: "^dense_12/kernel/Assign"
}
node {
  name: "Adam_1/iterations/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam_1/iterations"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_1/iterations"
    }
  }
}
node {
  name: "Adam_1/iterations/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_1/iterations"
}
node {
  name: "Adam_1/iterations/Assign"
  op: "AssignVariableOp"
  input: "Adam_1/iterations"
  input: "Adam_1/iterations/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam_1/iterations/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_1/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam_1/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Adam_1/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_1/learning_rate"
    }
  }
}
node {
  name: "Adam_1/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_1/learning_rate"
}
node {
  name: "Adam_1/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "Adam_1/learning_rate"
  input: "Adam_1/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_1/beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_1/beta_1"
    }
  }
}
node {
  name: "Adam_1/beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_1/beta_1"
}
node {
  name: "Adam_1/beta_1/Assign"
  op: "AssignVariableOp"
  input: "Adam_1/beta_1"
  input: "Adam_1/beta_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam_1/beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_1/beta_2"
    }
  }
}
node {
  name: "Adam_1/beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_1/beta_2"
}
node {
  name: "Adam_1/beta_2/Assign"
  op: "AssignVariableOp"
  input: "Adam_1/beta_2"
  input: "Adam_1/beta_2/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam_1/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_1/decay"
    }
  }
}
node {
  name: "Adam_1/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_1/decay"
}
node {
  name: "Adam_1/decay/Assign"
  op: "AssignVariableOp"
  input: "Adam_1/decay"
  input: "Adam_1/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_1/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_12_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "dense_12_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_2"
    }
  }
}
node {
  name: "total_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_2"
}
node {
  name: "total_2/Assign"
  op: "AssignVariableOp"
  input: "total_2"
  input: "Const_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_2"
    }
  }
}
node {
  name: "count_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_2"
}
node {
  name: "count_2/Assign"
  op: "AssignVariableOp"
  input: "count_2"
  input: "Const_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_3"
    }
  }
}
node {
  name: "total_3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_3"
}
node {
  name: "total_3/Assign"
  op: "AssignVariableOp"
  input: "total_3"
  input: "Const_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_3"
    }
  }
}
node {
  name: "count_3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_3"
}
node {
  name: "count_3/Assign"
  op: "AssignVariableOp"
  input: "count_3"
  input: "Const_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/accuracy/Round"
  op: "Round"
  input: "dense_12/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/accuracy/Equal"
  op: "Equal"
  input: "dense_12_target"
  input: "metrics_1/accuracy/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics_1/accuracy/Cast"
  op: "Cast"
  input: "metrics_1/accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/accuracy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_1/accuracy/Mean"
  op: "Mean"
  input: "metrics_1/accuracy/Cast"
  input: "metrics_1/accuracy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_1/accuracy/Sum"
  op: "Sum"
  input: "metrics_1/accuracy/Mean"
  input: "metrics_1/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/accuracy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_2"
  input: "metrics_1/accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/accuracy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_2"
  input: "^metrics_1/accuracy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/accuracy/Size"
  op: "Size"
  input: "metrics_1/accuracy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_1/accuracy/Cast_1"
  op: "Cast"
  input: "metrics_1/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/accuracy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_2"
  input: "metrics_1/accuracy/Cast_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/accuracy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_2"
  input: "^metrics_1/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/accuracy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_2"
  input: "^metrics_1/accuracy/AssignAddVariableOp"
  input: "^metrics_1/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/accuracy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_2"
  input: "^metrics_1/accuracy/AssignAddVariableOp"
  input: "^metrics_1/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/accuracy/truediv"
  op: "RealDiv"
  input: "metrics_1/accuracy/ReadVariableOp_2"
  input: "metrics_1/accuracy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/accuracy/Identity"
  op: "Identity"
  input: "metrics_1/accuracy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_12/BiasAdd"
  input: "metrics_1/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "metrics_1/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_12/BiasAdd"
  input: "metrics_1/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "metrics_1/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "metrics_1/binary_crossentropy/logistic_loss/Neg"
  input: "dense_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_12/BiasAdd"
  input: "dense_12_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "metrics_1/binary_crossentropy/logistic_loss/Select"
  input: "metrics_1/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "metrics_1/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "metrics_1/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "metrics_1/binary_crossentropy/logistic_loss/sub"
  input: "metrics_1/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/Mean"
  op: "Mean"
  input: "metrics_1/binary_crossentropy/logistic_loss"
  input: "metrics_1/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/Sum"
  op: "Sum"
  input: "metrics_1/binary_crossentropy/Mean"
  input: "metrics_1/binary_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_3"
  input: "metrics_1/binary_crossentropy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_3"
  input: "^metrics_1/binary_crossentropy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/Size"
  op: "Size"
  input: "metrics_1/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/Cast"
  op: "Cast"
  input: "metrics_1/binary_crossentropy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_3"
  input: "metrics_1/binary_crossentropy/Cast"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_3"
  input: "^metrics_1/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_3"
  input: "^metrics_1/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_1/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_3"
  input: "^metrics_1/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_1/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/truediv"
  op: "RealDiv"
  input: "metrics_1/binary_crossentropy/ReadVariableOp_2"
  input: "metrics_1/binary_crossentropy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/binary_crossentropy/Identity"
  op: "Identity"
  input: "metrics_1/binary_crossentropy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_12/BiasAdd"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_12/BiasAdd"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Neg"
  input: "dense_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_12/BiasAdd"
  input: "dense_12_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/Mean"
  op: "Mean"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
  input: "loss_1/dense_12_loss/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
  op: "Mul"
  input: "dense_12_sample_weights"
  input: "loss_1/dense_12_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum"
  op: "Sum"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  op: "Size"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
  op: "RealDiv"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_1/mul"
  op: "Mul"
  input: "loss_1/mul/x"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/add"
  op: "AddV2"
  input: "loss_1/mul"
  input: "dense_11/weight_regularizer/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/add_1"
  op: "AddV2"
  input: "loss_1/add"
  input: "dense_11/weight_regularizer_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "loss_1/add_1"
  input: "Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/Fill"
  op: "Fill"
  input: "training_1/Adam/gradients/Shape"
  input: "training_1/Adam/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "training_1/Adam/gradients/Fill"
  input: "training_1/Adam/gradients/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/Mean_1_grad/Tile"
  op: "Tile"
  input: "training_1/Adam/gradients/Mean_1_grad/Reshape"
  input: "training_1/Adam/gradients/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "training_1/Adam/gradients/Mean_1_grad/Tile"
  input: "training_1/Adam/gradients/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/mul_grad/Mul"
  op: "Mul"
  input: "training_1/Adam/gradients/Mean_1_grad/truediv"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/mul_grad/Mul_1"
  op: "Mul"
  input: "training_1/Adam/gradients/Mean_1_grad/truediv"
  input: "loss_1/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer_1/mul_grad/Mul"
  op: "Mul"
  input: "training_1/Adam/gradients/Mean_1_grad/truediv"
  input: "dense_11/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer_1/mul_grad/Mul_1"
  op: "Mul"
  input: "training_1/Adam/gradients/Mean_1_grad/truediv"
  input: "dense_11/weight_regularizer_1/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training_1/Adam/gradients/loss_1/mul_grad/Mul_1"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  op: "Neg"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  op: "Mul"
  input: "training_1/Adam/gradients/loss_1/mul_grad/Mul_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training_1/Adam/gradients/Mean_1_grad/truediv"
  input: "dense_11/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training_1/Adam/gradients/Mean_1_grad/truediv"
  input: "dense_11/weight_regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer_1/mul_grad/Mul_1"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 279
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Sum_grad/Tile"
  op: "Tile"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Sum_grad/Reshape"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer/mul_grad/Mul_1"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer/Sum_grad/Reshape"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Square_grad/Const"
  op: "Const"
  input: "^training_1/Adam/gradients/dense_11/weight_regularizer_1/Sum_grad/Tile"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer_1/Square"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Square_grad/Mul"
  op: "Mul"
  input: "dense_11/weight_regularizer_1/Square/ReadVariableOp"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer_1/Square"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Square_grad/Mul_1"
  op: "Mul"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Sum_grad/Tile"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer_1/Square"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_12_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss_1/dense_12_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  input: "loss_1/dense_12_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_12_sample_weights"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer/Square_grad/Const"
  op: "Const"
  input: "^training_1/Adam/gradients/dense_11/weight_regularizer/Sum_grad/Tile"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer/Square"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer/Square_grad/Mul"
  op: "Mul"
  input: "dense_11/weight_regularizer/Square/ReadVariableOp"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer/Square"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/weight_regularizer/Square_grad/Mul_1"
  op: "Mul"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer/Sum_grad/Tile"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer/Square"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Shape"
  op: "Shape"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/add"
  op: "AddV2"
  input: "loss_1/dense_12_loss/binary_crossentropy/Mean/reduction_indices"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/mod"
  op: "FloorMod"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/add"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/range"
  op: "Range"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/range/start"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Size"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Fill"
  op: "Fill"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Shape_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/range"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/mod"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Maximum"
  op: "Maximum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Reshape"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Tile"
  op: "Tile"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss_1/dense_12_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Prod"
  op: "Prod"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Shape_2"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Prod_1"
  op: "Prod"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Shape_3"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Prod_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Prod"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Cast"
  op: "Cast"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/truediv"
  op: "RealDiv"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Tile"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Shape"
  op: "Shape"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Shape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Sum"
  op: "Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  op: "AddV2"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dense_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "dense_12_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  input: "dense_12_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_12/BiasAdd"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Exp"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "loss_1/dense_12_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Neg"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/AddN"
  op: "AddN"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  input: "training_1/Adam/gradients/loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/dense_12_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_12/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_1/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_12/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_12/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_1/Adam/gradients/AddN"
  input: "dense_12/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_12/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_12/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_11/Relu"
  input: "training_1/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_12/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_1/Adam/gradients/dense_12/MatMul_grad/MatMul"
  input: "dense_11/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/Relu"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_1/Adam/gradients/dense_11/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_1/Adam/gradients/dense_11/Relu_grad/ReluGrad"
  input: "dense_11/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_11/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_10/Sigmoid"
  input: "training_1/Adam/gradients/dense_11/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_10/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "dense_10/Sigmoid"
  input: "training_1/Adam/gradients/dense_11/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_10/Sigmoid"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/AddN_1"
  op: "AddN"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer_1/Square_grad/Mul_1"
  input: "training_1/Adam/gradients/dense_11/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer_1/Square"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_10/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_1/Adam/gradients/dense_10/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_10/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_1/Adam/gradients/AddN_2"
  op: "AddN"
  input: "training_1/Adam/gradients/dense_11/weight_regularizer/Square_grad/Mul_1"
  input: "training_1/Adam/gradients/dense_11/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_11/weight_regularizer/Square"
      }
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_10/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_1/Adam/gradients/dense_10/Sigmoid_grad/SigmoidGrad"
  input: "dense_10/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_10/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_1/Adam/gradients/dense_10/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_10_input"
  input: "training_1/Adam/gradients/dense_10/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_10/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "Adam_1/iterations"
  input: "training_1/Adam/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_1/iterations"
  input: "^training_1/Adam/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_1/Adam/Cast/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_1/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_1/Adam/Cast"
  op: "Cast"
  input: "training_1/Adam/Cast/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training_1/Adam/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/add"
  op: "AddV2"
  input: "training_1/Adam/Cast"
  input: "training_1/Adam/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Pow/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Pow"
  op: "Pow"
  input: "training_1/Adam/Pow/ReadVariableOp"
  input: "training_1/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub"
  op: "Sub"
  input: "training_1/Adam/sub/x"
  input: "training_1/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value/Minimum"
  op: "Minimum"
  input: "training_1/Adam/sub"
  input: "training_1/Adam/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value"
  op: "Maximum"
  input: "training_1/Adam/clip_by_value/Minimum"
  input: "training_1/Adam/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Sqrt"
  op: "Sqrt"
  input: "training_1/Adam/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Pow_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Pow_1"
  op: "Pow"
  input: "training_1/Adam/Pow_1/ReadVariableOp"
  input: "training_1/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_1"
  op: "Sub"
  input: "training_1/Adam/sub_1/x"
  input: "training_1/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/truediv"
  op: "RealDiv"
  input: "training_1/Adam/Sqrt"
  input: "training_1/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_1"
  input: "training_1/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/m_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/m_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/m_0_1"
    }
  }
}
node {
  name: "training_1/Adam/m_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_0_1"
}
node {
  name: "training_1/Adam/m_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_0_1"
  input: "training_1/Adam/m_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/m_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/m_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/m_1_1"
    }
  }
}
node {
  name: "training_1/Adam/m_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_1_1"
}
node {
  name: "training_1/Adam/m_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_1_1"
  input: "training_1/Adam/m_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "training_1/Adam/m_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/m_2"
  op: "Fill"
  input: "training_1/Adam/m_2/shape_as_tensor"
  input: "training_1/Adam/m_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/m_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/m_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/m_2_1"
    }
  }
}
node {
  name: "training_1/Adam/m_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_2_1"
}
node {
  name: "training_1/Adam/m_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_2_1"
  input: "training_1/Adam/m_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/m_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/m_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/m_3_1"
    }
  }
}
node {
  name: "training_1/Adam/m_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_3_1"
}
node {
  name: "training_1/Adam/m_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_3_1"
  input: "training_1/Adam/m_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/m_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/m_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/m_4_1"
    }
  }
}
node {
  name: "training_1/Adam/m_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_4_1"
}
node {
  name: "training_1/Adam/m_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_4_1"
  input: "training_1/Adam/m_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/m_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/m_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/m_5_1"
    }
  }
}
node {
  name: "training_1/Adam/m_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_5_1"
}
node {
  name: "training_1/Adam/m_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_5_1"
  input: "training_1/Adam/m_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/m_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/v_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/v_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/v_0_1"
    }
  }
}
node {
  name: "training_1/Adam/v_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_0_1"
}
node {
  name: "training_1/Adam/v_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_0_1"
  input: "training_1/Adam/v_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/v_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/v_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/v_1_1"
    }
  }
}
node {
  name: "training_1/Adam/v_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_1_1"
}
node {
  name: "training_1/Adam/v_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_1_1"
  input: "training_1/Adam/v_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "training_1/Adam/v_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/v_2"
  op: "Fill"
  input: "training_1/Adam/v_2/shape_as_tensor"
  input: "training_1/Adam/v_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/v_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/v_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/v_2_1"
    }
  }
}
node {
  name: "training_1/Adam/v_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_2_1"
}
node {
  name: "training_1/Adam/v_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_2_1"
  input: "training_1/Adam/v_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/v_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/v_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/v_3_1"
    }
  }
}
node {
  name: "training_1/Adam/v_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_3_1"
}
node {
  name: "training_1/Adam/v_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_3_1"
  input: "training_1/Adam/v_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/v_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/v_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/v_4_1"
    }
  }
}
node {
  name: "training_1/Adam/v_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_4_1"
}
node {
  name: "training_1/Adam/v_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_4_1"
  input: "training_1/Adam/v_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/v_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/v_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/v_5_1"
    }
  }
}
node {
  name: "training_1/Adam/v_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_5_1"
}
node {
  name: "training_1/Adam/v_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_5_1"
  input: "training_1/Adam/v_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/v_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_0/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_0"
  op: "Fill"
  input: "training_1/Adam/vhat_0/shape_as_tensor"
  input: "training_1/Adam/vhat_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/vhat_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/vhat_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/vhat_0_1"
    }
  }
}
node {
  name: "training_1/Adam/vhat_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_0_1"
}
node {
  name: "training_1/Adam/vhat_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_0_1"
  input: "training_1/Adam/vhat_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_1"
  op: "Fill"
  input: "training_1/Adam/vhat_1/shape_as_tensor"
  input: "training_1/Adam/vhat_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/vhat_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/vhat_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/vhat_1_1"
    }
  }
}
node {
  name: "training_1/Adam/vhat_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_1_1"
}
node {
  name: "training_1/Adam/vhat_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_1_1"
  input: "training_1/Adam/vhat_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_2"
  op: "Fill"
  input: "training_1/Adam/vhat_2/shape_as_tensor"
  input: "training_1/Adam/vhat_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/vhat_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/vhat_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/vhat_2_1"
    }
  }
}
node {
  name: "training_1/Adam/vhat_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_2_1"
}
node {
  name: "training_1/Adam/vhat_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_2_1"
  input: "training_1/Adam/vhat_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_3/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_3"
  op: "Fill"
  input: "training_1/Adam/vhat_3/shape_as_tensor"
  input: "training_1/Adam/vhat_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/vhat_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/vhat_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/vhat_3_1"
    }
  }
}
node {
  name: "training_1/Adam/vhat_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_3_1"
}
node {
  name: "training_1/Adam/vhat_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_3_1"
  input: "training_1/Adam/vhat_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_4"
  op: "Fill"
  input: "training_1/Adam/vhat_4/shape_as_tensor"
  input: "training_1/Adam/vhat_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/vhat_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/vhat_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/vhat_4_1"
    }
  }
}
node {
  name: "training_1/Adam/vhat_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_4_1"
}
node {
  name: "training_1/Adam/vhat_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_4_1"
  input: "training_1/Adam/vhat_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_5/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/vhat_5"
  op: "Fill"
  input: "training_1/Adam/vhat_5/shape_as_tensor"
  input: "training_1/Adam/vhat_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_1/Adam/vhat_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_1/Adam/vhat_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_1/Adam/vhat_5_1"
    }
  }
}
node {
  name: "training_1/Adam/vhat_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_5_1"
}
node {
  name: "training_1/Adam/vhat_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_5_1"
  input: "training_1/Adam/vhat_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/vhat_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_1"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_2"
  input: "training_1/Adam/mul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_2"
  op: "Sub"
  input: "training_1/Adam/sub_2/x"
  input: "training_1/Adam/ReadVariableOp_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_2"
  op: "Mul"
  input: "training_1/Adam/sub_2"
  input: "training_1/Adam/gradients/dense_10/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_1"
  op: "AddV2"
  input: "training_1/Adam/mul_1"
  input: "training_1/Adam/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_3"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_4"
  input: "training_1/Adam/mul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_3"
  op: "Sub"
  input: "training_1/Adam/sub_3/x"
  input: "training_1/Adam/ReadVariableOp_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Square"
  op: "Square"
  input: "training_1/Adam/gradients/dense_10/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_4"
  op: "Mul"
  input: "training_1/Adam/sub_3"
  input: "training_1/Adam/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_2"
  op: "AddV2"
  input: "training_1/Adam/mul_3"
  input: "training_1/Adam/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_5"
  op: "Mul"
  input: "training_1/Adam/mul"
  input: "training_1/Adam/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training_1/Adam/add_2"
  input: "training_1/Adam/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_1"
  op: "Maximum"
  input: "training_1/Adam/clip_by_value_1/Minimum"
  input: "training_1/Adam/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Sqrt_1"
  op: "Sqrt"
  input: "training_1/Adam/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_1/Adam/add_3"
  op: "AddV2"
  input: "training_1/Adam/Sqrt_1"
  input: "training_1/Adam/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/truediv_1"
  op: "RealDiv"
  input: "training_1/Adam/mul_5"
  input: "training_1/Adam/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "dense_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_4"
  op: "Sub"
  input: "training_1/Adam/ReadVariableOp_6"
  input: "training_1/Adam/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_0_1"
  input: "training_1/Adam/add_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_0_1"
  input: "^training_1/Adam/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_0_1"
  input: "training_1/Adam/add_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_0_1"
  input: "^training_1/Adam/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "dense_10/kernel"
  input: "training_1/Adam/sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "dense_10/kernel"
  input: "^training_1/Adam/AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_6"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_10"
  input: "training_1/Adam/mul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_5"
  op: "Sub"
  input: "training_1/Adam/sub_5/x"
  input: "training_1/Adam/ReadVariableOp_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_7"
  op: "Mul"
  input: "training_1/Adam/sub_5"
  input: "training_1/Adam/gradients/dense_10/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_4"
  op: "AddV2"
  input: "training_1/Adam/mul_6"
  input: "training_1/Adam/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_8"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_12"
  input: "training_1/Adam/mul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_6"
  op: "Sub"
  input: "training_1/Adam/sub_6/x"
  input: "training_1/Adam/ReadVariableOp_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Square_1"
  op: "Square"
  input: "training_1/Adam/gradients/dense_10/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_9"
  op: "Mul"
  input: "training_1/Adam/sub_6"
  input: "training_1/Adam/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_5"
  op: "AddV2"
  input: "training_1/Adam/mul_8"
  input: "training_1/Adam/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_10"
  op: "Mul"
  input: "training_1/Adam/mul"
  input: "training_1/Adam/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training_1/Adam/add_5"
  input: "training_1/Adam/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_2"
  op: "Maximum"
  input: "training_1/Adam/clip_by_value_2/Minimum"
  input: "training_1/Adam/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Sqrt_2"
  op: "Sqrt"
  input: "training_1/Adam/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_1/Adam/add_6"
  op: "AddV2"
  input: "training_1/Adam/Sqrt_2"
  input: "training_1/Adam/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/truediv_2"
  op: "RealDiv"
  input: "training_1/Adam/mul_10"
  input: "training_1/Adam/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "dense_10/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_7"
  op: "Sub"
  input: "training_1/Adam/ReadVariableOp_14"
  input: "training_1/Adam/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_1_1"
  input: "training_1/Adam/add_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_1_1"
  input: "^training_1/Adam/AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_1_1"
  input: "training_1/Adam/add_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_1_1"
  input: "^training_1/Adam/AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "dense_10/bias"
  input: "training_1/Adam/sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "dense_10/bias"
  input: "^training_1/Adam/AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_11"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_18"
  input: "training_1/Adam/mul_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_8"
  op: "Sub"
  input: "training_1/Adam/sub_8/x"
  input: "training_1/Adam/ReadVariableOp_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_12"
  op: "Mul"
  input: "training_1/Adam/sub_8"
  input: "training_1/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_7"
  op: "AddV2"
  input: "training_1/Adam/mul_11"
  input: "training_1/Adam/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_13"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_20"
  input: "training_1/Adam/mul_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_9"
  op: "Sub"
  input: "training_1/Adam/sub_9/x"
  input: "training_1/Adam/ReadVariableOp_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Square_2"
  op: "Square"
  input: "training_1/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_14"
  op: "Mul"
  input: "training_1/Adam/sub_9"
  input: "training_1/Adam/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_8"
  op: "AddV2"
  input: "training_1/Adam/mul_13"
  input: "training_1/Adam/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_15"
  op: "Mul"
  input: "training_1/Adam/mul"
  input: "training_1/Adam/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training_1/Adam/add_8"
  input: "training_1/Adam/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_3"
  op: "Maximum"
  input: "training_1/Adam/clip_by_value_3/Minimum"
  input: "training_1/Adam/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Sqrt_3"
  op: "Sqrt"
  input: "training_1/Adam/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_1/Adam/add_9"
  op: "AddV2"
  input: "training_1/Adam/Sqrt_3"
  input: "training_1/Adam/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/truediv_3"
  op: "RealDiv"
  input: "training_1/Adam/mul_15"
  input: "training_1/Adam/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "dense_11/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_10"
  op: "Sub"
  input: "training_1/Adam/ReadVariableOp_22"
  input: "training_1/Adam/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_2_1"
  input: "training_1/Adam/add_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_2_1"
  input: "^training_1/Adam/AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_2_1"
  input: "training_1/Adam/add_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_2_1"
  input: "^training_1/Adam/AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dense_11/kernel"
  input: "training_1/Adam/sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "dense_11/kernel"
  input: "^training_1/Adam/AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_16"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_26"
  input: "training_1/Adam/mul_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_11"
  op: "Sub"
  input: "training_1/Adam/sub_11/x"
  input: "training_1/Adam/ReadVariableOp_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_17"
  op: "Mul"
  input: "training_1/Adam/sub_11"
  input: "training_1/Adam/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_10"
  op: "AddV2"
  input: "training_1/Adam/mul_16"
  input: "training_1/Adam/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_18"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_28"
  input: "training_1/Adam/mul_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_12"
  op: "Sub"
  input: "training_1/Adam/sub_12/x"
  input: "training_1/Adam/ReadVariableOp_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Square_3"
  op: "Square"
  input: "training_1/Adam/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_19"
  op: "Mul"
  input: "training_1/Adam/sub_12"
  input: "training_1/Adam/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_11"
  op: "AddV2"
  input: "training_1/Adam/mul_18"
  input: "training_1/Adam/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_20"
  op: "Mul"
  input: "training_1/Adam/mul"
  input: "training_1/Adam/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training_1/Adam/add_11"
  input: "training_1/Adam/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_4"
  op: "Maximum"
  input: "training_1/Adam/clip_by_value_4/Minimum"
  input: "training_1/Adam/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Sqrt_4"
  op: "Sqrt"
  input: "training_1/Adam/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_1/Adam/add_12"
  op: "AddV2"
  input: "training_1/Adam/Sqrt_4"
  input: "training_1/Adam/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/truediv_4"
  op: "RealDiv"
  input: "training_1/Adam/mul_20"
  input: "training_1/Adam/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "dense_11/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_13"
  op: "Sub"
  input: "training_1/Adam/ReadVariableOp_30"
  input: "training_1/Adam/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_3_1"
  input: "training_1/Adam/add_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_3_1"
  input: "^training_1/Adam/AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_3_1"
  input: "training_1/Adam/add_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_3_1"
  input: "^training_1/Adam/AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dense_11/bias"
  input: "training_1/Adam/sub_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "dense_11/bias"
  input: "^training_1/Adam/AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_21"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_34"
  input: "training_1/Adam/mul_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_14"
  op: "Sub"
  input: "training_1/Adam/sub_14/x"
  input: "training_1/Adam/ReadVariableOp_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_22"
  op: "Mul"
  input: "training_1/Adam/sub_14"
  input: "training_1/Adam/gradients/dense_12/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_13"
  op: "AddV2"
  input: "training_1/Adam/mul_21"
  input: "training_1/Adam/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_23"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_36"
  input: "training_1/Adam/mul_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_15"
  op: "Sub"
  input: "training_1/Adam/sub_15/x"
  input: "training_1/Adam/ReadVariableOp_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Square_4"
  op: "Square"
  input: "training_1/Adam/gradients/dense_12/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_24"
  op: "Mul"
  input: "training_1/Adam/sub_15"
  input: "training_1/Adam/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_14"
  op: "AddV2"
  input: "training_1/Adam/mul_23"
  input: "training_1/Adam/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_25"
  op: "Mul"
  input: "training_1/Adam/mul"
  input: "training_1/Adam/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training_1/Adam/add_14"
  input: "training_1/Adam/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_5"
  op: "Maximum"
  input: "training_1/Adam/clip_by_value_5/Minimum"
  input: "training_1/Adam/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Sqrt_5"
  op: "Sqrt"
  input: "training_1/Adam/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_1/Adam/add_15"
  op: "AddV2"
  input: "training_1/Adam/Sqrt_5"
  input: "training_1/Adam/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/truediv_5"
  op: "RealDiv"
  input: "training_1/Adam/mul_25"
  input: "training_1/Adam/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "dense_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_16"
  op: "Sub"
  input: "training_1/Adam/ReadVariableOp_38"
  input: "training_1/Adam/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_4_1"
  input: "training_1/Adam/add_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_4_1"
  input: "^training_1/Adam/AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_4_1"
  input: "training_1/Adam/add_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_4_1"
  input: "^training_1/Adam/AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "dense_12/kernel"
  input: "training_1/Adam/sub_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "dense_12/kernel"
  input: "^training_1/Adam/AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_26"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_42"
  input: "training_1/Adam/mul_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "Adam_1/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_17"
  op: "Sub"
  input: "training_1/Adam/sub_17/x"
  input: "training_1/Adam/ReadVariableOp_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_27"
  op: "Mul"
  input: "training_1/Adam/sub_17"
  input: "training_1/Adam/gradients/dense_12/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_16"
  op: "AddV2"
  input: "training_1/Adam/mul_26"
  input: "training_1/Adam/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_28"
  op: "Mul"
  input: "training_1/Adam/ReadVariableOp_44"
  input: "training_1/Adam/mul_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "Adam_1/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_1/Adam/sub_18"
  op: "Sub"
  input: "training_1/Adam/sub_18/x"
  input: "training_1/Adam/ReadVariableOp_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Square_5"
  op: "Square"
  input: "training_1/Adam/gradients/dense_12/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_29"
  op: "Mul"
  input: "training_1/Adam/sub_18"
  input: "training_1/Adam/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_17"
  op: "AddV2"
  input: "training_1/Adam/mul_28"
  input: "training_1/Adam/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/mul_30"
  op: "Mul"
  input: "training_1/Adam/mul"
  input: "training_1/Adam/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_1/Adam/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training_1/Adam/add_17"
  input: "training_1/Adam/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/clip_by_value_6"
  op: "Maximum"
  input: "training_1/Adam/clip_by_value_6/Minimum"
  input: "training_1/Adam/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/Sqrt_6"
  op: "Sqrt"
  input: "training_1/Adam/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_1/Adam/add_18"
  op: "AddV2"
  input: "training_1/Adam/Sqrt_6"
  input: "training_1/Adam/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/truediv_6"
  op: "RealDiv"
  input: "training_1/Adam/mul_30"
  input: "training_1/Adam/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "dense_12/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/sub_19"
  op: "Sub"
  input: "training_1/Adam/ReadVariableOp_46"
  input: "training_1/Adam/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_5_1"
  input: "training_1/Adam/add_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_5_1"
  input: "^training_1/Adam/AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_5_1"
  input: "training_1/Adam/add_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_5_1"
  input: "^training_1/Adam/AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "dense_12/bias"
  input: "training_1/Adam/sub_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/Adam/ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "dense_12/bias"
  input: "^training_1/Adam/AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_5_1"
}
node {
  name: "training_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "Adam_1/beta_1"
}
node {
  name: "training_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "total_3"
}
node {
  name: "training_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_2_1"
}
node {
  name: "training_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_1_1"
}
node {
  name: "training_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "Adam_1/decay"
}
node {
  name: "training_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_1_1"
}
node {
  name: "training_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_3_1"
}
node {
  name: "training_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_5_1"
}
node {
  name: "training_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_4_1"
}
node {
  name: "training_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_3_1"
}
node {
  name: "training_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "count_3"
}
node {
  name: "training_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_0_1"
}
node {
  name: "training_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_2_1"
}
node {
  name: "training_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/m_4_1"
}
node {
  name: "training_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "Adam_1/learning_rate"
}
node {
  name: "training_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "count_2"
}
node {
  name: "training_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_0_1"
}
node {
  name: "training_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_4_1"
}
node {
  name: "training_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "total_2"
}
node {
  name: "training_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_1_1"
}
node {
  name: "training_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "Adam_1/iterations"
}
node {
  name: "training_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_3_1"
}
node {
  name: "training_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_2_1"
}
node {
  name: "training_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "Adam_1/beta_2"
}
node {
  name: "training_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/v_0_1"
}
node {
  name: "training_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "training_1/Adam/vhat_5_1"
}
node {
  name: "training_1/init"
  op: "NoOp"
  input: "^Adam_1/beta_1/Assign"
  input: "^Adam_1/beta_2/Assign"
  input: "^Adam_1/decay/Assign"
  input: "^Adam_1/iterations/Assign"
  input: "^Adam_1/learning_rate/Assign"
  input: "^count_2/Assign"
  input: "^count_3/Assign"
  input: "^total_2/Assign"
  input: "^total_3/Assign"
  input: "^training_1/Adam/m_0_1/Assign"
  input: "^training_1/Adam/m_1_1/Assign"
  input: "^training_1/Adam/m_2_1/Assign"
  input: "^training_1/Adam/m_3_1/Assign"
  input: "^training_1/Adam/m_4_1/Assign"
  input: "^training_1/Adam/m_5_1/Assign"
  input: "^training_1/Adam/v_0_1/Assign"
  input: "^training_1/Adam/v_1_1/Assign"
  input: "^training_1/Adam/v_2_1/Assign"
  input: "^training_1/Adam/v_3_1/Assign"
  input: "^training_1/Adam/v_4_1/Assign"
  input: "^training_1/Adam/v_5_1/Assign"
  input: "^training_1/Adam/vhat_0_1/Assign"
  input: "^training_1/Adam/vhat_1_1/Assign"
  input: "^training_1/Adam/vhat_2_1/Assign"
  input: "^training_1/Adam/vhat_3_1/Assign"
  input: "^training_1/Adam/vhat_4_1/Assign"
  input: "^training_1/Adam/vhat_5_1/Assign"
}
node {
  name: "training_1/group_deps"
  op: "NoOp"
  input: "^Mean_1"
  input: "^metrics_1/accuracy/AssignAddVariableOp"
  input: "^metrics_1/accuracy/AssignAddVariableOp_1"
  input: "^metrics_1/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_1/binary_crossentropy/AssignAddVariableOp_1"
  input: "^training_1/Adam/AssignAddVariableOp"
  input: "^training_1/Adam/AssignVariableOp"
  input: "^training_1/Adam/AssignVariableOp_1"
  input: "^training_1/Adam/AssignVariableOp_10"
  input: "^training_1/Adam/AssignVariableOp_11"
  input: "^training_1/Adam/AssignVariableOp_12"
  input: "^training_1/Adam/AssignVariableOp_13"
  input: "^training_1/Adam/AssignVariableOp_14"
  input: "^training_1/Adam/AssignVariableOp_15"
  input: "^training_1/Adam/AssignVariableOp_16"
  input: "^training_1/Adam/AssignVariableOp_17"
  input: "^training_1/Adam/AssignVariableOp_2"
  input: "^training_1/Adam/AssignVariableOp_3"
  input: "^training_1/Adam/AssignVariableOp_4"
  input: "^training_1/Adam/AssignVariableOp_5"
  input: "^training_1/Adam/AssignVariableOp_6"
  input: "^training_1/Adam/AssignVariableOp_7"
  input: "^training_1/Adam/AssignVariableOp_8"
  input: "^training_1/Adam/AssignVariableOp_9"
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "Adam_1/iterations"
  input: "Placeholder_31"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "Adam_1/iterations"
  input: "^AssignVariableOp_31"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_0_1"
  input: "Placeholder_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_0_1"
  input: "^AssignVariableOp_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_1_1"
  input: "Placeholder_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_1_1"
  input: "^AssignVariableOp_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_2_1"
  input: "Placeholder_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_2_1"
  input: "^AssignVariableOp_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_3_1"
  input: "Placeholder_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_3_1"
  input: "^AssignVariableOp_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_4_1"
  input: "Placeholder_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_4_1"
  input: "^AssignVariableOp_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_5_1"
  input: "Placeholder_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "training_1/Adam/m_5_1"
  input: "^AssignVariableOp_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_0_1"
  input: "Placeholder_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_0_1"
  input: "^AssignVariableOp_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_1_1"
  input: "Placeholder_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_1_1"
  input: "^AssignVariableOp_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_2_1"
  input: "Placeholder_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_2_1"
  input: "^AssignVariableOp_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_3_1"
  input: "Placeholder_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_3_1"
  input: "^AssignVariableOp_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_4_1"
  input: "Placeholder_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_4_1"
  input: "^AssignVariableOp_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_5_1"
  input: "Placeholder_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "training_1/Adam/v_5_1"
  input: "^AssignVariableOp_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_0_1"
  input: "Placeholder_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_0_1"
  input: "^AssignVariableOp_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_1_1"
  input: "Placeholder_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_1_1"
  input: "^AssignVariableOp_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_2_1"
  input: "Placeholder_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_2_1"
  input: "^AssignVariableOp_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_3_1"
  input: "Placeholder_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_3_1"
  input: "^AssignVariableOp_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_4_1"
  input: "Placeholder_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_4_1"
  input: "^AssignVariableOp_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_5_1"
  input: "Placeholder_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "training_1/Adam/vhat_5_1"
  input: "^AssignVariableOp_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^dense_9/Sigmoid"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^dense_12/Sigmoid"
}
node {
  name: "dense_1_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 7
        }
      }
    }
  }
}
node {
  name: "dense_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "dense_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5861571
    }
  }
}
node {
  name: "dense_1/random_uniform/sub"
  op: "Sub"
  input: "dense_1/random_uniform/max"
  input: "dense_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/random_uniform/mul"
  op: "Mul"
  input: "dense_1/random_uniform/RandomUniform"
  input: "dense_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/random_uniform"
  op: "Add"
  input: "dense_1/random_uniform/mul"
  input: "dense_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel"
    }
  }
}
node {
  name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
}
node {
  name: "dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "dense_1/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias"
    }
  }
}
node {
  name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
}
node {
  name: "dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "dense_1/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "dense_1_input"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/Sigmoid"
  op: "Sigmoid"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "dense_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6047401
    }
  }
}
node {
  name: "dense_2/random_uniform/sub"
  op: "Sub"
  input: "dense_2/random_uniform/max"
  input: "dense_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/random_uniform/mul"
  op: "Mul"
  input: "dense_2/random_uniform/RandomUniform"
  input: "dense_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/random_uniform"
  op: "Add"
  input: "dense_2/random_uniform/mul"
  input: "dense_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel"
    }
  }
}
node {
  name: "dense_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
}
node {
  name: "dense_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "dense_2/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/weight_regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/weight_regularizer/Square"
  op: "Square"
  input: "dense_2/weight_regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_2/weight_regularizer/Sum"
  op: "Sum"
  input: "dense_2/weight_regularizer/Square"
  input: "dense_2/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_2/weight_regularizer/mul"
  op: "Mul"
  input: "dense_2/weight_regularizer/mul/x"
  input: "dense_2/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/weight_regularizer/add"
  op: "AddV2"
  input: "dense_2/weight_regularizer/add/x"
  input: "dense_2/weight_regularizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias"
    }
  }
}
node {
  name: "dense_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
}
node {
  name: "dense_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "dense_2/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/weight_regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/weight_regularizer_1/Square"
  op: "Square"
  input: "dense_2/weight_regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/weight_regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense_2/weight_regularizer_1/Sum"
  op: "Sum"
  input: "dense_2/weight_regularizer_1/Square"
  input: "dense_2/weight_regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2/weight_regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_2/weight_regularizer_1/mul"
  op: "Mul"
  input: "dense_2/weight_regularizer_1/mul/x"
  input: "dense_2/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/weight_regularizer_1/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/weight_regularizer_1/add"
  op: "AddV2"
  input: "dense_2/weight_regularizer_1/add/x"
  input: "dense_2/weight_regularizer_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul"
  op: "MatMul"
  input: "dense_1/Sigmoid"
  input: "dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_2/MatMul"
  input: "dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_2/Relu"
  op: "Relu"
  input: "dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\027\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2630633
    }
  }
}
node {
  name: "dense_3/random_uniform/sub"
  op: "Sub"
  input: "dense_3/random_uniform/max"
  input: "dense_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/random_uniform/mul"
  op: "Mul"
  input: "dense_3/random_uniform/RandomUniform"
  input: "dense_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/random_uniform"
  op: "Add"
  input: "dense_3/random_uniform/mul"
  input: "dense_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/kernel"
    }
  }
}
node {
  name: "dense_3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel"
}
node {
  name: "dense_3/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "dense_3/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/bias"
    }
  }
}
node {
  name: "dense_3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/bias"
}
node {
  name: "dense_3/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "dense_3/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/MatMul"
  op: "MatMul"
  input: "dense_2/Relu"
  input: "dense_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/BiasAdd"
  op: "BiasAdd"
  input: "dense_3/MatMul"
  input: "dense_3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_3/Sigmoid"
  op: "Sigmoid"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "Placeholder_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_50"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  input: "^AssignVariableOp_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "Placeholder_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_51"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  input: "^AssignVariableOp_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "Placeholder_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_52"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  input: "^AssignVariableOp_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "Placeholder_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_53"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  input: "^AssignVariableOp_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "Placeholder_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_54"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  input: "^AssignVariableOp_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "Placeholder_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_55"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  input: "^AssignVariableOp_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "dense_3/bias"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel"
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^dense_1/bias/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^dense_2/bias/Assign"
  input: "^dense_2/kernel/Assign"
  input: "^dense_3/bias/Assign"
  input: "^dense_3/kernel/Assign"
}
node {
  name: "Adam_2/iterations/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_2/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam_2/iterations"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_2/iterations"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_2/iterations"
    }
  }
}
node {
  name: "Adam_2/iterations/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_2/iterations"
}
node {
  name: "Adam_2/iterations/Assign"
  op: "AssignVariableOp"
  input: "Adam_2/iterations"
  input: "Adam_2/iterations/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam_2/iterations/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_2/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam_2/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_2/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Adam_2/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_2/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_2/learning_rate"
    }
  }
}
node {
  name: "Adam_2/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_2/learning_rate"
}
node {
  name: "Adam_2/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "Adam_2/learning_rate"
  input: "Adam_2/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_2/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_2/beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_2/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_2/beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_2/beta_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_2/beta_1"
    }
  }
}
node {
  name: "Adam_2/beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_2/beta_1"
}
node {
  name: "Adam_2/beta_1/Assign"
  op: "AssignVariableOp"
  input: "Adam_2/beta_1"
  input: "Adam_2/beta_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_2/beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_2/beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_2/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam_2/beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_2/beta_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_2/beta_2"
    }
  }
}
node {
  name: "Adam_2/beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_2/beta_2"
}
node {
  name: "Adam_2/beta_2/Assign"
  op: "AssignVariableOp"
  input: "Adam_2/beta_2"
  input: "Adam_2/beta_2/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_2/beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_2/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_2/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam_2/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_2/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_2/decay"
    }
  }
}
node {
  name: "Adam_2/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_2/decay"
}
node {
  name: "Adam_2/decay/Assign"
  op: "AssignVariableOp"
  input: "Adam_2/decay"
  input: "Adam_2/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_2/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_2/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "dense_3_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_4"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_4"
    }
  }
}
node {
  name: "total_4/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_4"
}
node {
  name: "total_4/Assign"
  op: "AssignVariableOp"
  input: "total_4"
  input: "Const_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_4/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_4"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_4"
    }
  }
}
node {
  name: "count_4/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_4"
}
node {
  name: "count_4/Assign"
  op: "AssignVariableOp"
  input: "count_4"
  input: "Const_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_4/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_5"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_5"
    }
  }
}
node {
  name: "total_5/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_5"
}
node {
  name: "total_5/Assign"
  op: "AssignVariableOp"
  input: "total_5"
  input: "Const_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_5/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_5"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_5"
    }
  }
}
node {
  name: "count_5/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_5"
}
node {
  name: "count_5/Assign"
  op: "AssignVariableOp"
  input: "count_5"
  input: "Const_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_5/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/accuracy/Round"
  op: "Round"
  input: "dense_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/accuracy/Equal"
  op: "Equal"
  input: "dense_3_target"
  input: "metrics_2/accuracy/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics_2/accuracy/Cast"
  op: "Cast"
  input: "metrics_2/accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_2/accuracy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_2/accuracy/Mean"
  op: "Mean"
  input: "metrics_2/accuracy/Cast"
  input: "metrics_2/accuracy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_2/accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_2/accuracy/Sum"
  op: "Sum"
  input: "metrics_2/accuracy/Mean"
  input: "metrics_2/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_2/accuracy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_4"
  input: "metrics_2/accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/accuracy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_4"
  input: "^metrics_2/accuracy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/accuracy/Size"
  op: "Size"
  input: "metrics_2/accuracy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_2/accuracy/Cast_1"
  op: "Cast"
  input: "metrics_2/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_2/accuracy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_4"
  input: "metrics_2/accuracy/Cast_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/accuracy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_4"
  input: "^metrics_2/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/accuracy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_4"
  input: "^metrics_2/accuracy/AssignAddVariableOp"
  input: "^metrics_2/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/accuracy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_4"
  input: "^metrics_2/accuracy/AssignAddVariableOp"
  input: "^metrics_2/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/accuracy/truediv"
  op: "RealDiv"
  input: "metrics_2/accuracy/ReadVariableOp_2"
  input: "metrics_2/accuracy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/accuracy/Identity"
  op: "Identity"
  input: "metrics_2/accuracy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_3/BiasAdd"
  input: "metrics_2/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "metrics_2/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_3/BiasAdd"
  input: "metrics_2/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "metrics_2/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "metrics_2/binary_crossentropy/logistic_loss/Neg"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_3/BiasAdd"
  input: "dense_3_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "metrics_2/binary_crossentropy/logistic_loss/Select"
  input: "metrics_2/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "metrics_2/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "metrics_2/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "metrics_2/binary_crossentropy/logistic_loss/sub"
  input: "metrics_2/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/Mean"
  op: "Mean"
  input: "metrics_2/binary_crossentropy/logistic_loss"
  input: "metrics_2/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/Sum"
  op: "Sum"
  input: "metrics_2/binary_crossentropy/Mean"
  input: "metrics_2/binary_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_5"
  input: "metrics_2/binary_crossentropy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_5"
  input: "^metrics_2/binary_crossentropy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/Size"
  op: "Size"
  input: "metrics_2/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/Cast"
  op: "Cast"
  input: "metrics_2/binary_crossentropy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_5"
  input: "metrics_2/binary_crossentropy/Cast"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_5"
  input: "^metrics_2/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_5"
  input: "^metrics_2/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_2/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_5"
  input: "^metrics_2/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_2/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/truediv"
  op: "RealDiv"
  input: "metrics_2/binary_crossentropy/ReadVariableOp_2"
  input: "metrics_2/binary_crossentropy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/binary_crossentropy/Identity"
  op: "Identity"
  input: "metrics_2/binary_crossentropy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_3/BiasAdd"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_3/BiasAdd"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Neg"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_3/BiasAdd"
  input: "dense_3_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/Mean"
  op: "Mean"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
  input: "loss_2/dense_3_loss/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
  op: "Mul"
  input: "dense_3_sample_weights"
  input: "loss_2/dense_3_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum"
  op: "Sum"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  op: "Size"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
  op: "RealDiv"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_2/mul"
  op: "Mul"
  input: "loss_2/mul/x"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/add"
  op: "AddV2"
  input: "loss_2/mul"
  input: "dense_2/weight_regularizer/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/add_1"
  op: "AddV2"
  input: "loss_2/add"
  input: "dense_2/weight_regularizer_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Mean_2"
  op: "Mean"
  input: "loss_2/add_1"
  input: "Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Fill"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape"
  input: "training_2/Adam/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/Mean_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Mean_2_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/Fill"
  input: "training_2/Adam/gradients/Mean_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Mean_2_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Mean_2_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/Mean_2_grad/Reshape"
  input: "training_2/Adam/gradients/Mean_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Mean_2_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Mean_2_grad/truediv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/Mean_2_grad/Tile"
  input: "training_2/Adam/gradients/Mean_2_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/Mean_2_grad/truediv"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/mul_grad/Mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/Mean_2_grad/truediv"
  input: "loss_2/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer_1/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/Mean_2_grad/truediv"
  input: "dense_2/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer_1/mul_grad/Mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/Mean_2_grad/truediv"
  input: "dense_2/weight_regularizer_1/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_2/mul_grad/Mul_1"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  op: "Neg"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  op: "Mul"
  input: "training_2/Adam/gradients/loss_2/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/Mean_2_grad/truediv"
  input: "dense_2/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/Mean_2_grad/truediv"
  input: "dense_2/weight_regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer_1/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 279
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Sum_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Sum_grad/Reshape"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer/Sum_grad/Reshape"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Square_grad/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/dense_2/weight_regularizer_1/Sum_grad/Tile"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer_1/Square"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Square_grad/Mul"
  op: "Mul"
  input: "dense_2/weight_regularizer_1/Square/ReadVariableOp"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer_1/Square"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Square_grad/Mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Sum_grad/Tile"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer_1/Square"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_3_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss_2/dense_3_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  input: "loss_2/dense_3_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_3_sample_weights"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer/Square_grad/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/dense_2/weight_regularizer/Sum_grad/Tile"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer/Square"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer/Square_grad/Mul"
  op: "Mul"
  input: "dense_2/weight_regularizer/Square/ReadVariableOp"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer/Square"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/weight_regularizer/Square_grad/Mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer/Sum_grad/Tile"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer/Square"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Shape"
  op: "Shape"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/add"
  op: "AddV2"
  input: "loss_2/dense_3_loss/binary_crossentropy/Mean/reduction_indices"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/mod"
  op: "FloorMod"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/add"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/range"
  op: "Range"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/range/start"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Size"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Fill"
  op: "Fill"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Shape_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/range"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/mod"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Maximum"
  op: "Maximum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss_2/dense_3_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Prod"
  op: "Prod"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Shape_2"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Prod_1"
  op: "Prod"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Shape_3"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Prod_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Prod"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Cast"
  op: "Cast"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/truediv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Tile"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Shape"
  op: "Shape"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Shape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  op: "AddV2"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "dense_3_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  input: "dense_3_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_3/BiasAdd"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Exp"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "loss_2/dense_3_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Neg"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN"
  op: "AddN"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  input: "training_2/Adam/gradients/loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_2/dense_3_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_2/Adam/gradients/AddN"
  input: "dense_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_2/Relu"
  input: "training_2/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/dense_3/MatMul_grad/MatMul"
  input: "dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/dense_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_2/Adam/gradients/dense_2/Relu_grad/ReluGrad"
  input: "dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_1/Sigmoid"
  input: "training_2/Adam/gradients/dense_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "dense_1/Sigmoid"
  input: "training_2/Adam/gradients/dense_2/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/Sigmoid"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_1"
  op: "AddN"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer_1/Square_grad/Mul_1"
  input: "training_2/Adam/gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer_1/Square"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/dense_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_2"
  op: "AddN"
  input: "training_2/Adam/gradients/dense_2/weight_regularizer/Square_grad/Mul_1"
  input: "training_2/Adam/gradients/dense_2/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/weight_regularizer/Square"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_2/Adam/gradients/dense_1/Sigmoid_grad/SigmoidGrad"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_1_input"
  input: "training_2/Adam/gradients/dense_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "Adam_2/iterations"
  input: "training_2/Adam/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_2/iterations"
  input: "^training_2/Adam/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_2/Adam/Cast/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_2/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_2/Adam/Cast"
  op: "Cast"
  input: "training_2/Adam/Cast/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/add"
  op: "AddV2"
  input: "training_2/Adam/Cast"
  input: "training_2/Adam/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Pow/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Pow"
  op: "Pow"
  input: "training_2/Adam/Pow/ReadVariableOp"
  input: "training_2/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub"
  op: "Sub"
  input: "training_2/Adam/sub/x"
  input: "training_2/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value/Minimum"
  op: "Minimum"
  input: "training_2/Adam/sub"
  input: "training_2/Adam/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value/Minimum"
  input: "training_2/Adam/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Pow_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Pow_1"
  op: "Pow"
  input: "training_2/Adam/Pow_1/ReadVariableOp"
  input: "training_2/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_1"
  op: "Sub"
  input: "training_2/Adam/sub_1/x"
  input: "training_2/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv"
  op: "RealDiv"
  input: "training_2/Adam/Sqrt"
  input: "training_2/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_1"
  input: "training_2/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/m_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/m_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/m_0_1"
    }
  }
}
node {
  name: "training_2/Adam/m_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_0_1"
}
node {
  name: "training_2/Adam/m_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_0_1"
  input: "training_2/Adam/m_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/m_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/m_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/m_1_1"
    }
  }
}
node {
  name: "training_2/Adam/m_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_1_1"
}
node {
  name: "training_2/Adam/m_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_1_1"
  input: "training_2/Adam/m_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/m_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/m_2"
  op: "Fill"
  input: "training_2/Adam/m_2/shape_as_tensor"
  input: "training_2/Adam/m_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/m_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/m_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/m_2_1"
    }
  }
}
node {
  name: "training_2/Adam/m_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_2_1"
}
node {
  name: "training_2/Adam/m_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_2_1"
  input: "training_2/Adam/m_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/m_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/m_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/m_3_1"
    }
  }
}
node {
  name: "training_2/Adam/m_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_3_1"
}
node {
  name: "training_2/Adam/m_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_3_1"
  input: "training_2/Adam/m_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/m_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/m_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/m_4_1"
    }
  }
}
node {
  name: "training_2/Adam/m_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_4_1"
}
node {
  name: "training_2/Adam/m_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_4_1"
  input: "training_2/Adam/m_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/m_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/m_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/m_5_1"
    }
  }
}
node {
  name: "training_2/Adam/m_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_5_1"
}
node {
  name: "training_2/Adam/m_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_5_1"
  input: "training_2/Adam/m_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/m_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/v_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/v_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/v_0_1"
    }
  }
}
node {
  name: "training_2/Adam/v_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_0_1"
}
node {
  name: "training_2/Adam/v_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_0_1"
  input: "training_2/Adam/v_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/v_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/v_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/v_1_1"
    }
  }
}
node {
  name: "training_2/Adam/v_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_1_1"
}
node {
  name: "training_2/Adam/v_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_1_1"
  input: "training_2/Adam/v_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\027\001\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/v_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/v_2"
  op: "Fill"
  input: "training_2/Adam/v_2/shape_as_tensor"
  input: "training_2/Adam/v_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/v_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/v_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/v_2_1"
    }
  }
}
node {
  name: "training_2/Adam/v_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_2_1"
}
node {
  name: "training_2/Adam/v_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_2_1"
  input: "training_2/Adam/v_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/v_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/v_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/v_3_1"
    }
  }
}
node {
  name: "training_2/Adam/v_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_3_1"
}
node {
  name: "training_2/Adam/v_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_3_1"
  input: "training_2/Adam/v_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 279
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/v_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/v_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 279
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/v_4_1"
    }
  }
}
node {
  name: "training_2/Adam/v_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_4_1"
}
node {
  name: "training_2/Adam/v_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_4_1"
  input: "training_2/Adam/v_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/v_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/v_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/v_5_1"
    }
  }
}
node {
  name: "training_2/Adam/v_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_5_1"
}
node {
  name: "training_2/Adam/v_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_5_1"
  input: "training_2/Adam/v_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/v_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_0/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_0"
  op: "Fill"
  input: "training_2/Adam/vhat_0/shape_as_tensor"
  input: "training_2/Adam/vhat_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/vhat_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/vhat_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/vhat_0_1"
    }
  }
}
node {
  name: "training_2/Adam/vhat_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_0_1"
}
node {
  name: "training_2/Adam/vhat_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_0_1"
  input: "training_2/Adam/vhat_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_1"
  op: "Fill"
  input: "training_2/Adam/vhat_1/shape_as_tensor"
  input: "training_2/Adam/vhat_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/vhat_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/vhat_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/vhat_1_1"
    }
  }
}
node {
  name: "training_2/Adam/vhat_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_1_1"
}
node {
  name: "training_2/Adam/vhat_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_1_1"
  input: "training_2/Adam/vhat_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_2"
  op: "Fill"
  input: "training_2/Adam/vhat_2/shape_as_tensor"
  input: "training_2/Adam/vhat_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/vhat_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/vhat_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/vhat_2_1"
    }
  }
}
node {
  name: "training_2/Adam/vhat_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_2_1"
}
node {
  name: "training_2/Adam/vhat_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_2_1"
  input: "training_2/Adam/vhat_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_3/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_3"
  op: "Fill"
  input: "training_2/Adam/vhat_3/shape_as_tensor"
  input: "training_2/Adam/vhat_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/vhat_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/vhat_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/vhat_3_1"
    }
  }
}
node {
  name: "training_2/Adam/vhat_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_3_1"
}
node {
  name: "training_2/Adam/vhat_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_3_1"
  input: "training_2/Adam/vhat_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_4"
  op: "Fill"
  input: "training_2/Adam/vhat_4/shape_as_tensor"
  input: "training_2/Adam/vhat_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/vhat_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/vhat_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/vhat_4_1"
    }
  }
}
node {
  name: "training_2/Adam/vhat_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_4_1"
}
node {
  name: "training_2/Adam/vhat_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_4_1"
  input: "training_2/Adam/vhat_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_5/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/vhat_5"
  op: "Fill"
  input: "training_2/Adam/vhat_5/shape_as_tensor"
  input: "training_2/Adam/vhat_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/vhat_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/vhat_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_2/Adam/vhat_5_1"
    }
  }
}
node {
  name: "training_2/Adam/vhat_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_5_1"
}
node {
  name: "training_2/Adam/vhat_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_5_1"
  input: "training_2/Adam/vhat_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/vhat_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_1"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_2"
  input: "training_2/Adam/mul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_2"
  op: "Sub"
  input: "training_2/Adam/sub_2/x"
  input: "training_2/Adam/ReadVariableOp_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_2"
  op: "Mul"
  input: "training_2/Adam/sub_2"
  input: "training_2/Adam/gradients/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_1"
  op: "AddV2"
  input: "training_2/Adam/mul_1"
  input: "training_2/Adam/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_3"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_4"
  input: "training_2/Adam/mul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_3"
  op: "Sub"
  input: "training_2/Adam/sub_3/x"
  input: "training_2/Adam/ReadVariableOp_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square"
  op: "Square"
  input: "training_2/Adam/gradients/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_4"
  op: "Mul"
  input: "training_2/Adam/sub_3"
  input: "training_2/Adam/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_2"
  op: "AddV2"
  input: "training_2/Adam/mul_3"
  input: "training_2/Adam/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_5"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_2"
  input: "training_2/Adam/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_1"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_1/Minimum"
  input: "training_2/Adam/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_1"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_3"
  op: "AddV2"
  input: "training_2/Adam/Sqrt_1"
  input: "training_2/Adam/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_1"
  op: "RealDiv"
  input: "training_2/Adam/mul_5"
  input: "training_2/Adam/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_4"
  op: "Sub"
  input: "training_2/Adam/ReadVariableOp_6"
  input: "training_2/Adam/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_0_1"
  input: "training_2/Adam/add_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_0_1"
  input: "^training_2/Adam/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_0_1"
  input: "training_2/Adam/add_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_0_1"
  input: "^training_2/Adam/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "training_2/Adam/sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  input: "^training_2/Adam/AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_6"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_10"
  input: "training_2/Adam/mul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_5"
  op: "Sub"
  input: "training_2/Adam/sub_5/x"
  input: "training_2/Adam/ReadVariableOp_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_7"
  op: "Mul"
  input: "training_2/Adam/sub_5"
  input: "training_2/Adam/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_4"
  op: "AddV2"
  input: "training_2/Adam/mul_6"
  input: "training_2/Adam/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_8"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_12"
  input: "training_2/Adam/mul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_6"
  op: "Sub"
  input: "training_2/Adam/sub_6/x"
  input: "training_2/Adam/ReadVariableOp_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_1"
  op: "Square"
  input: "training_2/Adam/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_9"
  op: "Mul"
  input: "training_2/Adam/sub_6"
  input: "training_2/Adam/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_5"
  op: "AddV2"
  input: "training_2/Adam/mul_8"
  input: "training_2/Adam/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_10"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_5"
  input: "training_2/Adam/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_2"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_2/Minimum"
  input: "training_2/Adam/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_2"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_6"
  op: "AddV2"
  input: "training_2/Adam/Sqrt_2"
  input: "training_2/Adam/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_2"
  op: "RealDiv"
  input: "training_2/Adam/mul_10"
  input: "training_2/Adam/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_7"
  op: "Sub"
  input: "training_2/Adam/ReadVariableOp_14"
  input: "training_2/Adam/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_1_1"
  input: "training_2/Adam/add_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_1_1"
  input: "^training_2/Adam/AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_1_1"
  input: "training_2/Adam/add_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_1_1"
  input: "^training_2/Adam/AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "training_2/Adam/sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  input: "^training_2/Adam/AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_11"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_18"
  input: "training_2/Adam/mul_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_8"
  op: "Sub"
  input: "training_2/Adam/sub_8/x"
  input: "training_2/Adam/ReadVariableOp_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_12"
  op: "Mul"
  input: "training_2/Adam/sub_8"
  input: "training_2/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_7"
  op: "AddV2"
  input: "training_2/Adam/mul_11"
  input: "training_2/Adam/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_13"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_20"
  input: "training_2/Adam/mul_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_9"
  op: "Sub"
  input: "training_2/Adam/sub_9/x"
  input: "training_2/Adam/ReadVariableOp_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_2"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_14"
  op: "Mul"
  input: "training_2/Adam/sub_9"
  input: "training_2/Adam/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_8"
  op: "AddV2"
  input: "training_2/Adam/mul_13"
  input: "training_2/Adam/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_15"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_8"
  input: "training_2/Adam/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_3"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_3/Minimum"
  input: "training_2/Adam/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_3"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_9"
  op: "AddV2"
  input: "training_2/Adam/Sqrt_3"
  input: "training_2/Adam/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_3"
  op: "RealDiv"
  input: "training_2/Adam/mul_15"
  input: "training_2/Adam/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_10"
  op: "Sub"
  input: "training_2/Adam/ReadVariableOp_22"
  input: "training_2/Adam/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_2_1"
  input: "training_2/Adam/add_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_2_1"
  input: "^training_2/Adam/AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_2_1"
  input: "training_2/Adam/add_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_2_1"
  input: "^training_2/Adam/AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "training_2/Adam/sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  input: "^training_2/Adam/AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_16"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_26"
  input: "training_2/Adam/mul_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_11"
  op: "Sub"
  input: "training_2/Adam/sub_11/x"
  input: "training_2/Adam/ReadVariableOp_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_17"
  op: "Mul"
  input: "training_2/Adam/sub_11"
  input: "training_2/Adam/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_10"
  op: "AddV2"
  input: "training_2/Adam/mul_16"
  input: "training_2/Adam/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_18"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_28"
  input: "training_2/Adam/mul_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_12"
  op: "Sub"
  input: "training_2/Adam/sub_12/x"
  input: "training_2/Adam/ReadVariableOp_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_3"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_19"
  op: "Mul"
  input: "training_2/Adam/sub_12"
  input: "training_2/Adam/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_11"
  op: "AddV2"
  input: "training_2/Adam/mul_18"
  input: "training_2/Adam/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_20"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_11"
  input: "training_2/Adam/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_4"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_4/Minimum"
  input: "training_2/Adam/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_4"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_12"
  op: "AddV2"
  input: "training_2/Adam/Sqrt_4"
  input: "training_2/Adam/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_4"
  op: "RealDiv"
  input: "training_2/Adam/mul_20"
  input: "training_2/Adam/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_13"
  op: "Sub"
  input: "training_2/Adam/ReadVariableOp_30"
  input: "training_2/Adam/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_3_1"
  input: "training_2/Adam/add_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_3_1"
  input: "^training_2/Adam/AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_3_1"
  input: "training_2/Adam/add_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_3_1"
  input: "^training_2/Adam/AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "training_2/Adam/sub_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  input: "^training_2/Adam/AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_21"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_34"
  input: "training_2/Adam/mul_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_14"
  op: "Sub"
  input: "training_2/Adam/sub_14/x"
  input: "training_2/Adam/ReadVariableOp_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_22"
  op: "Mul"
  input: "training_2/Adam/sub_14"
  input: "training_2/Adam/gradients/dense_3/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_13"
  op: "AddV2"
  input: "training_2/Adam/mul_21"
  input: "training_2/Adam/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_23"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_36"
  input: "training_2/Adam/mul_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_15"
  op: "Sub"
  input: "training_2/Adam/sub_15/x"
  input: "training_2/Adam/ReadVariableOp_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_4"
  op: "Square"
  input: "training_2/Adam/gradients/dense_3/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_24"
  op: "Mul"
  input: "training_2/Adam/sub_15"
  input: "training_2/Adam/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_14"
  op: "AddV2"
  input: "training_2/Adam/mul_23"
  input: "training_2/Adam/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_25"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_14"
  input: "training_2/Adam/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_5"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_5/Minimum"
  input: "training_2/Adam/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_5"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_15"
  op: "AddV2"
  input: "training_2/Adam/Sqrt_5"
  input: "training_2/Adam/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_5"
  op: "RealDiv"
  input: "training_2/Adam/mul_25"
  input: "training_2/Adam/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_16"
  op: "Sub"
  input: "training_2/Adam/ReadVariableOp_38"
  input: "training_2/Adam/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_4_1"
  input: "training_2/Adam/add_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_4_1"
  input: "^training_2/Adam/AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_4_1"
  input: "training_2/Adam/add_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_4_1"
  input: "^training_2/Adam/AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "training_2/Adam/sub_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  input: "^training_2/Adam/AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_26"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_42"
  input: "training_2/Adam/mul_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "Adam_2/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_17"
  op: "Sub"
  input: "training_2/Adam/sub_17/x"
  input: "training_2/Adam/ReadVariableOp_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_27"
  op: "Mul"
  input: "training_2/Adam/sub_17"
  input: "training_2/Adam/gradients/dense_3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_16"
  op: "AddV2"
  input: "training_2/Adam/mul_26"
  input: "training_2/Adam/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_28"
  op: "Mul"
  input: "training_2/Adam/ReadVariableOp_44"
  input: "training_2/Adam/mul_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "Adam_2/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_18"
  op: "Sub"
  input: "training_2/Adam/sub_18/x"
  input: "training_2/Adam/ReadVariableOp_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_5"
  op: "Square"
  input: "training_2/Adam/gradients/dense_3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_29"
  op: "Mul"
  input: "training_2/Adam/sub_18"
  input: "training_2/Adam/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_17"
  op: "AddV2"
  input: "training_2/Adam/mul_28"
  input: "training_2/Adam/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_30"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_17"
  input: "training_2/Adam/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_6"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_6/Minimum"
  input: "training_2/Adam/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_6"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_18"
  op: "AddV2"
  input: "training_2/Adam/Sqrt_6"
  input: "training_2/Adam/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_6"
  op: "RealDiv"
  input: "training_2/Adam/mul_30"
  input: "training_2/Adam/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_19"
  op: "Sub"
  input: "training_2/Adam/ReadVariableOp_46"
  input: "training_2/Adam/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_5_1"
  input: "training_2/Adam/add_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_5_1"
  input: "^training_2/Adam/AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_5_1"
  input: "training_2/Adam/add_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_5_1"
  input: "^training_2/Adam/AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "training_2/Adam/sub_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  input: "^training_2/Adam/AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_2/iterations"
}
node {
  name: "training_2/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_0_1"
}
node {
  name: "training_2/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_0_1"
}
node {
  name: "training_2/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_0_1"
}
node {
  name: "training_2/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_5_1"
}
node {
  name: "training_2/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_2_1"
}
node {
  name: "training_2/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "Adam_2/decay"
}
node {
  name: "training_2/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_3_1"
}
node {
  name: "training_2/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_4_1"
}
node {
  name: "training_2/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_3_1"
}
node {
  name: "training_2/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "count_4"
}
node {
  name: "training_2/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_1_1"
}
node {
  name: "training_2/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "total_4"
}
node {
  name: "training_2/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "Adam_2/beta_1"
}
node {
  name: "training_2/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "total_5"
}
node {
  name: "training_2/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_4_1"
}
node {
  name: "training_2/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_2_1"
}
node {
  name: "training_2/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_3_1"
}
node {
  name: "training_2/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_2_1"
}
node {
  name: "training_2/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "Adam_2/beta_2"
}
node {
  name: "training_2/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "Adam_2/learning_rate"
}
node {
  name: "training_2/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "count_5"
}
node {
  name: "training_2/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/m_1_1"
}
node {
  name: "training_2/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_1_1"
}
node {
  name: "training_2/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_4_1"
}
node {
  name: "training_2/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/v_5_1"
}
node {
  name: "training_2/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "training_2/Adam/vhat_5_1"
}
node {
  name: "training_2/init"
  op: "NoOp"
  input: "^Adam_2/beta_1/Assign"
  input: "^Adam_2/beta_2/Assign"
  input: "^Adam_2/decay/Assign"
  input: "^Adam_2/iterations/Assign"
  input: "^Adam_2/learning_rate/Assign"
  input: "^count_4/Assign"
  input: "^count_5/Assign"
  input: "^total_4/Assign"
  input: "^total_5/Assign"
  input: "^training_2/Adam/m_0_1/Assign"
  input: "^training_2/Adam/m_1_1/Assign"
  input: "^training_2/Adam/m_2_1/Assign"
  input: "^training_2/Adam/m_3_1/Assign"
  input: "^training_2/Adam/m_4_1/Assign"
  input: "^training_2/Adam/m_5_1/Assign"
  input: "^training_2/Adam/v_0_1/Assign"
  input: "^training_2/Adam/v_1_1/Assign"
  input: "^training_2/Adam/v_2_1/Assign"
  input: "^training_2/Adam/v_3_1/Assign"
  input: "^training_2/Adam/v_4_1/Assign"
  input: "^training_2/Adam/v_5_1/Assign"
  input: "^training_2/Adam/vhat_0_1/Assign"
  input: "^training_2/Adam/vhat_1_1/Assign"
  input: "^training_2/Adam/vhat_2_1/Assign"
  input: "^training_2/Adam/vhat_3_1/Assign"
  input: "^training_2/Adam/vhat_4_1/Assign"
  input: "^training_2/Adam/vhat_5_1/Assign"
}
node {
  name: "training_2/group_deps"
  op: "NoOp"
  input: "^Mean_2"
  input: "^metrics_2/accuracy/AssignAddVariableOp"
  input: "^metrics_2/accuracy/AssignAddVariableOp_1"
  input: "^metrics_2/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_2/binary_crossentropy/AssignAddVariableOp_1"
  input: "^training_2/Adam/AssignAddVariableOp"
  input: "^training_2/Adam/AssignVariableOp"
  input: "^training_2/Adam/AssignVariableOp_1"
  input: "^training_2/Adam/AssignVariableOp_10"
  input: "^training_2/Adam/AssignVariableOp_11"
  input: "^training_2/Adam/AssignVariableOp_12"
  input: "^training_2/Adam/AssignVariableOp_13"
  input: "^training_2/Adam/AssignVariableOp_14"
  input: "^training_2/Adam/AssignVariableOp_15"
  input: "^training_2/Adam/AssignVariableOp_16"
  input: "^training_2/Adam/AssignVariableOp_17"
  input: "^training_2/Adam/AssignVariableOp_2"
  input: "^training_2/Adam/AssignVariableOp_3"
  input: "^training_2/Adam/AssignVariableOp_4"
  input: "^training_2/Adam/AssignVariableOp_5"
  input: "^training_2/Adam/AssignVariableOp_6"
  input: "^training_2/Adam/AssignVariableOp_7"
  input: "^training_2/Adam/AssignVariableOp_8"
  input: "^training_2/Adam/AssignVariableOp_9"
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "Adam_2/iterations"
  input: "Placeholder_56"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_56"
  op: "ReadVariableOp"
  input: "Adam_2/iterations"
  input: "^AssignVariableOp_56"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_0_1"
  input: "Placeholder_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_57"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_0_1"
  input: "^AssignVariableOp_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_1_1"
  input: "Placeholder_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_58"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_1_1"
  input: "^AssignVariableOp_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_2_1"
  input: "Placeholder_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_59"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_2_1"
  input: "^AssignVariableOp_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_3_1"
  input: "Placeholder_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_60"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_3_1"
  input: "^AssignVariableOp_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_4_1"
  input: "Placeholder_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_61"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_4_1"
  input: "^AssignVariableOp_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_5_1"
  input: "Placeholder_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_62"
  op: "ReadVariableOp"
  input: "training_2/Adam/m_5_1"
  input: "^AssignVariableOp_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_0_1"
  input: "Placeholder_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_63"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_0_1"
  input: "^AssignVariableOp_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_1_1"
  input: "Placeholder_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_64"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_1_1"
  input: "^AssignVariableOp_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_2_1"
  input: "Placeholder_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_65"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_2_1"
  input: "^AssignVariableOp_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_3_1"
  input: "Placeholder_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_66"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_3_1"
  input: "^AssignVariableOp_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_4_1"
  input: "Placeholder_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_67"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_4_1"
  input: "^AssignVariableOp_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_5_1"
  input: "Placeholder_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_68"
  op: "ReadVariableOp"
  input: "training_2/Adam/v_5_1"
  input: "^AssignVariableOp_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_0_1"
  input: "Placeholder_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_69"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_0_1"
  input: "^AssignVariableOp_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_1_1"
  input: "Placeholder_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_70"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_1_1"
  input: "^AssignVariableOp_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_2_1"
  input: "Placeholder_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_71"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_2_1"
  input: "^AssignVariableOp_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_3_1"
  input: "Placeholder_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_72"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_3_1"
  input: "^AssignVariableOp_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_4_1"
  input: "Placeholder_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_73"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_4_1"
  input: "^AssignVariableOp_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_5_1"
  input: "Placeholder_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_74"
  op: "ReadVariableOp"
  input: "training_2/Adam/vhat_5_1"
  input: "^AssignVariableOp_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 7
        }
      }
    }
  }
}
node {
  name: "dense_4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "dense_4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3613534
    }
  }
}
node {
  name: "dense_4/random_uniform/sub"
  op: "Sub"
  input: "dense_4/random_uniform/max"
  input: "dense_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/random_uniform/mul"
  op: "Mul"
  input: "dense_4/random_uniform/RandomUniform"
  input: "dense_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/random_uniform"
  op: "Add"
  input: "dense_4/random_uniform/mul"
  input: "dense_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_4/kernel"
    }
  }
}
node {
  name: "dense_4/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_4/kernel"
}
node {
  name: "dense_4/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_4/kernel"
  input: "dense_4/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_4/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_4/bias"
    }
  }
}
node {
  name: "dense_4/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_4/bias"
}
node {
  name: "dense_4/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_4/bias"
  input: "dense_4/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/MatMul"
  op: "MatMul"
  input: "dense_4_input"
  input: "dense_4/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/BiasAdd"
  op: "BiasAdd"
  input: "dense_4/MatMul"
  input: "dense_4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_4/Relu"
  op: "Relu"
  input: "dense_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "dropout_1/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/switch_t"
  op: "Identity"
  input: "dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/switch_f"
  op: "Identity"
  input: "dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/dropout/rate"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense_4/Relu"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5290386
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/random_uniform/max"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_1/cond/dropout/random_uniform/mul"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/sub/x"
  input: "dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_1/cond/dropout/truediv/x"
  input: "dropout_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_1/cond/dropout/random_uniform"
  input: "dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  input: "dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_1/cond/dropout/mul"
  input: "dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/Switch_1"
  op: "Switch"
  input: "dense_4/Relu"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
}
node {
  name: "dropout_1/cond/Merge"
  op: "Merge"
  input: "dropout_1/cond/Switch_1"
  input: "dropout_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "dense_5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_5/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8599869
    }
  }
}
node {
  name: "dense_5/random_uniform/sub"
  op: "Sub"
  input: "dense_5/random_uniform/max"
  input: "dense_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/random_uniform/mul"
  op: "Mul"
  input: "dense_5/random_uniform/RandomUniform"
  input: "dense_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/random_uniform"
  op: "Add"
  input: "dense_5/random_uniform/mul"
  input: "dense_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_5/kernel"
    }
  }
}
node {
  name: "dense_5/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_5/kernel"
}
node {
  name: "dense_5/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_5/kernel"
  input: "dense_5/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/weight_regularizer/Abs/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/weight_regularizer/Abs"
  op: "Abs"
  input: "dense_5/weight_regularizer/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_5/weight_regularizer/Sum"
  op: "Sum"
  input: "dense_5/weight_regularizer/Abs"
  input: "dense_5/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_5/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_5/weight_regularizer/mul"
  op: "Mul"
  input: "dense_5/weight_regularizer/mul/x"
  input: "dense_5/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_5/weight_regularizer/add"
  op: "AddV2"
  input: "dense_5/weight_regularizer/add/x"
  input: "dense_5/weight_regularizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_5/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_5/bias"
    }
  }
}
node {
  name: "dense_5/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_5/bias"
}
node {
  name: "dense_5/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_5/bias"
  input: "dense_5/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/weight_regularizer_1/Abs/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/weight_regularizer_1/Abs"
  op: "Abs"
  input: "dense_5/weight_regularizer_1/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/weight_regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense_5/weight_regularizer_1/Sum"
  op: "Sum"
  input: "dense_5/weight_regularizer_1/Abs"
  input: "dense_5/weight_regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_5/weight_regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_5/weight_regularizer_1/mul"
  op: "Mul"
  input: "dense_5/weight_regularizer_1/mul/x"
  input: "dense_5/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/weight_regularizer_1/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_5/weight_regularizer_1/add"
  op: "AddV2"
  input: "dense_5/weight_regularizer_1/add/x"
  input: "dense_5/weight_regularizer_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/MatMul"
  op: "MatMul"
  input: "dropout_1/cond/Merge"
  input: "dense_5/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_5/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/BiasAdd"
  op: "BiasAdd"
  input: "dense_5/MatMul"
  input: "dense_5/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_5/Relu"
  op: "Relu"
  input: "dense_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/switch_t"
  op: "Identity"
  input: "dropout_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/switch_f"
  op: "Identity"
  input: "dropout_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/dropout/rate"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_2/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense_5/Relu"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_2/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9685449
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_2/cond/dropout/random_uniform/max"
  input: "dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_2/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_2/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_2/cond/dropout/random_uniform/mul"
  input: "dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/sub"
  op: "Sub"
  input: "dropout_2/cond/dropout/sub/x"
  input: "dropout_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_2/cond/dropout/truediv/x"
  input: "dropout_2/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_2/cond/dropout/random_uniform"
  input: "dropout_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/mul"
  op: "Mul"
  input: "dropout_2/cond/dropout/Shape/Switch:1"
  input: "dropout_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_2/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_2/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_2/cond/dropout/mul"
  input: "dropout_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/Switch_1"
  op: "Switch"
  input: "dense_5/Relu"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
}
node {
  name: "dropout_2/cond/Merge"
  op: "Merge"
  input: "dropout_2/cond/Switch_1"
  input: "dropout_2/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_6/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2942138
    }
  }
}
node {
  name: "dense_6/random_uniform/sub"
  op: "Sub"
  input: "dense_6/random_uniform/max"
  input: "dense_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/random_uniform/mul"
  op: "Mul"
  input: "dense_6/random_uniform/RandomUniform"
  input: "dense_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/random_uniform"
  op: "Add"
  input: "dense_6/random_uniform/mul"
  input: "dense_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_6/kernel"
    }
  }
}
node {
  name: "dense_6/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_6/kernel"
}
node {
  name: "dense_6/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_6/kernel"
  input: "dense_6/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_6/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_6/bias"
    }
  }
}
node {
  name: "dense_6/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_6/bias"
}
node {
  name: "dense_6/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_6/bias"
  input: "dense_6/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/MatMul"
  op: "MatMul"
  input: "dropout_2/cond/Merge"
  input: "dense_6/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_6/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/BiasAdd"
  op: "BiasAdd"
  input: "dense_6/MatMul"
  input: "dense_6/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_6/Sigmoid"
  op: "Sigmoid"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "dense_4/kernel"
  input: "Placeholder_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_75"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  input: "^AssignVariableOp_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "dense_4/bias"
  input: "Placeholder_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_76"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  input: "^AssignVariableOp_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "dense_5/kernel"
  input: "Placeholder_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_77"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  input: "^AssignVariableOp_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_78"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "dense_5/bias"
  input: "Placeholder_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_78"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  input: "^AssignVariableOp_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_79"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "dense_6/kernel"
  input: "Placeholder_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_79"
  op: "ReadVariableOp"
  input: "dense_6/kernel"
  input: "^AssignVariableOp_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_80"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "dense_6/bias"
  input: "Placeholder_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_80"
  op: "ReadVariableOp"
  input: "dense_6/bias"
  input: "^AssignVariableOp_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "dense_5/kernel"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "dense_4/bias"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "dense_5/bias"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "dense_6/bias"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "dense_6/kernel"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "dense_4/kernel"
}
node {
  name: "init_3"
  op: "NoOp"
  input: "^dense_4/bias/Assign"
  input: "^dense_4/kernel/Assign"
  input: "^dense_5/bias/Assign"
  input: "^dense_5/kernel/Assign"
  input: "^dense_6/bias/Assign"
  input: "^dense_6/kernel/Assign"
}
node {
  name: "Adam_3/iterations/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_3/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam_3/iterations"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_3/iterations"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_3/iterations"
    }
  }
}
node {
  name: "Adam_3/iterations/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_3/iterations"
}
node {
  name: "Adam_3/iterations/Assign"
  op: "AssignVariableOp"
  input: "Adam_3/iterations"
  input: "Adam_3/iterations/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam_3/iterations/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_3/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam_3/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_3/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Adam_3/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_3/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_3/learning_rate"
    }
  }
}
node {
  name: "Adam_3/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_3/learning_rate"
}
node {
  name: "Adam_3/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "Adam_3/learning_rate"
  input: "Adam_3/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_3/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_3/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_3/beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_3/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_3/beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_3/beta_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_3/beta_1"
    }
  }
}
node {
  name: "Adam_3/beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_3/beta_1"
}
node {
  name: "Adam_3/beta_1/Assign"
  op: "AssignVariableOp"
  input: "Adam_3/beta_1"
  input: "Adam_3/beta_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_3/beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_3/beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_3/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam_3/beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_3/beta_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_3/beta_2"
    }
  }
}
node {
  name: "Adam_3/beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_3/beta_2"
}
node {
  name: "Adam_3/beta_2/Assign"
  op: "AssignVariableOp"
  input: "Adam_3/beta_2"
  input: "Adam_3/beta_2/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_3/beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_3/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_3/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam_3/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_3/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_3/decay"
    }
  }
}
node {
  name: "Adam_3/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_3/decay"
}
node {
  name: "Adam_3/decay/Assign"
  op: "AssignVariableOp"
  input: "Adam_3/decay"
  input: "Adam_3/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_3/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_3/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "dense_6_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_6"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_6"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_6"
    }
  }
}
node {
  name: "total_6/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_6"
}
node {
  name: "total_6/Assign"
  op: "AssignVariableOp"
  input: "total_6"
  input: "Const_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_6/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_6"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_6"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_6"
    }
  }
}
node {
  name: "count_6/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_6"
}
node {
  name: "count_6/Assign"
  op: "AssignVariableOp"
  input: "count_6"
  input: "Const_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_6/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_7"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_7"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_7"
    }
  }
}
node {
  name: "total_7/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_7"
}
node {
  name: "total_7/Assign"
  op: "AssignVariableOp"
  input: "total_7"
  input: "Const_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_7/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_7"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_7"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_7"
    }
  }
}
node {
  name: "count_7/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_7"
}
node {
  name: "count_7/Assign"
  op: "AssignVariableOp"
  input: "count_7"
  input: "Const_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_7/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/accuracy/Round"
  op: "Round"
  input: "dense_6/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/accuracy/Equal"
  op: "Equal"
  input: "dense_6_target"
  input: "metrics_3/accuracy/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics_3/accuracy/Cast"
  op: "Cast"
  input: "metrics_3/accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_3/accuracy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_3/accuracy/Mean"
  op: "Mean"
  input: "metrics_3/accuracy/Cast"
  input: "metrics_3/accuracy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_3/accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_3/accuracy/Sum"
  op: "Sum"
  input: "metrics_3/accuracy/Mean"
  input: "metrics_3/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_3/accuracy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_6"
  input: "metrics_3/accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/accuracy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_6"
  input: "^metrics_3/accuracy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/accuracy/Size"
  op: "Size"
  input: "metrics_3/accuracy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_3/accuracy/Cast_1"
  op: "Cast"
  input: "metrics_3/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_3/accuracy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_6"
  input: "metrics_3/accuracy/Cast_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/accuracy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_6"
  input: "^metrics_3/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/accuracy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_6"
  input: "^metrics_3/accuracy/AssignAddVariableOp"
  input: "^metrics_3/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/accuracy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_6"
  input: "^metrics_3/accuracy/AssignAddVariableOp"
  input: "^metrics_3/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/accuracy/truediv"
  op: "RealDiv"
  input: "metrics_3/accuracy/ReadVariableOp_2"
  input: "metrics_3/accuracy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/accuracy/Identity"
  op: "Identity"
  input: "metrics_3/accuracy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_6/BiasAdd"
  input: "metrics_3/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "metrics_3/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_6/BiasAdd"
  input: "metrics_3/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "metrics_3/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "metrics_3/binary_crossentropy/logistic_loss/Neg"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_6/BiasAdd"
  input: "dense_6_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "metrics_3/binary_crossentropy/logistic_loss/Select"
  input: "metrics_3/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "metrics_3/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "metrics_3/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "metrics_3/binary_crossentropy/logistic_loss/sub"
  input: "metrics_3/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/Mean"
  op: "Mean"
  input: "metrics_3/binary_crossentropy/logistic_loss"
  input: "metrics_3/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/Sum"
  op: "Sum"
  input: "metrics_3/binary_crossentropy/Mean"
  input: "metrics_3/binary_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_7"
  input: "metrics_3/binary_crossentropy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_7"
  input: "^metrics_3/binary_crossentropy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/Size"
  op: "Size"
  input: "metrics_3/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/Cast"
  op: "Cast"
  input: "metrics_3/binary_crossentropy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_7"
  input: "metrics_3/binary_crossentropy/Cast"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_7"
  input: "^metrics_3/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_7"
  input: "^metrics_3/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_3/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_7"
  input: "^metrics_3/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_3/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/truediv"
  op: "RealDiv"
  input: "metrics_3/binary_crossentropy/ReadVariableOp_2"
  input: "metrics_3/binary_crossentropy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_3/binary_crossentropy/Identity"
  op: "Identity"
  input: "metrics_3/binary_crossentropy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_6/BiasAdd"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_6/BiasAdd"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Neg"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_6/BiasAdd"
  input: "dense_6_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/Mean"
  op: "Mean"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
  input: "loss_3/dense_6_loss/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
  op: "Mul"
  input: "dense_6_sample_weights"
  input: "loss_3/dense_6_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum"
  op: "Sum"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  op: "Size"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
  op: "RealDiv"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_3/mul"
  op: "Mul"
  input: "loss_3/mul/x"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/add"
  op: "AddV2"
  input: "loss_3/mul"
  input: "dense_5/weight_regularizer/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_3/add_1"
  op: "AddV2"
  input: "loss_3/add"
  input: "dense_5/weight_regularizer_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Mean_3"
  op: "Mean"
  input: "loss_3/add_1"
  input: "Const_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Fill"
  op: "Fill"
  input: "training_3/Adam/gradients/Shape"
  input: "training_3/Adam/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/Mean_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Mean_3_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/Fill"
  input: "training_3/Adam/gradients/Mean_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Mean_3_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Mean_3_grad/Tile"
  op: "Tile"
  input: "training_3/Adam/gradients/Mean_3_grad/Reshape"
  input: "training_3/Adam/gradients/Mean_3_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Mean_3_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Mean_3_grad/truediv"
  op: "RealDiv"
  input: "training_3/Adam/gradients/Mean_3_grad/Tile"
  input: "training_3/Adam/gradients/Mean_3_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/mul_grad/Mul"
  op: "Mul"
  input: "training_3/Adam/gradients/Mean_3_grad/truediv"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/mul_grad/Mul_1"
  op: "Mul"
  input: "training_3/Adam/gradients/Mean_3_grad/truediv"
  input: "loss_3/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer_1/mul_grad/Mul"
  op: "Mul"
  input: "training_3/Adam/gradients/Mean_3_grad/truediv"
  input: "dense_5/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer_1/mul_grad/Mul_1"
  op: "Mul"
  input: "training_3/Adam/gradients/Mean_3_grad/truediv"
  input: "dense_5/weight_regularizer_1/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training_3/Adam/gradients/loss_3/mul_grad/Mul_1"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  op: "Neg"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  op: "Mul"
  input: "training_3/Adam/gradients/loss_3/mul_grad/Mul_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training_3/Adam/gradients/Mean_3_grad/truediv"
  input: "dense_5/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training_3/Adam/gradients/Mean_3_grad/truediv"
  input: "dense_5/weight_regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer_1/mul_grad/Mul_1"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Sum_grad/Tile"
  op: "Tile"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Sum_grad/Reshape"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer/mul_grad/Mul_1"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer/Sum_grad/Reshape"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Abs_grad/Sign"
  op: "Sign"
  input: "dense_5/weight_regularizer_1/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer_1/Abs"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Abs_grad/mul"
  op: "Mul"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Sum_grad/Tile"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer_1/Abs"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_6_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss_3/dense_6_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  input: "loss_3/dense_6_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_6_sample_weights"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer/Abs_grad/Sign"
  op: "Sign"
  input: "dense_5/weight_regularizer/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer/Abs"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/weight_regularizer/Abs_grad/mul"
  op: "Mul"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer/Sum_grad/Tile"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer/Abs"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Shape"
  op: "Shape"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/add"
  op: "AddV2"
  input: "loss_3/dense_6_loss/binary_crossentropy/Mean/reduction_indices"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/mod"
  op: "FloorMod"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/add"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/range"
  op: "Range"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/range/start"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Size"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Fill"
  op: "Fill"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Shape_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/range"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/mod"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Maximum"
  op: "Maximum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Tile"
  op: "Tile"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss_3/dense_6_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Prod"
  op: "Prod"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Shape_2"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Prod_1"
  op: "Prod"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Shape_3"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Prod_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Prod"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Cast"
  op: "Cast"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/truediv"
  op: "RealDiv"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Tile"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Shape"
  op: "Shape"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Shape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Sum"
  op: "Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  op: "AddV2"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "dense_6_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  input: "dense_6_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_6/BiasAdd"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Exp"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "loss_3/dense_6_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Neg"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/AddN"
  op: "AddN"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  input: "training_3/Adam/gradients/loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_3/dense_6_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_3/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_6/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_3/Adam/gradients/AddN"
  input: "dense_6/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_6/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_2/cond/Merge"
  input: "training_3/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_3/Adam/gradients/dense_6/MatMul_grad/MatMul"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/MatMul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Switch"
  op: "Switch"
  input: "dense_5/Relu"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Identity"
  op: "Identity"
  input: "training_3/Adam/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Shape_1"
  op: "Shape"
  input: "training_3/Adam/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/zeros/Const"
  op: "Const"
  input: "^training_3/Adam/gradients/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/zeros"
  op: "Fill"
  input: "training_3/Adam/gradients/Shape_1"
  input: "training_3/Adam/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_3/Adam/gradients/dropout_2/cond/Merge_grad/cond_grad"
  input: "training_3/Adam/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_2/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Shape"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "training_3/Adam/gradients/dropout_2/cond/Merge_grad/cond_grad:1"
  input: "dropout_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Mul"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Sum"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_2/cond/dropout/mul"
  input: "training_3/Adam/gradients/dropout_2/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Mul_1"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Sum_1"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Shape"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Mul"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Sum"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_2/cond/dropout/Shape/Switch:1"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Mul_1"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Sum_1"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Switch_1"
  op: "Switch"
  input: "dense_5/Relu"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Identity_1"
  op: "Identity"
  input: "training_3/Adam/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Shape_2"
  op: "Shape"
  input: "training_3/Adam/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/zeros_1/Const"
  op: "Const"
  input: "^training_3/Adam/gradients/Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/zeros_1"
  op: "Fill"
  input: "training_3/Adam/gradients/Shape_2"
  input: "training_3/Adam/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_3/Adam/gradients/zeros_1"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/AddN_1"
  op: "AddN"
  input: "training_3/Adam/gradients/dropout_2/cond/Switch_1_grad/cond_grad"
  input: "training_3/Adam/gradients/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_3/Adam/gradients/AddN_1"
  input: "dense_5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_3/Adam/gradients/dense_5/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_3/Adam/gradients/dense_5/Relu_grad/ReluGrad"
  input: "dense_5/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_5/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_1/cond/Merge"
  input: "training_3/Adam/gradients/dense_5/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_3/Adam/gradients/dense_5/MatMul_grad/MatMul"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/MatMul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/AddN_2"
  op: "AddN"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer_1/Abs_grad/mul"
  input: "training_3/Adam/gradients/dense_5/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer_1/Abs"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Switch_2"
  op: "Switch"
  input: "dense_4/Relu"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Identity_2"
  op: "Identity"
  input: "training_3/Adam/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Shape_3"
  op: "Shape"
  input: "training_3/Adam/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/zeros_2/Const"
  op: "Const"
  input: "^training_3/Adam/gradients/Identity_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/zeros_2"
  op: "Fill"
  input: "training_3/Adam/gradients/Shape_3"
  input: "training_3/Adam/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_3/Adam/gradients/dropout_1/cond/Merge_grad/cond_grad"
  input: "training_3/Adam/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_1/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Shape"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "training_3/Adam/gradients/dropout_1/cond/Merge_grad/cond_grad:1"
  input: "dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Mul"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Sum"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/cond/dropout/mul"
  input: "training_3/Adam/gradients/dropout_1/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Mul_1"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Sum_1"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/AddN_3"
  op: "AddN"
  input: "training_3/Adam/gradients/dense_5/weight_regularizer/Abs_grad/mul"
  input: "training_3/Adam/gradients/dense_5/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/weight_regularizer/Abs"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Shape"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Mul"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Sum"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Mul_1"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Sum_1"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Switch_3"
  op: "Switch"
  input: "dense_4/Relu"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Identity_3"
  op: "Identity"
  input: "training_3/Adam/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/Shape_4"
  op: "Shape"
  input: "training_3/Adam/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/zeros_3/Const"
  op: "Const"
  input: "^training_3/Adam/gradients/Identity_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/zeros_3"
  op: "Fill"
  input: "training_3/Adam/gradients/Shape_4"
  input: "training_3/Adam/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/gradients/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_3/Adam/gradients/zeros_3"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/AddN_4"
  op: "AddN"
  input: "training_3/Adam/gradients/dropout_1/cond/Switch_1_grad/cond_grad"
  input: "training_3/Adam/gradients/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_3/Adam/gradients/AddN_4"
  input: "dense_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/Relu"
      }
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_3/Adam/gradients/dense_4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_4/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_3/Adam/gradients/dense_4/Relu_grad/ReluGrad"
  input: "dense_4/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_3/Adam/gradients/dense_4/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_4_input"
  input: "training_3/Adam/gradients/dense_4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "Adam_3/iterations"
  input: "training_3/Adam/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_3/iterations"
  input: "^training_3/Adam/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_3/Adam/Cast/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_3/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_3/Adam/Cast"
  op: "Cast"
  input: "training_3/Adam/Cast/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training_3/Adam/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/add"
  op: "AddV2"
  input: "training_3/Adam/Cast"
  input: "training_3/Adam/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Pow/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Pow"
  op: "Pow"
  input: "training_3/Adam/Pow/ReadVariableOp"
  input: "training_3/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub"
  op: "Sub"
  input: "training_3/Adam/sub/x"
  input: "training_3/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value/Minimum"
  op: "Minimum"
  input: "training_3/Adam/sub"
  input: "training_3/Adam/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value"
  op: "Maximum"
  input: "training_3/Adam/clip_by_value/Minimum"
  input: "training_3/Adam/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Sqrt"
  op: "Sqrt"
  input: "training_3/Adam/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Pow_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Pow_1"
  op: "Pow"
  input: "training_3/Adam/Pow_1/ReadVariableOp"
  input: "training_3/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_1"
  op: "Sub"
  input: "training_3/Adam/sub_1/x"
  input: "training_3/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/truediv"
  op: "RealDiv"
  input: "training_3/Adam/Sqrt"
  input: "training_3/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam_3/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_1"
  input: "training_3/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/m_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/m_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/m_0_1"
    }
  }
}
node {
  name: "training_3/Adam/m_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_0_1"
}
node {
  name: "training_3/Adam/m_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_0_1"
  input: "training_3/Adam/m_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/m_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/m_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/m_1_1"
    }
  }
}
node {
  name: "training_3/Adam/m_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_1_1"
}
node {
  name: "training_3/Adam/m_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_1_1"
  input: "training_3/Adam/m_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/m_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/m_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/m_2_1"
    }
  }
}
node {
  name: "training_3/Adam/m_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_2_1"
}
node {
  name: "training_3/Adam/m_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_2_1"
  input: "training_3/Adam/m_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/m_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/m_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/m_3_1"
    }
  }
}
node {
  name: "training_3/Adam/m_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_3_1"
}
node {
  name: "training_3/Adam/m_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_3_1"
  input: "training_3/Adam/m_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/m_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/m_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/m_4_1"
    }
  }
}
node {
  name: "training_3/Adam/m_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_4_1"
}
node {
  name: "training_3/Adam/m_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_4_1"
  input: "training_3/Adam/m_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/m_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/m_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/m_5_1"
    }
  }
}
node {
  name: "training_3/Adam/m_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_5_1"
}
node {
  name: "training_3/Adam/m_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_5_1"
  input: "training_3/Adam/m_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/m_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/v_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/v_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/v_0_1"
    }
  }
}
node {
  name: "training_3/Adam/v_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_0_1"
}
node {
  name: "training_3/Adam/v_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_0_1"
  input: "training_3/Adam/v_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/v_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/v_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/v_1_1"
    }
  }
}
node {
  name: "training_3/Adam/v_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_1_1"
}
node {
  name: "training_3/Adam/v_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_1_1"
  input: "training_3/Adam/v_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/v_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/v_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/v_2_1"
    }
  }
}
node {
  name: "training_3/Adam/v_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_2_1"
}
node {
  name: "training_3/Adam/v_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_2_1"
  input: "training_3/Adam/v_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/v_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/v_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/v_3_1"
    }
  }
}
node {
  name: "training_3/Adam/v_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_3_1"
}
node {
  name: "training_3/Adam/v_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_3_1"
  input: "training_3/Adam/v_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/v_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/v_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/v_4_1"
    }
  }
}
node {
  name: "training_3/Adam/v_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_4_1"
}
node {
  name: "training_3/Adam/v_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_4_1"
  input: "training_3/Adam/v_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/v_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/v_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/v_5_1"
    }
  }
}
node {
  name: "training_3/Adam/v_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_5_1"
}
node {
  name: "training_3/Adam/v_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_5_1"
  input: "training_3/Adam/v_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/v_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_0/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_0"
  op: "Fill"
  input: "training_3/Adam/vhat_0/shape_as_tensor"
  input: "training_3/Adam/vhat_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/vhat_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/vhat_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/vhat_0_1"
    }
  }
}
node {
  name: "training_3/Adam/vhat_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_0_1"
}
node {
  name: "training_3/Adam/vhat_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_0_1"
  input: "training_3/Adam/vhat_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_1"
  op: "Fill"
  input: "training_3/Adam/vhat_1/shape_as_tensor"
  input: "training_3/Adam/vhat_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/vhat_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/vhat_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/vhat_1_1"
    }
  }
}
node {
  name: "training_3/Adam/vhat_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_1_1"
}
node {
  name: "training_3/Adam/vhat_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_1_1"
  input: "training_3/Adam/vhat_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_2"
  op: "Fill"
  input: "training_3/Adam/vhat_2/shape_as_tensor"
  input: "training_3/Adam/vhat_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/vhat_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/vhat_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/vhat_2_1"
    }
  }
}
node {
  name: "training_3/Adam/vhat_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_2_1"
}
node {
  name: "training_3/Adam/vhat_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_2_1"
  input: "training_3/Adam/vhat_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_3/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_3"
  op: "Fill"
  input: "training_3/Adam/vhat_3/shape_as_tensor"
  input: "training_3/Adam/vhat_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/vhat_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/vhat_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/vhat_3_1"
    }
  }
}
node {
  name: "training_3/Adam/vhat_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_3_1"
}
node {
  name: "training_3/Adam/vhat_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_3_1"
  input: "training_3/Adam/vhat_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_4"
  op: "Fill"
  input: "training_3/Adam/vhat_4/shape_as_tensor"
  input: "training_3/Adam/vhat_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/vhat_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/vhat_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/vhat_4_1"
    }
  }
}
node {
  name: "training_3/Adam/vhat_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_4_1"
}
node {
  name: "training_3/Adam/vhat_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_4_1"
  input: "training_3/Adam/vhat_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_5/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/vhat_5"
  op: "Fill"
  input: "training_3/Adam/vhat_5/shape_as_tensor"
  input: "training_3/Adam/vhat_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_3/Adam/vhat_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_3/Adam/vhat_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_3/Adam/vhat_5_1"
    }
  }
}
node {
  name: "training_3/Adam/vhat_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_5_1"
}
node {
  name: "training_3/Adam/vhat_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_5_1"
  input: "training_3/Adam/vhat_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/vhat_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_1"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_2"
  input: "training_3/Adam/mul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_2"
  op: "Sub"
  input: "training_3/Adam/sub_2/x"
  input: "training_3/Adam/ReadVariableOp_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_2"
  op: "Mul"
  input: "training_3/Adam/sub_2"
  input: "training_3/Adam/gradients/dense_4/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_1"
  op: "AddV2"
  input: "training_3/Adam/mul_1"
  input: "training_3/Adam/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_3"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_4"
  input: "training_3/Adam/mul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_3"
  op: "Sub"
  input: "training_3/Adam/sub_3/x"
  input: "training_3/Adam/ReadVariableOp_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Square"
  op: "Square"
  input: "training_3/Adam/gradients/dense_4/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_4"
  op: "Mul"
  input: "training_3/Adam/sub_3"
  input: "training_3/Adam/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_2"
  op: "AddV2"
  input: "training_3/Adam/mul_3"
  input: "training_3/Adam/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_5"
  op: "Mul"
  input: "training_3/Adam/mul"
  input: "training_3/Adam/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training_3/Adam/add_2"
  input: "training_3/Adam/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_1"
  op: "Maximum"
  input: "training_3/Adam/clip_by_value_1/Minimum"
  input: "training_3/Adam/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Sqrt_1"
  op: "Sqrt"
  input: "training_3/Adam/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_3/Adam/add_3"
  op: "AddV2"
  input: "training_3/Adam/Sqrt_1"
  input: "training_3/Adam/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/truediv_1"
  op: "RealDiv"
  input: "training_3/Adam/mul_5"
  input: "training_3/Adam/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_4"
  op: "Sub"
  input: "training_3/Adam/ReadVariableOp_6"
  input: "training_3/Adam/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_0_1"
  input: "training_3/Adam/add_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_0_1"
  input: "^training_3/Adam/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_0_1"
  input: "training_3/Adam/add_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_0_1"
  input: "^training_3/Adam/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "dense_4/kernel"
  input: "training_3/Adam/sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  input: "^training_3/Adam/AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_6"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_10"
  input: "training_3/Adam/mul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_5"
  op: "Sub"
  input: "training_3/Adam/sub_5/x"
  input: "training_3/Adam/ReadVariableOp_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_7"
  op: "Mul"
  input: "training_3/Adam/sub_5"
  input: "training_3/Adam/gradients/dense_4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_4"
  op: "AddV2"
  input: "training_3/Adam/mul_6"
  input: "training_3/Adam/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_8"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_12"
  input: "training_3/Adam/mul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_6"
  op: "Sub"
  input: "training_3/Adam/sub_6/x"
  input: "training_3/Adam/ReadVariableOp_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Square_1"
  op: "Square"
  input: "training_3/Adam/gradients/dense_4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_9"
  op: "Mul"
  input: "training_3/Adam/sub_6"
  input: "training_3/Adam/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_5"
  op: "AddV2"
  input: "training_3/Adam/mul_8"
  input: "training_3/Adam/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_10"
  op: "Mul"
  input: "training_3/Adam/mul"
  input: "training_3/Adam/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training_3/Adam/add_5"
  input: "training_3/Adam/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_2"
  op: "Maximum"
  input: "training_3/Adam/clip_by_value_2/Minimum"
  input: "training_3/Adam/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Sqrt_2"
  op: "Sqrt"
  input: "training_3/Adam/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_3/Adam/add_6"
  op: "AddV2"
  input: "training_3/Adam/Sqrt_2"
  input: "training_3/Adam/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/truediv_2"
  op: "RealDiv"
  input: "training_3/Adam/mul_10"
  input: "training_3/Adam/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_7"
  op: "Sub"
  input: "training_3/Adam/ReadVariableOp_14"
  input: "training_3/Adam/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_1_1"
  input: "training_3/Adam/add_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_1_1"
  input: "^training_3/Adam/AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_1_1"
  input: "training_3/Adam/add_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_1_1"
  input: "^training_3/Adam/AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "dense_4/bias"
  input: "training_3/Adam/sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  input: "^training_3/Adam/AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_11"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_18"
  input: "training_3/Adam/mul_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_8"
  op: "Sub"
  input: "training_3/Adam/sub_8/x"
  input: "training_3/Adam/ReadVariableOp_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_12"
  op: "Mul"
  input: "training_3/Adam/sub_8"
  input: "training_3/Adam/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_7"
  op: "AddV2"
  input: "training_3/Adam/mul_11"
  input: "training_3/Adam/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_13"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_20"
  input: "training_3/Adam/mul_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_9"
  op: "Sub"
  input: "training_3/Adam/sub_9/x"
  input: "training_3/Adam/ReadVariableOp_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Square_2"
  op: "Square"
  input: "training_3/Adam/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_14"
  op: "Mul"
  input: "training_3/Adam/sub_9"
  input: "training_3/Adam/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_8"
  op: "AddV2"
  input: "training_3/Adam/mul_13"
  input: "training_3/Adam/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_15"
  op: "Mul"
  input: "training_3/Adam/mul"
  input: "training_3/Adam/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training_3/Adam/add_8"
  input: "training_3/Adam/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_3"
  op: "Maximum"
  input: "training_3/Adam/clip_by_value_3/Minimum"
  input: "training_3/Adam/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Sqrt_3"
  op: "Sqrt"
  input: "training_3/Adam/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_3/Adam/add_9"
  op: "AddV2"
  input: "training_3/Adam/Sqrt_3"
  input: "training_3/Adam/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/truediv_3"
  op: "RealDiv"
  input: "training_3/Adam/mul_15"
  input: "training_3/Adam/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_10"
  op: "Sub"
  input: "training_3/Adam/ReadVariableOp_22"
  input: "training_3/Adam/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_2_1"
  input: "training_3/Adam/add_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_2_1"
  input: "^training_3/Adam/AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_2_1"
  input: "training_3/Adam/add_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_2_1"
  input: "^training_3/Adam/AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dense_5/kernel"
  input: "training_3/Adam/sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  input: "^training_3/Adam/AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_16"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_26"
  input: "training_3/Adam/mul_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_11"
  op: "Sub"
  input: "training_3/Adam/sub_11/x"
  input: "training_3/Adam/ReadVariableOp_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_17"
  op: "Mul"
  input: "training_3/Adam/sub_11"
  input: "training_3/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_10"
  op: "AddV2"
  input: "training_3/Adam/mul_16"
  input: "training_3/Adam/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_18"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_28"
  input: "training_3/Adam/mul_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_12"
  op: "Sub"
  input: "training_3/Adam/sub_12/x"
  input: "training_3/Adam/ReadVariableOp_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Square_3"
  op: "Square"
  input: "training_3/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_19"
  op: "Mul"
  input: "training_3/Adam/sub_12"
  input: "training_3/Adam/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_11"
  op: "AddV2"
  input: "training_3/Adam/mul_18"
  input: "training_3/Adam/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_20"
  op: "Mul"
  input: "training_3/Adam/mul"
  input: "training_3/Adam/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training_3/Adam/add_11"
  input: "training_3/Adam/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_4"
  op: "Maximum"
  input: "training_3/Adam/clip_by_value_4/Minimum"
  input: "training_3/Adam/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Sqrt_4"
  op: "Sqrt"
  input: "training_3/Adam/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_3/Adam/add_12"
  op: "AddV2"
  input: "training_3/Adam/Sqrt_4"
  input: "training_3/Adam/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/truediv_4"
  op: "RealDiv"
  input: "training_3/Adam/mul_20"
  input: "training_3/Adam/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_13"
  op: "Sub"
  input: "training_3/Adam/ReadVariableOp_30"
  input: "training_3/Adam/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_3_1"
  input: "training_3/Adam/add_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_3_1"
  input: "^training_3/Adam/AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_3_1"
  input: "training_3/Adam/add_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_3_1"
  input: "^training_3/Adam/AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dense_5/bias"
  input: "training_3/Adam/sub_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  input: "^training_3/Adam/AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_21"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_34"
  input: "training_3/Adam/mul_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_14"
  op: "Sub"
  input: "training_3/Adam/sub_14/x"
  input: "training_3/Adam/ReadVariableOp_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_22"
  op: "Mul"
  input: "training_3/Adam/sub_14"
  input: "training_3/Adam/gradients/dense_6/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_13"
  op: "AddV2"
  input: "training_3/Adam/mul_21"
  input: "training_3/Adam/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_23"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_36"
  input: "training_3/Adam/mul_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_15"
  op: "Sub"
  input: "training_3/Adam/sub_15/x"
  input: "training_3/Adam/ReadVariableOp_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Square_4"
  op: "Square"
  input: "training_3/Adam/gradients/dense_6/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_24"
  op: "Mul"
  input: "training_3/Adam/sub_15"
  input: "training_3/Adam/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_14"
  op: "AddV2"
  input: "training_3/Adam/mul_23"
  input: "training_3/Adam/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_25"
  op: "Mul"
  input: "training_3/Adam/mul"
  input: "training_3/Adam/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training_3/Adam/add_14"
  input: "training_3/Adam/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_5"
  op: "Maximum"
  input: "training_3/Adam/clip_by_value_5/Minimum"
  input: "training_3/Adam/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Sqrt_5"
  op: "Sqrt"
  input: "training_3/Adam/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_3/Adam/add_15"
  op: "AddV2"
  input: "training_3/Adam/Sqrt_5"
  input: "training_3/Adam/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/truediv_5"
  op: "RealDiv"
  input: "training_3/Adam/mul_25"
  input: "training_3/Adam/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "dense_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_16"
  op: "Sub"
  input: "training_3/Adam/ReadVariableOp_38"
  input: "training_3/Adam/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_4_1"
  input: "training_3/Adam/add_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_4_1"
  input: "^training_3/Adam/AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_4_1"
  input: "training_3/Adam/add_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_4_1"
  input: "^training_3/Adam/AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "dense_6/kernel"
  input: "training_3/Adam/sub_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "dense_6/kernel"
  input: "^training_3/Adam/AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_26"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_42"
  input: "training_3/Adam/mul_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "Adam_3/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_17"
  op: "Sub"
  input: "training_3/Adam/sub_17/x"
  input: "training_3/Adam/ReadVariableOp_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_27"
  op: "Mul"
  input: "training_3/Adam/sub_17"
  input: "training_3/Adam/gradients/dense_6/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_16"
  op: "AddV2"
  input: "training_3/Adam/mul_26"
  input: "training_3/Adam/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_28"
  op: "Mul"
  input: "training_3/Adam/ReadVariableOp_44"
  input: "training_3/Adam/mul_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "Adam_3/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_3/Adam/sub_18"
  op: "Sub"
  input: "training_3/Adam/sub_18/x"
  input: "training_3/Adam/ReadVariableOp_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Square_5"
  op: "Square"
  input: "training_3/Adam/gradients/dense_6/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_29"
  op: "Mul"
  input: "training_3/Adam/sub_18"
  input: "training_3/Adam/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_17"
  op: "AddV2"
  input: "training_3/Adam/mul_28"
  input: "training_3/Adam/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/mul_30"
  op: "Mul"
  input: "training_3/Adam/mul"
  input: "training_3/Adam/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_3/Adam/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training_3/Adam/add_17"
  input: "training_3/Adam/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/clip_by_value_6"
  op: "Maximum"
  input: "training_3/Adam/clip_by_value_6/Minimum"
  input: "training_3/Adam/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/Sqrt_6"
  op: "Sqrt"
  input: "training_3/Adam/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_3/Adam/add_18"
  op: "AddV2"
  input: "training_3/Adam/Sqrt_6"
  input: "training_3/Adam/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/truediv_6"
  op: "RealDiv"
  input: "training_3/Adam/mul_30"
  input: "training_3/Adam/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "dense_6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/sub_19"
  op: "Sub"
  input: "training_3/Adam/ReadVariableOp_46"
  input: "training_3/Adam/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_5_1"
  input: "training_3/Adam/add_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_5_1"
  input: "^training_3/Adam/AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_5_1"
  input: "training_3/Adam/add_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_5_1"
  input: "^training_3/Adam/AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "dense_6/bias"
  input: "training_3/Adam/sub_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/Adam/ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "dense_6/bias"
  input: "^training_3/Adam/AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_3/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_3/iterations"
}
node {
  name: "training_3/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_0_1"
}
node {
  name: "training_3/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_0_1"
}
node {
  name: "training_3/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_4_1"
}
node {
  name: "training_3/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_3_1"
}
node {
  name: "training_3/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "Adam_3/learning_rate"
}
node {
  name: "training_3/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "Adam_3/beta_2"
}
node {
  name: "training_3/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_1_1"
}
node {
  name: "training_3/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_3_1"
}
node {
  name: "training_3/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_5_1"
}
node {
  name: "training_3/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_5_1"
}
node {
  name: "training_3/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_1_1"
}
node {
  name: "training_3/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "Adam_3/decay"
}
node {
  name: "training_3/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "total_6"
}
node {
  name: "training_3/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_5_1"
}
node {
  name: "training_3/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_2_1"
}
node {
  name: "training_3/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "Adam_3/beta_1"
}
node {
  name: "training_3/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "total_7"
}
node {
  name: "training_3/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "count_7"
}
node {
  name: "training_3/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_4_1"
}
node {
  name: "training_3/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_0_1"
}
node {
  name: "training_3/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_4_1"
}
node {
  name: "training_3/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/vhat_3_1"
}
node {
  name: "training_3/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "count_6"
}
node {
  name: "training_3/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/v_2_1"
}
node {
  name: "training_3/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_1_1"
}
node {
  name: "training_3/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "training_3/Adam/m_2_1"
}
node {
  name: "training_3/init"
  op: "NoOp"
  input: "^Adam_3/beta_1/Assign"
  input: "^Adam_3/beta_2/Assign"
  input: "^Adam_3/decay/Assign"
  input: "^Adam_3/iterations/Assign"
  input: "^Adam_3/learning_rate/Assign"
  input: "^count_6/Assign"
  input: "^count_7/Assign"
  input: "^total_6/Assign"
  input: "^total_7/Assign"
  input: "^training_3/Adam/m_0_1/Assign"
  input: "^training_3/Adam/m_1_1/Assign"
  input: "^training_3/Adam/m_2_1/Assign"
  input: "^training_3/Adam/m_3_1/Assign"
  input: "^training_3/Adam/m_4_1/Assign"
  input: "^training_3/Adam/m_5_1/Assign"
  input: "^training_3/Adam/v_0_1/Assign"
  input: "^training_3/Adam/v_1_1/Assign"
  input: "^training_3/Adam/v_2_1/Assign"
  input: "^training_3/Adam/v_3_1/Assign"
  input: "^training_3/Adam/v_4_1/Assign"
  input: "^training_3/Adam/v_5_1/Assign"
  input: "^training_3/Adam/vhat_0_1/Assign"
  input: "^training_3/Adam/vhat_1_1/Assign"
  input: "^training_3/Adam/vhat_2_1/Assign"
  input: "^training_3/Adam/vhat_3_1/Assign"
  input: "^training_3/Adam/vhat_4_1/Assign"
  input: "^training_3/Adam/vhat_5_1/Assign"
}
node {
  name: "training_3/group_deps"
  op: "NoOp"
  input: "^Mean_3"
  input: "^metrics_3/accuracy/AssignAddVariableOp"
  input: "^metrics_3/accuracy/AssignAddVariableOp_1"
  input: "^metrics_3/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_3/binary_crossentropy/AssignAddVariableOp_1"
  input: "^training_3/Adam/AssignAddVariableOp"
  input: "^training_3/Adam/AssignVariableOp"
  input: "^training_3/Adam/AssignVariableOp_1"
  input: "^training_3/Adam/AssignVariableOp_10"
  input: "^training_3/Adam/AssignVariableOp_11"
  input: "^training_3/Adam/AssignVariableOp_12"
  input: "^training_3/Adam/AssignVariableOp_13"
  input: "^training_3/Adam/AssignVariableOp_14"
  input: "^training_3/Adam/AssignVariableOp_15"
  input: "^training_3/Adam/AssignVariableOp_16"
  input: "^training_3/Adam/AssignVariableOp_17"
  input: "^training_3/Adam/AssignVariableOp_2"
  input: "^training_3/Adam/AssignVariableOp_3"
  input: "^training_3/Adam/AssignVariableOp_4"
  input: "^training_3/Adam/AssignVariableOp_5"
  input: "^training_3/Adam/AssignVariableOp_6"
  input: "^training_3/Adam/AssignVariableOp_7"
  input: "^training_3/Adam/AssignVariableOp_8"
  input: "^training_3/Adam/AssignVariableOp_9"
}
node {
  name: "Placeholder_81"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "Adam_3/iterations"
  input: "Placeholder_81"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_81"
  op: "ReadVariableOp"
  input: "Adam_3/iterations"
  input: "^AssignVariableOp_81"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Placeholder_82"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_0_1"
  input: "Placeholder_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_82"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_0_1"
  input: "^AssignVariableOp_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_83"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_1_1"
  input: "Placeholder_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_83"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_1_1"
  input: "^AssignVariableOp_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_84"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_2_1"
  input: "Placeholder_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_84"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_2_1"
  input: "^AssignVariableOp_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_85"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_3_1"
  input: "Placeholder_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_85"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_3_1"
  input: "^AssignVariableOp_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_86"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_4_1"
  input: "Placeholder_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_86"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_4_1"
  input: "^AssignVariableOp_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_87"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_5_1"
  input: "Placeholder_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_87"
  op: "ReadVariableOp"
  input: "training_3/Adam/m_5_1"
  input: "^AssignVariableOp_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_88"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_0_1"
  input: "Placeholder_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_88"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_0_1"
  input: "^AssignVariableOp_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_89"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_1_1"
  input: "Placeholder_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_89"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_1_1"
  input: "^AssignVariableOp_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_90"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_2_1"
  input: "Placeholder_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_90"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_2_1"
  input: "^AssignVariableOp_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_91"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_3_1"
  input: "Placeholder_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_91"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_3_1"
  input: "^AssignVariableOp_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_92"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_4_1"
  input: "Placeholder_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_92"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_4_1"
  input: "^AssignVariableOp_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_93"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_5_1"
  input: "Placeholder_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_93"
  op: "ReadVariableOp"
  input: "training_3/Adam/v_5_1"
  input: "^AssignVariableOp_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_94"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_0_1"
  input: "Placeholder_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_94"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_0_1"
  input: "^AssignVariableOp_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_95"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_1_1"
  input: "Placeholder_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_95"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_1_1"
  input: "^AssignVariableOp_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_96"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_2_1"
  input: "Placeholder_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_96"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_2_1"
  input: "^AssignVariableOp_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_97"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_3_1"
  input: "Placeholder_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_97"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_3_1"
  input: "^AssignVariableOp_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_98"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_4_1"
  input: "Placeholder_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_98"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_4_1"
  input: "^AssignVariableOp_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_99"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_5_1"
  input: "Placeholder_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_99"
  op: "ReadVariableOp"
  input: "training_3/Adam/vhat_5_1"
  input: "^AssignVariableOp_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 7
        }
      }
    }
  }
}
node {
  name: "dense_7_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "dense_7_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_7_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_7_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_7_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8516649
    }
  }
}
node {
  name: "dense_7_1/random_uniform/sub"
  op: "Sub"
  input: "dense_7_1/random_uniform/max"
  input: "dense_7_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_1/random_uniform/mul"
  op: "Mul"
  input: "dense_7_1/random_uniform/RandomUniform"
  input: "dense_7_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_1/random_uniform"
  op: "Add"
  input: "dense_7_1/random_uniform/mul"
  input: "dense_7_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_7_1/kernel"
    }
  }
}
node {
  name: "dense_7_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_7_1/kernel"
}
node {
  name: "dense_7_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_7_1/kernel"
  input: "dense_7_1/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_7_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_7_1/bias"
    }
  }
}
node {
  name: "dense_7_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_7_1/bias"
}
node {
  name: "dense_7_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_7_1/bias"
  input: "dense_7_1/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_1/MatMul"
  op: "MatMul"
  input: "dense_7_input_1"
  input: "dense_7_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_7_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_7_1/MatMul"
  input: "dense_7_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_7_1/Relu"
  op: "Relu"
  input: "dense_7_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/switch_t"
  op: "Identity"
  input: "dropout_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/switch_f"
  op: "Identity"
  input: "dropout_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/dropout/rate"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_3/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_3/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense_7_1/Relu"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_3/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8264093
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_3/cond/dropout/random_uniform/max"
  input: "dropout_3/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_3/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_3/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_3/cond/dropout/random_uniform/mul"
  input: "dropout_3/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/sub"
  op: "Sub"
  input: "dropout_3/cond/dropout/sub/x"
  input: "dropout_3/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_3/cond/dropout/truediv/x"
  input: "dropout_3/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_3/cond/dropout/random_uniform"
  input: "dropout_3/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/mul"
  op: "Mul"
  input: "dropout_3/cond/dropout/Shape/Switch:1"
  input: "dropout_3/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_3/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_3/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_3/cond/dropout/mul"
  input: "dropout_3/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/Switch_1"
  op: "Switch"
  input: "dense_7_1/Relu"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
}
node {
  name: "dropout_3/cond/Merge"
  op: "Merge"
  input: "dropout_3/cond/Switch_1"
  input: "dropout_3/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "dense_8_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_8_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_8_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_8_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1410638
    }
  }
}
node {
  name: "dense_8_1/random_uniform/sub"
  op: "Sub"
  input: "dense_8_1/random_uniform/max"
  input: "dense_8_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/random_uniform/mul"
  op: "Mul"
  input: "dense_8_1/random_uniform/RandomUniform"
  input: "dense_8_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/random_uniform"
  op: "Add"
  input: "dense_8_1/random_uniform/mul"
  input: "dense_8_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_8_1/kernel"
    }
  }
}
node {
  name: "dense_8_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_8_1/kernel"
}
node {
  name: "dense_8_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_8_1/kernel"
  input: "dense_8_1/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer/Abs/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer/Abs"
  op: "Abs"
  input: "dense_8_1/weight_regularizer/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer/Sum"
  op: "Sum"
  input: "dense_8_1/weight_regularizer/Abs"
  input: "dense_8_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer/mul"
  op: "Mul"
  input: "dense_8_1/weight_regularizer/mul/x"
  input: "dense_8_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer/add"
  op: "AddV2"
  input: "dense_8_1/weight_regularizer/add/x"
  input: "dense_8_1/weight_regularizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_8_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_8_1/bias"
    }
  }
}
node {
  name: "dense_8_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_8_1/bias"
}
node {
  name: "dense_8_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_8_1/bias"
  input: "dense_8_1/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer_1/Abs/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer_1/Abs"
  op: "Abs"
  input: "dense_8_1/weight_regularizer_1/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer_1/Sum"
  op: "Sum"
  input: "dense_8_1/weight_regularizer_1/Abs"
  input: "dense_8_1/weight_regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer_1/mul"
  op: "Mul"
  input: "dense_8_1/weight_regularizer_1/mul/x"
  input: "dense_8_1/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer_1/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_8_1/weight_regularizer_1/add"
  op: "AddV2"
  input: "dense_8_1/weight_regularizer_1/add/x"
  input: "dense_8_1/weight_regularizer_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/MatMul"
  op: "MatMul"
  input: "dropout_3/cond/Merge"
  input: "dense_8_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_8_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_8_1/MatMul"
  input: "dense_8_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_8_1/Relu"
  op: "Relu"
  input: "dense_8_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_4/cond/switch_t"
  op: "Identity"
  input: "dropout_4/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_4/cond/switch_f"
  op: "Identity"
  input: "dropout_4/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_4/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_4/cond/dropout/rate"
  op: "Const"
  input: "^dropout_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_4/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_4/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense_8_1/Relu"
  input: "dropout_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_4/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2500313
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_4/cond/dropout/random_uniform/max"
  input: "dropout_4/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_4/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_4/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_4/cond/dropout/random_uniform/mul"
  input: "dropout_4/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/sub"
  op: "Sub"
  input: "dropout_4/cond/dropout/sub/x"
  input: "dropout_4/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_4/cond/dropout/truediv/x"
  input: "dropout_4/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_4/cond/dropout/random_uniform"
  input: "dropout_4/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/mul"
  op: "Mul"
  input: "dropout_4/cond/dropout/Shape/Switch:1"
  input: "dropout_4/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_4/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_4/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_4/cond/dropout/mul"
  input: "dropout_4/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/Switch_1"
  op: "Switch"
  input: "dense_8_1/Relu"
  input: "dropout_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
}
node {
  name: "dropout_4/cond/Merge"
  op: "Merge"
  input: "dropout_4/cond/Switch_1"
  input: "dropout_4/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_9_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_9_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_9_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_9_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 550868
    }
  }
}
node {
  name: "dense_9_1/random_uniform/sub"
  op: "Sub"
  input: "dense_9_1/random_uniform/max"
  input: "dense_9_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_1/random_uniform/mul"
  op: "Mul"
  input: "dense_9_1/random_uniform/RandomUniform"
  input: "dense_9_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_1/random_uniform"
  op: "Add"
  input: "dense_9_1/random_uniform/mul"
  input: "dense_9_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_9_1/kernel"
    }
  }
}
node {
  name: "dense_9_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_9_1/kernel"
}
node {
  name: "dense_9_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_9_1/kernel"
  input: "dense_9_1/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_9_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_9_1/bias"
    }
  }
}
node {
  name: "dense_9_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_9_1/bias"
}
node {
  name: "dense_9_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_9_1/bias"
  input: "dense_9_1/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_1/MatMul"
  op: "MatMul"
  input: "dropout_4/cond/Merge"
  input: "dense_9_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_9_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_9_1/MatMul"
  input: "dense_9_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_9_1/Sigmoid"
  op: "Sigmoid"
  input: "dense_9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_100"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "dense_7_1/kernel"
  input: "Placeholder_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_100"
  op: "ReadVariableOp"
  input: "dense_7_1/kernel"
  input: "^AssignVariableOp_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_101"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "dense_7_1/bias"
  input: "Placeholder_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_101"
  op: "ReadVariableOp"
  input: "dense_7_1/bias"
  input: "^AssignVariableOp_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_102"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "dense_8_1/kernel"
  input: "Placeholder_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_102"
  op: "ReadVariableOp"
  input: "dense_8_1/kernel"
  input: "^AssignVariableOp_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_103"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "dense_8_1/bias"
  input: "Placeholder_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_103"
  op: "ReadVariableOp"
  input: "dense_8_1/bias"
  input: "^AssignVariableOp_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_104"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "dense_9_1/kernel"
  input: "Placeholder_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_104"
  op: "ReadVariableOp"
  input: "dense_9_1/kernel"
  input: "^AssignVariableOp_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_105"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "dense_9_1/bias"
  input: "Placeholder_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_105"
  op: "ReadVariableOp"
  input: "dense_9_1/bias"
  input: "^AssignVariableOp_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "dense_7_1/kernel"
}
node {
  name: "VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "dense_9_1/bias"
}
node {
  name: "VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "dense_9_1/kernel"
}
node {
  name: "VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "dense_8_1/kernel"
}
node {
  name: "VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "dense_7_1/bias"
}
node {
  name: "VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "dense_8_1/bias"
}
node {
  name: "init_4"
  op: "NoOp"
  input: "^dense_7_1/bias/Assign"
  input: "^dense_7_1/kernel/Assign"
  input: "^dense_8_1/bias/Assign"
  input: "^dense_8_1/kernel/Assign"
  input: "^dense_9_1/bias/Assign"
  input: "^dense_9_1/kernel/Assign"
}
node {
  name: "Adam_4/iterations/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_4/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam_4/iterations"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_4/iterations"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_4/iterations"
    }
  }
}
node {
  name: "Adam_4/iterations/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_4/iterations"
}
node {
  name: "Adam_4/iterations/Assign"
  op: "AssignVariableOp"
  input: "Adam_4/iterations"
  input: "Adam_4/iterations/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam_4/iterations/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_4/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam_4/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_4/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Adam_4/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_4/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_4/learning_rate"
    }
  }
}
node {
  name: "Adam_4/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_4/learning_rate"
}
node {
  name: "Adam_4/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "Adam_4/learning_rate"
  input: "Adam_4/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_4/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_4/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_4/beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_4/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_4/beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_4/beta_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_4/beta_1"
    }
  }
}
node {
  name: "Adam_4/beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_4/beta_1"
}
node {
  name: "Adam_4/beta_1/Assign"
  op: "AssignVariableOp"
  input: "Adam_4/beta_1"
  input: "Adam_4/beta_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_4/beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_4/beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_4/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam_4/beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_4/beta_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_4/beta_2"
    }
  }
}
node {
  name: "Adam_4/beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_4/beta_2"
}
node {
  name: "Adam_4/beta_2/Assign"
  op: "AssignVariableOp"
  input: "Adam_4/beta_2"
  input: "Adam_4/beta_2/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_4/beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_4/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_4/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam_4/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_4/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_4/decay"
    }
  }
}
node {
  name: "Adam_4/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_4/decay"
}
node {
  name: "Adam_4/decay/Assign"
  op: "AssignVariableOp"
  input: "Adam_4/decay"
  input: "Adam_4/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_4/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_4/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_target_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "dense_9_sample_weights_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_8"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_8"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_8"
    }
  }
}
node {
  name: "total_8/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_8"
}
node {
  name: "total_8/Assign"
  op: "AssignVariableOp"
  input: "total_8"
  input: "Const_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_8/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_8"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_8"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_8"
    }
  }
}
node {
  name: "count_8/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_8"
}
node {
  name: "count_8/Assign"
  op: "AssignVariableOp"
  input: "count_8"
  input: "Const_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_8/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_9"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_9"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_9"
    }
  }
}
node {
  name: "total_9/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_9"
}
node {
  name: "total_9/Assign"
  op: "AssignVariableOp"
  input: "total_9"
  input: "Const_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_9/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_9"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_9"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_9"
    }
  }
}
node {
  name: "count_9/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_9"
}
node {
  name: "count_9/Assign"
  op: "AssignVariableOp"
  input: "count_9"
  input: "Const_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_9/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/accuracy/Round"
  op: "Round"
  input: "dense_9_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/accuracy/Equal"
  op: "Equal"
  input: "dense_9_target_1"
  input: "metrics_4/accuracy/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics_4/accuracy/Cast"
  op: "Cast"
  input: "metrics_4/accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_4/accuracy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_4/accuracy/Mean"
  op: "Mean"
  input: "metrics_4/accuracy/Cast"
  input: "metrics_4/accuracy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_4/accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_4/accuracy/Sum"
  op: "Sum"
  input: "metrics_4/accuracy/Mean"
  input: "metrics_4/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_4/accuracy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_8"
  input: "metrics_4/accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/accuracy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_8"
  input: "^metrics_4/accuracy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/accuracy/Size"
  op: "Size"
  input: "metrics_4/accuracy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_4/accuracy/Cast_1"
  op: "Cast"
  input: "metrics_4/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_4/accuracy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_8"
  input: "metrics_4/accuracy/Cast_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/accuracy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_8"
  input: "^metrics_4/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/accuracy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_8"
  input: "^metrics_4/accuracy/AssignAddVariableOp"
  input: "^metrics_4/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/accuracy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_8"
  input: "^metrics_4/accuracy/AssignAddVariableOp"
  input: "^metrics_4/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/accuracy/truediv"
  op: "RealDiv"
  input: "metrics_4/accuracy/ReadVariableOp_2"
  input: "metrics_4/accuracy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/accuracy/Identity"
  op: "Identity"
  input: "metrics_4/accuracy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_9_1/BiasAdd"
  input: "metrics_4/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "metrics_4/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_9_1/BiasAdd"
  input: "metrics_4/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "metrics_4/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "metrics_4/binary_crossentropy/logistic_loss/Neg"
  input: "dense_9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_9_1/BiasAdd"
  input: "dense_9_target_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "metrics_4/binary_crossentropy/logistic_loss/Select"
  input: "metrics_4/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "metrics_4/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "metrics_4/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "metrics_4/binary_crossentropy/logistic_loss/sub"
  input: "metrics_4/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/Mean"
  op: "Mean"
  input: "metrics_4/binary_crossentropy/logistic_loss"
  input: "metrics_4/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/Sum"
  op: "Sum"
  input: "metrics_4/binary_crossentropy/Mean"
  input: "metrics_4/binary_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_9"
  input: "metrics_4/binary_crossentropy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_9"
  input: "^metrics_4/binary_crossentropy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/Size"
  op: "Size"
  input: "metrics_4/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/Cast"
  op: "Cast"
  input: "metrics_4/binary_crossentropy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_9"
  input: "metrics_4/binary_crossentropy/Cast"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_9"
  input: "^metrics_4/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_9"
  input: "^metrics_4/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_4/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_9"
  input: "^metrics_4/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_4/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/truediv"
  op: "RealDiv"
  input: "metrics_4/binary_crossentropy/ReadVariableOp_2"
  input: "metrics_4/binary_crossentropy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/binary_crossentropy/Identity"
  op: "Identity"
  input: "metrics_4/binary_crossentropy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_9_1/BiasAdd"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_9_1/BiasAdd"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
  input: "dense_9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_9_1/BiasAdd"
  input: "dense_9_target_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/Mean"
  op: "Mean"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
  input: "loss_4/dense_9_loss/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  op: "Mul"
  input: "dense_9_sample_weights_1"
  input: "loss_4/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
  op: "Sum"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  op: "Size"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
  op: "RealDiv"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_4/mul"
  op: "Mul"
  input: "loss_4/mul/x"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/add"
  op: "AddV2"
  input: "loss_4/mul"
  input: "dense_8_1/weight_regularizer/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_4/add_1"
  op: "AddV2"
  input: "loss_4/add"
  input: "dense_8_1/weight_regularizer_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Mean_4"
  op: "Mean"
  input: "loss_4/add_1"
  input: "Const_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Fill"
  op: "Fill"
  input: "training_4/Adam/gradients/Shape"
  input: "training_4/Adam/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_4"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/Mean_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Mean_4_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/Fill"
  input: "training_4/Adam/gradients/Mean_4_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_4"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Mean_4_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Mean_4_grad/Tile"
  op: "Tile"
  input: "training_4/Adam/gradients/Mean_4_grad/Reshape"
  input: "training_4/Adam/gradients/Mean_4_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_4"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Mean_4_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Mean_4_grad/truediv"
  op: "RealDiv"
  input: "training_4/Adam/gradients/Mean_4_grad/Tile"
  input: "training_4/Adam/gradients/Mean_4_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_4"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/mul_grad/Mul"
  op: "Mul"
  input: "training_4/Adam/gradients/Mean_4_grad/truediv"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/mul_grad/Mul_1"
  op: "Mul"
  input: "training_4/Adam/gradients/Mean_4_grad/truediv"
  input: "loss_4/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/mul_grad/Mul"
  op: "Mul"
  input: "training_4/Adam/gradients/Mean_4_grad/truediv"
  input: "dense_8_1/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/mul_grad/Mul_1"
  op: "Mul"
  input: "training_4/Adam/gradients/Mean_4_grad/truediv"
  input: "dense_8_1/weight_regularizer_1/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training_4/Adam/gradients/loss_4/mul_grad/Mul_1"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  op: "Neg"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  op: "Mul"
  input: "training_4/Adam/gradients/loss_4/mul_grad/Mul_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training_4/Adam/gradients/Mean_4_grad/truediv"
  input: "dense_8_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training_4/Adam/gradients/Mean_4_grad/truediv"
  input: "dense_8_1/weight_regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/mul_grad/Mul_1"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Sum_grad/Tile"
  op: "Tile"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Sum_grad/Reshape"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer/mul_grad/Mul_1"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Sum_grad/Reshape"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Abs_grad/Sign"
  op: "Sign"
  input: "dense_8_1/weight_regularizer_1/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer_1/Abs"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Abs_grad/mul"
  op: "Mul"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Sum_grad/Tile"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer_1/Abs"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_9_sample_weights_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss_4/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  input: "loss_4/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_9_sample_weights_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Abs_grad/Sign"
  op: "Sign"
  input: "dense_8_1/weight_regularizer/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer/Abs"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Abs_grad/mul"
  op: "Mul"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Sum_grad/Tile"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer/Abs"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Shape"
  op: "Shape"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/add"
  op: "AddV2"
  input: "loss_4/dense_9_loss/binary_crossentropy/Mean/reduction_indices"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/mod"
  op: "FloorMod"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/add"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/range"
  op: "Range"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/range/start"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Fill"
  op: "Fill"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Shape_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/range"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/mod"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Maximum"
  op: "Maximum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Tile"
  op: "Tile"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss_4/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Prod"
  op: "Prod"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Shape_2"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Prod_1"
  op: "Prod"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Shape_3"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Prod_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Prod"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Cast"
  op: "Cast"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/truediv"
  op: "RealDiv"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Tile"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape"
  op: "Shape"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum"
  op: "Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  op: "AddV2"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dense_9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "dense_9_target_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  input: "dense_9_target_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_9_1/BiasAdd"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "loss_4/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/AddN"
  op: "AddN"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  input: "training_4/Adam/gradients/loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_4/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_9_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_4/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_9_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_4/Adam/gradients/AddN"
  input: "dense_9_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_9_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_4/cond/Merge"
  input: "training_4/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_4/Adam/gradients/dense_9_1/MatMul_grad/MatMul"
  input: "dropout_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_1/MatMul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Switch"
  op: "Switch"
  input: "dense_8_1/Relu"
  input: "dropout_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Identity"
  op: "Identity"
  input: "training_4/Adam/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Shape_1"
  op: "Shape"
  input: "training_4/Adam/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/zeros/Const"
  op: "Const"
  input: "^training_4/Adam/gradients/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/zeros"
  op: "Fill"
  input: "training_4/Adam/gradients/Shape_1"
  input: "training_4/Adam/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_4/Adam/gradients/dropout_4/cond/Merge_grad/cond_grad"
  input: "training_4/Adam/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_4/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_4/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Shape"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "training_4/Adam/gradients/dropout_4/cond/Merge_grad/cond_grad:1"
  input: "dropout_4/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Mul"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Sum"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_4/cond/dropout/mul"
  input: "training_4/Adam/gradients/dropout_4/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Mul_1"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Sum_1"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_4/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_4/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Shape"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_4/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Mul"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Sum"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_4/cond/dropout/Shape/Switch:1"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Mul_1"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Sum_1"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_4/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Switch_1"
  op: "Switch"
  input: "dense_8_1/Relu"
  input: "dropout_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Identity_1"
  op: "Identity"
  input: "training_4/Adam/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Shape_2"
  op: "Shape"
  input: "training_4/Adam/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/zeros_1/Const"
  op: "Const"
  input: "^training_4/Adam/gradients/Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/zeros_1"
  op: "Fill"
  input: "training_4/Adam/gradients/Shape_2"
  input: "training_4/Adam/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_4/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_4/Adam/gradients/zeros_1"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/AddN_1"
  op: "AddN"
  input: "training_4/Adam/gradients/dropout_4/cond/Switch_1_grad/cond_grad"
  input: "training_4/Adam/gradients/dropout_4/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_4/Adam/gradients/AddN_1"
  input: "dense_8_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_4/Adam/gradients/dense_8_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_4/Adam/gradients/dense_8_1/Relu_grad/ReluGrad"
  input: "dense_8_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_8_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_3/cond/Merge"
  input: "training_4/Adam/gradients/dense_8_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_4/Adam/gradients/dense_8_1/MatMul_grad/MatMul"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/MatMul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/AddN_2"
  op: "AddN"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer_1/Abs_grad/mul"
  input: "training_4/Adam/gradients/dense_8_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer_1/Abs"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Switch_2"
  op: "Switch"
  input: "dense_7_1/Relu"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Identity_2"
  op: "Identity"
  input: "training_4/Adam/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Shape_3"
  op: "Shape"
  input: "training_4/Adam/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/zeros_2/Const"
  op: "Const"
  input: "^training_4/Adam/gradients/Identity_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/zeros_2"
  op: "Fill"
  input: "training_4/Adam/gradients/Shape_3"
  input: "training_4/Adam/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_4/Adam/gradients/dropout_3/cond/Merge_grad/cond_grad"
  input: "training_4/Adam/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_3/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Shape"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "training_4/Adam/gradients/dropout_3/cond/Merge_grad/cond_grad:1"
  input: "dropout_3/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Mul"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Sum"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_3/cond/dropout/mul"
  input: "training_4/Adam/gradients/dropout_3/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Mul_1"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Sum_1"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul_1"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/AddN_3"
  op: "AddN"
  input: "training_4/Adam/gradients/dense_8_1/weight_regularizer/Abs_grad/mul"
  input: "training_4/Adam/gradients/dense_8_1/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_1/weight_regularizer/Abs"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_3/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Shape"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_3/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Mul"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Sum"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_3/cond/dropout/Shape/Switch:1"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Mul_1"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Sum_1"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_3/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Switch_3"
  op: "Switch"
  input: "dense_7_1/Relu"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Identity_3"
  op: "Identity"
  input: "training_4/Adam/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/Shape_4"
  op: "Shape"
  input: "training_4/Adam/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/zeros_3/Const"
  op: "Const"
  input: "^training_4/Adam/gradients/Identity_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/zeros_3"
  op: "Fill"
  input: "training_4/Adam/gradients/Shape_4"
  input: "training_4/Adam/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/gradients/dropout_3/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_4/Adam/gradients/zeros_3"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/AddN_4"
  op: "AddN"
  input: "training_4/Adam/gradients/dropout_3/cond/Switch_1_grad/cond_grad"
  input: "training_4/Adam/gradients/dropout_3/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_7_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_4/Adam/gradients/AddN_4"
  input: "dense_7_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/Relu"
      }
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_7_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_4/Adam/gradients/dense_7_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_7_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_4/Adam/gradients/dense_7_1/Relu_grad/ReluGrad"
  input: "dense_7_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_4/Adam/gradients/dense_7_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_7_input_1"
  input: "training_4/Adam/gradients/dense_7_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "Adam_4/iterations"
  input: "training_4/Adam/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_4/iterations"
  input: "^training_4/Adam/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_4/Adam/Cast/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_4/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_4/Adam/Cast"
  op: "Cast"
  input: "training_4/Adam/Cast/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training_4/Adam/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/add"
  op: "AddV2"
  input: "training_4/Adam/Cast"
  input: "training_4/Adam/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Pow/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Pow"
  op: "Pow"
  input: "training_4/Adam/Pow/ReadVariableOp"
  input: "training_4/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub"
  op: "Sub"
  input: "training_4/Adam/sub/x"
  input: "training_4/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value/Minimum"
  op: "Minimum"
  input: "training_4/Adam/sub"
  input: "training_4/Adam/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value"
  op: "Maximum"
  input: "training_4/Adam/clip_by_value/Minimum"
  input: "training_4/Adam/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Sqrt"
  op: "Sqrt"
  input: "training_4/Adam/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Pow_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Pow_1"
  op: "Pow"
  input: "training_4/Adam/Pow_1/ReadVariableOp"
  input: "training_4/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_1"
  op: "Sub"
  input: "training_4/Adam/sub_1/x"
  input: "training_4/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/truediv"
  op: "RealDiv"
  input: "training_4/Adam/Sqrt"
  input: "training_4/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam_4/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_1"
  input: "training_4/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/m_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/m_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/m_0_1"
    }
  }
}
node {
  name: "training_4/Adam/m_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_0_1"
}
node {
  name: "training_4/Adam/m_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_0_1"
  input: "training_4/Adam/m_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/m_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/m_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/m_1_1"
    }
  }
}
node {
  name: "training_4/Adam/m_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_1_1"
}
node {
  name: "training_4/Adam/m_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_1_1"
  input: "training_4/Adam/m_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/m_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/m_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/m_2_1"
    }
  }
}
node {
  name: "training_4/Adam/m_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_2_1"
}
node {
  name: "training_4/Adam/m_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_2_1"
  input: "training_4/Adam/m_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/m_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/m_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/m_3_1"
    }
  }
}
node {
  name: "training_4/Adam/m_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_3_1"
}
node {
  name: "training_4/Adam/m_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_3_1"
  input: "training_4/Adam/m_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/m_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/m_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/m_4_1"
    }
  }
}
node {
  name: "training_4/Adam/m_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_4_1"
}
node {
  name: "training_4/Adam/m_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_4_1"
  input: "training_4/Adam/m_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/m_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/m_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/m_5_1"
    }
  }
}
node {
  name: "training_4/Adam/m_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_5_1"
}
node {
  name: "training_4/Adam/m_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_5_1"
  input: "training_4/Adam/m_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/m_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/v_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/v_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/v_0_1"
    }
  }
}
node {
  name: "training_4/Adam/v_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_0_1"
}
node {
  name: "training_4/Adam/v_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_0_1"
  input: "training_4/Adam/v_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/v_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/v_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/v_1_1"
    }
  }
}
node {
  name: "training_4/Adam/v_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_1_1"
}
node {
  name: "training_4/Adam/v_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_1_1"
  input: "training_4/Adam/v_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/v_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/v_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/v_2_1"
    }
  }
}
node {
  name: "training_4/Adam/v_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_2_1"
}
node {
  name: "training_4/Adam/v_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_2_1"
  input: "training_4/Adam/v_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/v_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/v_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/v_3_1"
    }
  }
}
node {
  name: "training_4/Adam/v_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_3_1"
}
node {
  name: "training_4/Adam/v_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_3_1"
  input: "training_4/Adam/v_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/v_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/v_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/v_4_1"
    }
  }
}
node {
  name: "training_4/Adam/v_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_4_1"
}
node {
  name: "training_4/Adam/v_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_4_1"
  input: "training_4/Adam/v_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/v_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/v_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/v_5_1"
    }
  }
}
node {
  name: "training_4/Adam/v_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_5_1"
}
node {
  name: "training_4/Adam/v_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_5_1"
  input: "training_4/Adam/v_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/v_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_0/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_0"
  op: "Fill"
  input: "training_4/Adam/vhat_0/shape_as_tensor"
  input: "training_4/Adam/vhat_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/vhat_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/vhat_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/vhat_0_1"
    }
  }
}
node {
  name: "training_4/Adam/vhat_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_0_1"
}
node {
  name: "training_4/Adam/vhat_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_0_1"
  input: "training_4/Adam/vhat_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_1"
  op: "Fill"
  input: "training_4/Adam/vhat_1/shape_as_tensor"
  input: "training_4/Adam/vhat_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/vhat_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/vhat_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/vhat_1_1"
    }
  }
}
node {
  name: "training_4/Adam/vhat_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_1_1"
}
node {
  name: "training_4/Adam/vhat_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_1_1"
  input: "training_4/Adam/vhat_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_2"
  op: "Fill"
  input: "training_4/Adam/vhat_2/shape_as_tensor"
  input: "training_4/Adam/vhat_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/vhat_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/vhat_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/vhat_2_1"
    }
  }
}
node {
  name: "training_4/Adam/vhat_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_2_1"
}
node {
  name: "training_4/Adam/vhat_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_2_1"
  input: "training_4/Adam/vhat_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_3/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_3"
  op: "Fill"
  input: "training_4/Adam/vhat_3/shape_as_tensor"
  input: "training_4/Adam/vhat_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/vhat_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/vhat_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/vhat_3_1"
    }
  }
}
node {
  name: "training_4/Adam/vhat_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_3_1"
}
node {
  name: "training_4/Adam/vhat_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_3_1"
  input: "training_4/Adam/vhat_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_4"
  op: "Fill"
  input: "training_4/Adam/vhat_4/shape_as_tensor"
  input: "training_4/Adam/vhat_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/vhat_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/vhat_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/vhat_4_1"
    }
  }
}
node {
  name: "training_4/Adam/vhat_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_4_1"
}
node {
  name: "training_4/Adam/vhat_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_4_1"
  input: "training_4/Adam/vhat_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_5/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/vhat_5"
  op: "Fill"
  input: "training_4/Adam/vhat_5/shape_as_tensor"
  input: "training_4/Adam/vhat_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_4/Adam/vhat_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_4/Adam/vhat_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_4/Adam/vhat_5_1"
    }
  }
}
node {
  name: "training_4/Adam/vhat_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_5_1"
}
node {
  name: "training_4/Adam/vhat_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_5_1"
  input: "training_4/Adam/vhat_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/vhat_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_1"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_2"
  input: "training_4/Adam/mul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_2"
  op: "Sub"
  input: "training_4/Adam/sub_2/x"
  input: "training_4/Adam/ReadVariableOp_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_2"
  op: "Mul"
  input: "training_4/Adam/sub_2"
  input: "training_4/Adam/gradients/dense_7_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_1"
  op: "AddV2"
  input: "training_4/Adam/mul_1"
  input: "training_4/Adam/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_3"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_4"
  input: "training_4/Adam/mul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_3"
  op: "Sub"
  input: "training_4/Adam/sub_3/x"
  input: "training_4/Adam/ReadVariableOp_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Square"
  op: "Square"
  input: "training_4/Adam/gradients/dense_7_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_4"
  op: "Mul"
  input: "training_4/Adam/sub_3"
  input: "training_4/Adam/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_2"
  op: "AddV2"
  input: "training_4/Adam/mul_3"
  input: "training_4/Adam/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_5"
  op: "Mul"
  input: "training_4/Adam/mul"
  input: "training_4/Adam/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training_4/Adam/add_2"
  input: "training_4/Adam/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_1"
  op: "Maximum"
  input: "training_4/Adam/clip_by_value_1/Minimum"
  input: "training_4/Adam/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Sqrt_1"
  op: "Sqrt"
  input: "training_4/Adam/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_4/Adam/add_3"
  op: "AddV2"
  input: "training_4/Adam/Sqrt_1"
  input: "training_4/Adam/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/truediv_1"
  op: "RealDiv"
  input: "training_4/Adam/mul_5"
  input: "training_4/Adam/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "dense_7_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_4"
  op: "Sub"
  input: "training_4/Adam/ReadVariableOp_6"
  input: "training_4/Adam/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_0_1"
  input: "training_4/Adam/add_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_0_1"
  input: "^training_4/Adam/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_0_1"
  input: "training_4/Adam/add_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_0_1"
  input: "^training_4/Adam/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "dense_7_1/kernel"
  input: "training_4/Adam/sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "dense_7_1/kernel"
  input: "^training_4/Adam/AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_6"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_10"
  input: "training_4/Adam/mul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_5"
  op: "Sub"
  input: "training_4/Adam/sub_5/x"
  input: "training_4/Adam/ReadVariableOp_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_7"
  op: "Mul"
  input: "training_4/Adam/sub_5"
  input: "training_4/Adam/gradients/dense_7_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_4"
  op: "AddV2"
  input: "training_4/Adam/mul_6"
  input: "training_4/Adam/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_8"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_12"
  input: "training_4/Adam/mul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_6"
  op: "Sub"
  input: "training_4/Adam/sub_6/x"
  input: "training_4/Adam/ReadVariableOp_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Square_1"
  op: "Square"
  input: "training_4/Adam/gradients/dense_7_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_9"
  op: "Mul"
  input: "training_4/Adam/sub_6"
  input: "training_4/Adam/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_5"
  op: "AddV2"
  input: "training_4/Adam/mul_8"
  input: "training_4/Adam/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_10"
  op: "Mul"
  input: "training_4/Adam/mul"
  input: "training_4/Adam/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training_4/Adam/add_5"
  input: "training_4/Adam/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_2"
  op: "Maximum"
  input: "training_4/Adam/clip_by_value_2/Minimum"
  input: "training_4/Adam/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Sqrt_2"
  op: "Sqrt"
  input: "training_4/Adam/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_4/Adam/add_6"
  op: "AddV2"
  input: "training_4/Adam/Sqrt_2"
  input: "training_4/Adam/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/truediv_2"
  op: "RealDiv"
  input: "training_4/Adam/mul_10"
  input: "training_4/Adam/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "dense_7_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_7"
  op: "Sub"
  input: "training_4/Adam/ReadVariableOp_14"
  input: "training_4/Adam/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_1_1"
  input: "training_4/Adam/add_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_1_1"
  input: "^training_4/Adam/AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_1_1"
  input: "training_4/Adam/add_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_1_1"
  input: "^training_4/Adam/AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "dense_7_1/bias"
  input: "training_4/Adam/sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "dense_7_1/bias"
  input: "^training_4/Adam/AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_11"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_18"
  input: "training_4/Adam/mul_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_8"
  op: "Sub"
  input: "training_4/Adam/sub_8/x"
  input: "training_4/Adam/ReadVariableOp_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_12"
  op: "Mul"
  input: "training_4/Adam/sub_8"
  input: "training_4/Adam/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_7"
  op: "AddV2"
  input: "training_4/Adam/mul_11"
  input: "training_4/Adam/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_13"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_20"
  input: "training_4/Adam/mul_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_9"
  op: "Sub"
  input: "training_4/Adam/sub_9/x"
  input: "training_4/Adam/ReadVariableOp_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Square_2"
  op: "Square"
  input: "training_4/Adam/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_14"
  op: "Mul"
  input: "training_4/Adam/sub_9"
  input: "training_4/Adam/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_8"
  op: "AddV2"
  input: "training_4/Adam/mul_13"
  input: "training_4/Adam/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_15"
  op: "Mul"
  input: "training_4/Adam/mul"
  input: "training_4/Adam/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training_4/Adam/add_8"
  input: "training_4/Adam/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_3"
  op: "Maximum"
  input: "training_4/Adam/clip_by_value_3/Minimum"
  input: "training_4/Adam/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Sqrt_3"
  op: "Sqrt"
  input: "training_4/Adam/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_4/Adam/add_9"
  op: "AddV2"
  input: "training_4/Adam/Sqrt_3"
  input: "training_4/Adam/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/truediv_3"
  op: "RealDiv"
  input: "training_4/Adam/mul_15"
  input: "training_4/Adam/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "dense_8_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_10"
  op: "Sub"
  input: "training_4/Adam/ReadVariableOp_22"
  input: "training_4/Adam/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_2_1"
  input: "training_4/Adam/add_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_2_1"
  input: "^training_4/Adam/AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_2_1"
  input: "training_4/Adam/add_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_2_1"
  input: "^training_4/Adam/AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dense_8_1/kernel"
  input: "training_4/Adam/sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "dense_8_1/kernel"
  input: "^training_4/Adam/AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_16"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_26"
  input: "training_4/Adam/mul_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_11"
  op: "Sub"
  input: "training_4/Adam/sub_11/x"
  input: "training_4/Adam/ReadVariableOp_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_17"
  op: "Mul"
  input: "training_4/Adam/sub_11"
  input: "training_4/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_10"
  op: "AddV2"
  input: "training_4/Adam/mul_16"
  input: "training_4/Adam/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_18"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_28"
  input: "training_4/Adam/mul_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_12"
  op: "Sub"
  input: "training_4/Adam/sub_12/x"
  input: "training_4/Adam/ReadVariableOp_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Square_3"
  op: "Square"
  input: "training_4/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_19"
  op: "Mul"
  input: "training_4/Adam/sub_12"
  input: "training_4/Adam/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_11"
  op: "AddV2"
  input: "training_4/Adam/mul_18"
  input: "training_4/Adam/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_20"
  op: "Mul"
  input: "training_4/Adam/mul"
  input: "training_4/Adam/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training_4/Adam/add_11"
  input: "training_4/Adam/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_4"
  op: "Maximum"
  input: "training_4/Adam/clip_by_value_4/Minimum"
  input: "training_4/Adam/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Sqrt_4"
  op: "Sqrt"
  input: "training_4/Adam/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_4/Adam/add_12"
  op: "AddV2"
  input: "training_4/Adam/Sqrt_4"
  input: "training_4/Adam/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/truediv_4"
  op: "RealDiv"
  input: "training_4/Adam/mul_20"
  input: "training_4/Adam/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "dense_8_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_13"
  op: "Sub"
  input: "training_4/Adam/ReadVariableOp_30"
  input: "training_4/Adam/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_3_1"
  input: "training_4/Adam/add_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_3_1"
  input: "^training_4/Adam/AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_3_1"
  input: "training_4/Adam/add_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_3_1"
  input: "^training_4/Adam/AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dense_8_1/bias"
  input: "training_4/Adam/sub_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "dense_8_1/bias"
  input: "^training_4/Adam/AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_21"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_34"
  input: "training_4/Adam/mul_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_14"
  op: "Sub"
  input: "training_4/Adam/sub_14/x"
  input: "training_4/Adam/ReadVariableOp_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_22"
  op: "Mul"
  input: "training_4/Adam/sub_14"
  input: "training_4/Adam/gradients/dense_9_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_13"
  op: "AddV2"
  input: "training_4/Adam/mul_21"
  input: "training_4/Adam/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_23"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_36"
  input: "training_4/Adam/mul_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_15"
  op: "Sub"
  input: "training_4/Adam/sub_15/x"
  input: "training_4/Adam/ReadVariableOp_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Square_4"
  op: "Square"
  input: "training_4/Adam/gradients/dense_9_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_24"
  op: "Mul"
  input: "training_4/Adam/sub_15"
  input: "training_4/Adam/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_14"
  op: "AddV2"
  input: "training_4/Adam/mul_23"
  input: "training_4/Adam/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_25"
  op: "Mul"
  input: "training_4/Adam/mul"
  input: "training_4/Adam/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training_4/Adam/add_14"
  input: "training_4/Adam/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_5"
  op: "Maximum"
  input: "training_4/Adam/clip_by_value_5/Minimum"
  input: "training_4/Adam/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Sqrt_5"
  op: "Sqrt"
  input: "training_4/Adam/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_4/Adam/add_15"
  op: "AddV2"
  input: "training_4/Adam/Sqrt_5"
  input: "training_4/Adam/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/truediv_5"
  op: "RealDiv"
  input: "training_4/Adam/mul_25"
  input: "training_4/Adam/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "dense_9_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_16"
  op: "Sub"
  input: "training_4/Adam/ReadVariableOp_38"
  input: "training_4/Adam/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_4_1"
  input: "training_4/Adam/add_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_4_1"
  input: "^training_4/Adam/AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_4_1"
  input: "training_4/Adam/add_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_4_1"
  input: "^training_4/Adam/AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "dense_9_1/kernel"
  input: "training_4/Adam/sub_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "dense_9_1/kernel"
  input: "^training_4/Adam/AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_26"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_42"
  input: "training_4/Adam/mul_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "Adam_4/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_17"
  op: "Sub"
  input: "training_4/Adam/sub_17/x"
  input: "training_4/Adam/ReadVariableOp_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_27"
  op: "Mul"
  input: "training_4/Adam/sub_17"
  input: "training_4/Adam/gradients/dense_9_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_16"
  op: "AddV2"
  input: "training_4/Adam/mul_26"
  input: "training_4/Adam/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_28"
  op: "Mul"
  input: "training_4/Adam/ReadVariableOp_44"
  input: "training_4/Adam/mul_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "Adam_4/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_4/Adam/sub_18"
  op: "Sub"
  input: "training_4/Adam/sub_18/x"
  input: "training_4/Adam/ReadVariableOp_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Square_5"
  op: "Square"
  input: "training_4/Adam/gradients/dense_9_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_29"
  op: "Mul"
  input: "training_4/Adam/sub_18"
  input: "training_4/Adam/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_17"
  op: "AddV2"
  input: "training_4/Adam/mul_28"
  input: "training_4/Adam/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/mul_30"
  op: "Mul"
  input: "training_4/Adam/mul"
  input: "training_4/Adam/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_4/Adam/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training_4/Adam/add_17"
  input: "training_4/Adam/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/clip_by_value_6"
  op: "Maximum"
  input: "training_4/Adam/clip_by_value_6/Minimum"
  input: "training_4/Adam/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/Sqrt_6"
  op: "Sqrt"
  input: "training_4/Adam/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_4/Adam/add_18"
  op: "AddV2"
  input: "training_4/Adam/Sqrt_6"
  input: "training_4/Adam/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/truediv_6"
  op: "RealDiv"
  input: "training_4/Adam/mul_30"
  input: "training_4/Adam/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "dense_9_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/sub_19"
  op: "Sub"
  input: "training_4/Adam/ReadVariableOp_46"
  input: "training_4/Adam/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_5_1"
  input: "training_4/Adam/add_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_5_1"
  input: "^training_4/Adam/AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_5_1"
  input: "training_4/Adam/add_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_5_1"
  input: "^training_4/Adam/AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "dense_9_1/bias"
  input: "training_4/Adam/sub_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/Adam/ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "dense_9_1/bias"
  input: "^training_4/Adam/AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_4/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_4_1"
}
node {
  name: "training_4/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "Adam_4/beta_1"
}
node {
  name: "training_4/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "count_9"
}
node {
  name: "training_4/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_2_1"
}
node {
  name: "training_4/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "Adam_4/decay"
}
node {
  name: "training_4/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_5_1"
}
node {
  name: "training_4/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_1_1"
}
node {
  name: "training_4/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "count_8"
}
node {
  name: "training_4/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_0_1"
}
node {
  name: "training_4/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_3_1"
}
node {
  name: "training_4/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_3_1"
}
node {
  name: "training_4/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "total_9"
}
node {
  name: "training_4/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "Adam_4/beta_2"
}
node {
  name: "training_4/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_4_1"
}
node {
  name: "training_4/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_0_1"
}
node {
  name: "training_4/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_1_1"
}
node {
  name: "training_4/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_2_1"
}
node {
  name: "training_4/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_5_1"
}
node {
  name: "training_4/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "Adam_4/iterations"
}
node {
  name: "training_4/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "Adam_4/learning_rate"
}
node {
  name: "training_4/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/vhat_4_1"
}
node {
  name: "training_4/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "total_8"
}
node {
  name: "training_4/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_3_1"
}
node {
  name: "training_4/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/m_1_1"
}
node {
  name: "training_4/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_0_1"
}
node {
  name: "training_4/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_5_1"
}
node {
  name: "training_4/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "training_4/Adam/v_2_1"
}
node {
  name: "training_4/init"
  op: "NoOp"
  input: "^Adam_4/beta_1/Assign"
  input: "^Adam_4/beta_2/Assign"
  input: "^Adam_4/decay/Assign"
  input: "^Adam_4/iterations/Assign"
  input: "^Adam_4/learning_rate/Assign"
  input: "^count_8/Assign"
  input: "^count_9/Assign"
  input: "^total_8/Assign"
  input: "^total_9/Assign"
  input: "^training_4/Adam/m_0_1/Assign"
  input: "^training_4/Adam/m_1_1/Assign"
  input: "^training_4/Adam/m_2_1/Assign"
  input: "^training_4/Adam/m_3_1/Assign"
  input: "^training_4/Adam/m_4_1/Assign"
  input: "^training_4/Adam/m_5_1/Assign"
  input: "^training_4/Adam/v_0_1/Assign"
  input: "^training_4/Adam/v_1_1/Assign"
  input: "^training_4/Adam/v_2_1/Assign"
  input: "^training_4/Adam/v_3_1/Assign"
  input: "^training_4/Adam/v_4_1/Assign"
  input: "^training_4/Adam/v_5_1/Assign"
  input: "^training_4/Adam/vhat_0_1/Assign"
  input: "^training_4/Adam/vhat_1_1/Assign"
  input: "^training_4/Adam/vhat_2_1/Assign"
  input: "^training_4/Adam/vhat_3_1/Assign"
  input: "^training_4/Adam/vhat_4_1/Assign"
  input: "^training_4/Adam/vhat_5_1/Assign"
}
node {
  name: "training_4/group_deps"
  op: "NoOp"
  input: "^Mean_4"
  input: "^metrics_4/accuracy/AssignAddVariableOp"
  input: "^metrics_4/accuracy/AssignAddVariableOp_1"
  input: "^metrics_4/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_4/binary_crossentropy/AssignAddVariableOp_1"
  input: "^training_4/Adam/AssignAddVariableOp"
  input: "^training_4/Adam/AssignVariableOp"
  input: "^training_4/Adam/AssignVariableOp_1"
  input: "^training_4/Adam/AssignVariableOp_10"
  input: "^training_4/Adam/AssignVariableOp_11"
  input: "^training_4/Adam/AssignVariableOp_12"
  input: "^training_4/Adam/AssignVariableOp_13"
  input: "^training_4/Adam/AssignVariableOp_14"
  input: "^training_4/Adam/AssignVariableOp_15"
  input: "^training_4/Adam/AssignVariableOp_16"
  input: "^training_4/Adam/AssignVariableOp_17"
  input: "^training_4/Adam/AssignVariableOp_2"
  input: "^training_4/Adam/AssignVariableOp_3"
  input: "^training_4/Adam/AssignVariableOp_4"
  input: "^training_4/Adam/AssignVariableOp_5"
  input: "^training_4/Adam/AssignVariableOp_6"
  input: "^training_4/Adam/AssignVariableOp_7"
  input: "^training_4/Adam/AssignVariableOp_8"
  input: "^training_4/Adam/AssignVariableOp_9"
}
node {
  name: "Placeholder_106"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "Adam_4/iterations"
  input: "Placeholder_106"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_106"
  op: "ReadVariableOp"
  input: "Adam_4/iterations"
  input: "^AssignVariableOp_106"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Placeholder_107"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_0_1"
  input: "Placeholder_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_107"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_0_1"
  input: "^AssignVariableOp_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_108"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_1_1"
  input: "Placeholder_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_108"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_1_1"
  input: "^AssignVariableOp_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_109"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_2_1"
  input: "Placeholder_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_109"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_2_1"
  input: "^AssignVariableOp_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_110"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_3_1"
  input: "Placeholder_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_110"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_3_1"
  input: "^AssignVariableOp_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_111"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_4_1"
  input: "Placeholder_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_111"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_4_1"
  input: "^AssignVariableOp_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_112"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_5_1"
  input: "Placeholder_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_112"
  op: "ReadVariableOp"
  input: "training_4/Adam/m_5_1"
  input: "^AssignVariableOp_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_113"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_0_1"
  input: "Placeholder_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_113"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_0_1"
  input: "^AssignVariableOp_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_114"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_1_1"
  input: "Placeholder_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_114"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_1_1"
  input: "^AssignVariableOp_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_115"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_2_1"
  input: "Placeholder_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_115"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_2_1"
  input: "^AssignVariableOp_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_116"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_3_1"
  input: "Placeholder_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_116"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_3_1"
  input: "^AssignVariableOp_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_117"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_4_1"
  input: "Placeholder_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_117"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_4_1"
  input: "^AssignVariableOp_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_118"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_5_1"
  input: "Placeholder_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_118"
  op: "ReadVariableOp"
  input: "training_4/Adam/v_5_1"
  input: "^AssignVariableOp_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_119"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_0_1"
  input: "Placeholder_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_119"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_0_1"
  input: "^AssignVariableOp_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_120"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_1_1"
  input: "Placeholder_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_120"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_1_1"
  input: "^AssignVariableOp_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_121"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_2_1"
  input: "Placeholder_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_121"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_2_1"
  input: "^AssignVariableOp_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_122"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_3_1"
  input: "Placeholder_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_122"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_3_1"
  input: "^AssignVariableOp_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_123"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_4_1"
  input: "Placeholder_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_123"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_4_1"
  input: "^AssignVariableOp_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_124"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_5_1"
  input: "Placeholder_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_124"
  op: "ReadVariableOp"
  input: "training_4/Adam/vhat_5_1"
  input: "^AssignVariableOp_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^dense_3/Sigmoid"
}
node {
  name: "group_deps_3"
  op: "NoOp"
  input: "^dense_6/Sigmoid"
}
node {
  name: "group_deps_4"
  op: "NoOp"
  input: "^dense_9_1/Sigmoid"
}
node {
  name: "dense_7_input_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 7
        }
      }
    }
  }
}
node {
  name: "dense_7_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "dense_7_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_7_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_7_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_7_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2615900
    }
  }
}
node {
  name: "dense_7_2/random_uniform/sub"
  op: "Sub"
  input: "dense_7_2/random_uniform/max"
  input: "dense_7_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_2/random_uniform/mul"
  op: "Mul"
  input: "dense_7_2/random_uniform/RandomUniform"
  input: "dense_7_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_2/random_uniform"
  op: "Add"
  input: "dense_7_2/random_uniform/mul"
  input: "dense_7_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_7_2/kernel"
    }
  }
}
node {
  name: "dense_7_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_7_2/kernel"
}
node {
  name: "dense_7_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_7_2/kernel"
  input: "dense_7_2/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_7_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_7_2/bias"
    }
  }
}
node {
  name: "dense_7_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_7_2/bias"
}
node {
  name: "dense_7_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_7_2/bias"
  input: "dense_7_2/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_2/MatMul"
  op: "MatMul"
  input: "dense_7_input_2"
  input: "dense_7_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_7_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_7_2/MatMul"
  input: "dense_7_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_7_2/Relu"
  op: "Relu"
  input: "dense_7_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3_1/Identity"
  op: "Identity"
  input: "dense_7_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "dense_8_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_8_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_8_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_8_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2861501
    }
  }
}
node {
  name: "dense_8_2/random_uniform/sub"
  op: "Sub"
  input: "dense_8_2/random_uniform/max"
  input: "dense_8_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/random_uniform/mul"
  op: "Mul"
  input: "dense_8_2/random_uniform/RandomUniform"
  input: "dense_8_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/random_uniform"
  op: "Add"
  input: "dense_8_2/random_uniform/mul"
  input: "dense_8_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_8_2/kernel"
    }
  }
}
node {
  name: "dense_8_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_8_2/kernel"
}
node {
  name: "dense_8_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_8_2/kernel"
  input: "dense_8_2/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer/Abs/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer/Abs"
  op: "Abs"
  input: "dense_8_2/weight_regularizer/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer/Sum"
  op: "Sum"
  input: "dense_8_2/weight_regularizer/Abs"
  input: "dense_8_2/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer/mul"
  op: "Mul"
  input: "dense_8_2/weight_regularizer/mul/x"
  input: "dense_8_2/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer/add"
  op: "AddV2"
  input: "dense_8_2/weight_regularizer/add/x"
  input: "dense_8_2/weight_regularizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_8_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_8_2/bias"
    }
  }
}
node {
  name: "dense_8_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_8_2/bias"
}
node {
  name: "dense_8_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_8_2/bias"
  input: "dense_8_2/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer_1/Abs/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer_1/Abs"
  op: "Abs"
  input: "dense_8_2/weight_regularizer_1/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer_1/Sum"
  op: "Sum"
  input: "dense_8_2/weight_regularizer_1/Abs"
  input: "dense_8_2/weight_regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer_1/mul"
  op: "Mul"
  input: "dense_8_2/weight_regularizer_1/mul/x"
  input: "dense_8_2/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer_1/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_8_2/weight_regularizer_1/add"
  op: "AddV2"
  input: "dense_8_2/weight_regularizer_1/add/x"
  input: "dense_8_2/weight_regularizer_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/MatMul"
  op: "MatMul"
  input: "dropout_3_1/Identity"
  input: "dense_8_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_8_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_8_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_8_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_8_2/MatMul"
  input: "dense_8_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_8_2/Relu"
  op: "Relu"
  input: "dense_8_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4_1/Identity"
  op: "Identity"
  input: "dense_8_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_9_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_9_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_9_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_9_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4372981
    }
  }
}
node {
  name: "dense_9_2/random_uniform/sub"
  op: "Sub"
  input: "dense_9_2/random_uniform/max"
  input: "dense_9_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_2/random_uniform/mul"
  op: "Mul"
  input: "dense_9_2/random_uniform/RandomUniform"
  input: "dense_9_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_2/random_uniform"
  op: "Add"
  input: "dense_9_2/random_uniform/mul"
  input: "dense_9_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_9_2/kernel"
    }
  }
}
node {
  name: "dense_9_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_9_2/kernel"
}
node {
  name: "dense_9_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_9_2/kernel"
  input: "dense_9_2/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_9_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_9_2/bias"
    }
  }
}
node {
  name: "dense_9_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_9_2/bias"
}
node {
  name: "dense_9_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_9_2/bias"
  input: "dense_9_2/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_2/MatMul"
  op: "MatMul"
  input: "dropout_4_1/Identity"
  input: "dense_9_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_9_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_9_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_9_2/MatMul"
  input: "dense_9_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_9_2/Sigmoid"
  op: "Sigmoid"
  input: "dense_9_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_125"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "dense_7_2/kernel"
  input: "Placeholder_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_125"
  op: "ReadVariableOp"
  input: "dense_7_2/kernel"
  input: "^AssignVariableOp_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_126"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "dense_7_2/bias"
  input: "Placeholder_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_126"
  op: "ReadVariableOp"
  input: "dense_7_2/bias"
  input: "^AssignVariableOp_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_127"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "dense_8_2/kernel"
  input: "Placeholder_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_127"
  op: "ReadVariableOp"
  input: "dense_8_2/kernel"
  input: "^AssignVariableOp_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_128"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "dense_8_2/bias"
  input: "Placeholder_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_128"
  op: "ReadVariableOp"
  input: "dense_8_2/bias"
  input: "^AssignVariableOp_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_129"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "dense_9_2/kernel"
  input: "Placeholder_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_129"
  op: "ReadVariableOp"
  input: "dense_9_2/kernel"
  input: "^AssignVariableOp_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_130"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "dense_9_2/bias"
  input: "Placeholder_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_130"
  op: "ReadVariableOp"
  input: "dense_9_2/bias"
  input: "^AssignVariableOp_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "dense_7_2/bias"
}
node {
  name: "VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "dense_8_2/kernel"
}
node {
  name: "VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "dense_8_2/bias"
}
node {
  name: "VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "dense_9_2/kernel"
}
node {
  name: "VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "dense_9_2/bias"
}
node {
  name: "VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "dense_7_2/kernel"
}
node {
  name: "init_5"
  op: "NoOp"
  input: "^dense_7_2/bias/Assign"
  input: "^dense_7_2/kernel/Assign"
  input: "^dense_8_2/bias/Assign"
  input: "^dense_8_2/kernel/Assign"
  input: "^dense_9_2/bias/Assign"
  input: "^dense_9_2/kernel/Assign"
}
node {
  name: "Adam_5/iterations/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_5/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam_5/iterations"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_5/iterations"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_5/iterations"
    }
  }
}
node {
  name: "Adam_5/iterations/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_5/iterations"
}
node {
  name: "Adam_5/iterations/Assign"
  op: "AssignVariableOp"
  input: "Adam_5/iterations"
  input: "Adam_5/iterations/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam_5/iterations/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_5/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam_5/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_5/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Adam_5/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_5/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_5/learning_rate"
    }
  }
}
node {
  name: "Adam_5/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_5/learning_rate"
}
node {
  name: "Adam_5/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "Adam_5/learning_rate"
  input: "Adam_5/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_5/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_5/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_5/beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_5/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_5/beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_5/beta_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_5/beta_1"
    }
  }
}
node {
  name: "Adam_5/beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_5/beta_1"
}
node {
  name: "Adam_5/beta_1/Assign"
  op: "AssignVariableOp"
  input: "Adam_5/beta_1"
  input: "Adam_5/beta_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_5/beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_5/beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_5/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam_5/beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_5/beta_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_5/beta_2"
    }
  }
}
node {
  name: "Adam_5/beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_5/beta_2"
}
node {
  name: "Adam_5/beta_2/Assign"
  op: "AssignVariableOp"
  input: "Adam_5/beta_2"
  input: "Adam_5/beta_2/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_5/beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_5/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_5/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam_5/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_5/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam_5/decay"
    }
  }
}
node {
  name: "Adam_5/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam_5/decay"
}
node {
  name: "Adam_5/decay/Assign"
  op: "AssignVariableOp"
  input: "Adam_5/decay"
  input: "Adam_5/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_5/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_5/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_9_target_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "dense_9_sample_weights_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Const_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_10"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_10"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_10"
    }
  }
}
node {
  name: "total_10/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_10"
}
node {
  name: "total_10/Assign"
  op: "AssignVariableOp"
  input: "total_10"
  input: "Const_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_10/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_10"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_10"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_10"
    }
  }
}
node {
  name: "count_10/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_10"
}
node {
  name: "count_10/Assign"
  op: "AssignVariableOp"
  input: "count_10"
  input: "Const_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_10/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_11"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_11"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_11"
    }
  }
}
node {
  name: "total_11/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_11"
}
node {
  name: "total_11/Assign"
  op: "AssignVariableOp"
  input: "total_11"
  input: "Const_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_11/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_11"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_11"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_11"
    }
  }
}
node {
  name: "count_11/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_11"
}
node {
  name: "count_11/Assign"
  op: "AssignVariableOp"
  input: "count_11"
  input: "Const_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_11/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/accuracy/Round"
  op: "Round"
  input: "dense_9_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/accuracy/Equal"
  op: "Equal"
  input: "dense_9_target_2"
  input: "metrics_5/accuracy/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics_5/accuracy/Cast"
  op: "Cast"
  input: "metrics_5/accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_5/accuracy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_5/accuracy/Mean"
  op: "Mean"
  input: "metrics_5/accuracy/Cast"
  input: "metrics_5/accuracy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_5/accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_5/accuracy/Sum"
  op: "Sum"
  input: "metrics_5/accuracy/Mean"
  input: "metrics_5/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_5/accuracy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_10"
  input: "metrics_5/accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/accuracy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_10"
  input: "^metrics_5/accuracy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/accuracy/Size"
  op: "Size"
  input: "metrics_5/accuracy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_5/accuracy/Cast_1"
  op: "Cast"
  input: "metrics_5/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_5/accuracy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_10"
  input: "metrics_5/accuracy/Cast_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/accuracy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_10"
  input: "^metrics_5/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/accuracy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_10"
  input: "^metrics_5/accuracy/AssignAddVariableOp"
  input: "^metrics_5/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/accuracy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_10"
  input: "^metrics_5/accuracy/AssignAddVariableOp"
  input: "^metrics_5/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/accuracy/truediv"
  op: "RealDiv"
  input: "metrics_5/accuracy/ReadVariableOp_2"
  input: "metrics_5/accuracy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/accuracy/Identity"
  op: "Identity"
  input: "metrics_5/accuracy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_9_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_9_2/BiasAdd"
  input: "metrics_5/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "metrics_5/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_9_2/BiasAdd"
  input: "metrics_5/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_9_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "metrics_5/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "metrics_5/binary_crossentropy/logistic_loss/Neg"
  input: "dense_9_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_9_2/BiasAdd"
  input: "dense_9_target_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "metrics_5/binary_crossentropy/logistic_loss/Select"
  input: "metrics_5/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "metrics_5/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "metrics_5/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "metrics_5/binary_crossentropy/logistic_loss/sub"
  input: "metrics_5/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/Mean"
  op: "Mean"
  input: "metrics_5/binary_crossentropy/logistic_loss"
  input: "metrics_5/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/Sum"
  op: "Sum"
  input: "metrics_5/binary_crossentropy/Mean"
  input: "metrics_5/binary_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_11"
  input: "metrics_5/binary_crossentropy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_11"
  input: "^metrics_5/binary_crossentropy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/Size"
  op: "Size"
  input: "metrics_5/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/Cast"
  op: "Cast"
  input: "metrics_5/binary_crossentropy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_11"
  input: "metrics_5/binary_crossentropy/Cast"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_11"
  input: "^metrics_5/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_11"
  input: "^metrics_5/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_5/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_11"
  input: "^metrics_5/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_5/binary_crossentropy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/truediv"
  op: "RealDiv"
  input: "metrics_5/binary_crossentropy/ReadVariableOp_2"
  input: "metrics_5/binary_crossentropy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_5/binary_crossentropy/Identity"
  op: "Identity"
  input: "metrics_5/binary_crossentropy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "dense_9_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dense_9_2/BiasAdd"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select"
  op: "Select"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "dense_9_2/BiasAdd"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
  op: "Neg"
  input: "dense_9_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
  op: "Select"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
  input: "dense_9_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
  op: "Mul"
  input: "dense_9_2/BiasAdd"
  input: "dense_9_target_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
  op: "Sub"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  op: "Exp"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
  op: "Log1p"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
  op: "Add"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/Mean"
  op: "Mean"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
  input: "loss_5/dense_9_loss/binary_crossentropy/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  op: "Mul"
  input: "dense_9_sample_weights_2"
  input: "loss_5/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
  op: "Sum"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  op: "Size"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
  op: "RealDiv"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_5/mul"
  op: "Mul"
  input: "loss_5/mul/x"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/add"
  op: "AddV2"
  input: "loss_5/mul"
  input: "dense_8_2/weight_regularizer/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_5/add_1"
  op: "AddV2"
  input: "loss_5/add"
  input: "dense_8_2/weight_regularizer_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Mean_5"
  op: "Mean"
  input: "loss_5/add_1"
  input: "Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/Fill"
  op: "Fill"
  input: "training_5/Adam/gradients/Shape"
  input: "training_5/Adam/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_5"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/Mean_5_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/Mean_5_grad/Reshape"
  op: "Reshape"
  input: "training_5/Adam/gradients/Fill"
  input: "training_5/Adam/gradients/Mean_5_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_5"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/Mean_5_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/Mean_5_grad/Tile"
  op: "Tile"
  input: "training_5/Adam/gradients/Mean_5_grad/Reshape"
  input: "training_5/Adam/gradients/Mean_5_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_5"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/Mean_5_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/Mean_5_grad/truediv"
  op: "RealDiv"
  input: "training_5/Adam/gradients/Mean_5_grad/Tile"
  input: "training_5/Adam/gradients/Mean_5_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_5"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/mul_grad/Mul"
  op: "Mul"
  input: "training_5/Adam/gradients/Mean_5_grad/truediv"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/mul_grad/Mul_1"
  op: "Mul"
  input: "training_5/Adam/gradients/Mean_5_grad/truediv"
  input: "loss_5/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/mul_grad/Mul"
  op: "Mul"
  input: "training_5/Adam/gradients/Mean_5_grad/truediv"
  input: "dense_8_2/weight_regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/mul_grad/Mul_1"
  op: "Mul"
  input: "training_5/Adam/gradients/Mean_5_grad/truediv"
  input: "dense_8_2/weight_regularizer_1/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer_1/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training_5/Adam/gradients/loss_5/mul_grad/Mul_1"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  op: "Neg"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Neg"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  op: "Mul"
  input: "training_5/Adam/gradients/loss_5/mul_grad/Mul_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/mul"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Sum_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training_5/Adam/gradients/Mean_5_grad/truediv"
  input: "dense_8_2/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training_5/Adam/gradients/Mean_5_grad/truediv"
  input: "dense_8_2/weight_regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/mul_grad/Mul_1"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer_1/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Sum_grad/Tile"
  op: "Tile"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Sum_grad/Reshape"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer_1/Sum"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/truediv_grad/Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer/mul_grad/Mul_1"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Sum_grad/Reshape"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer/Sum"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Abs_grad/Sign"
  op: "Sign"
  input: "dense_8_2/weight_regularizer_1/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer_1/Abs"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Abs_grad/mul"
  op: "Mul"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Sum_grad/Tile"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer_1/Abs"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_9_sample_weights_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss_5/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  input: "loss_5/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_9_sample_weights_2"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Mul_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Sum_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Abs_grad/Sign"
  op: "Sign"
  input: "dense_8_2/weight_regularizer/Abs/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer/Abs"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Abs_grad/mul"
  op: "Mul"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Sum_grad/Tile"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer/Abs"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Shape"
  op: "Shape"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/add"
  op: "AddV2"
  input: "loss_5/dense_9_loss/binary_crossentropy/Mean/reduction_indices"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/mod"
  op: "FloorMod"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/add"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/range"
  op: "Range"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/range/start"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Size"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Fill"
  op: "Fill"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Shape_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/range"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/mod"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Maximum"
  op: "Maximum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Shape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Reshape"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/weighted_loss/mul_grad/Reshape_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Tile"
  op: "Tile"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss_5/dense_9_loss/binary_crossentropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Prod"
  op: "Prod"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Shape_2"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Prod_1"
  op: "Prod"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Shape_3"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Prod_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Prod"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Cast"
  op: "Cast"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/truediv"
  op: "RealDiv"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Tile"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/Mean"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape"
  op: "Shape"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum"
  op: "Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/Mean_grad/truediv"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Sum_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Neg"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Sum_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  op: "AddV2"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add/x"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss_grad/Reshape_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dense_9_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/zeros_like"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_9_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "dense_9_target_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  input: "dense_9_target_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "dense_9_2/BiasAdd"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Mul_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Sum_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Log1p_grad/mul"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Exp"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "loss_5/dense_9_loss/binary_crossentropy/logistic_loss/GreaterEqual"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/zeros_like"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Neg"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/AddN"
  op: "AddN"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_grad/Select"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/mul_grad/Reshape"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select_1_grad/Select_1"
  input: "training_5/Adam/gradients/loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_5/dense_9_loss/binary_crossentropy/logistic_loss/Select"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_9_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_5/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_2/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_9_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_5/Adam/gradients/AddN"
  input: "dense_9_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_2/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_9_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_4_1/Identity"
  input: "training_5/Adam/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_9_2/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_5/Adam/gradients/dense_9_2/MatMul_grad/MatMul"
  input: "dense_8_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/Relu"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_5/Adam/gradients/dense_8_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_5/Adam/gradients/dense_8_2/Relu_grad/ReluGrad"
  input: "dense_8_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_8_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_3_1/Identity"
  input: "training_5/Adam/gradients/dense_8_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/gradients/AddN_1"
  op: "AddN"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer_1/Abs_grad/mul"
  input: "training_5/Adam/gradients/dense_8_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer_1/Abs"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_7_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_5/Adam/gradients/dense_8_2/MatMul_grad/MatMul"
  input: "dense_7_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_2/Relu"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/AddN_2"
  op: "AddN"
  input: "training_5/Adam/gradients/dense_8_2/weight_regularizer/Abs_grad/mul"
  input: "training_5/Adam/gradients/dense_8_2/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_8_2/weight_regularizer/Abs"
      }
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_7_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_5/Adam/gradients/dense_7_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_2/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_7_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_5/Adam/gradients/dense_7_2/Relu_grad/ReluGrad"
  input: "dense_7_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_2/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_5/Adam/gradients/dense_7_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_7_input_2"
  input: "training_5/Adam/gradients/dense_7_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7_2/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "Adam_5/iterations"
  input: "training_5/Adam/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_5/iterations"
  input: "^training_5/Adam/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_5/Adam/Cast/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_5/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_5/Adam/Cast"
  op: "Cast"
  input: "training_5/Adam/Cast/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training_5/Adam/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/add"
  op: "AddV2"
  input: "training_5/Adam/Cast"
  input: "training_5/Adam/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Pow/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Pow"
  op: "Pow"
  input: "training_5/Adam/Pow/ReadVariableOp"
  input: "training_5/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub"
  op: "Sub"
  input: "training_5/Adam/sub/x"
  input: "training_5/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value/Minimum"
  op: "Minimum"
  input: "training_5/Adam/sub"
  input: "training_5/Adam/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value"
  op: "Maximum"
  input: "training_5/Adam/clip_by_value/Minimum"
  input: "training_5/Adam/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Sqrt"
  op: "Sqrt"
  input: "training_5/Adam/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Pow_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Pow_1"
  op: "Pow"
  input: "training_5/Adam/Pow_1/ReadVariableOp"
  input: "training_5/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_1"
  op: "Sub"
  input: "training_5/Adam/sub_1/x"
  input: "training_5/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/truediv"
  op: "RealDiv"
  input: "training_5/Adam/Sqrt"
  input: "training_5/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam_5/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_1"
  input: "training_5/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/m_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/m_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/m_0_1"
    }
  }
}
node {
  name: "training_5/Adam/m_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_0_1"
}
node {
  name: "training_5/Adam/m_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_0_1"
  input: "training_5/Adam/m_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/m_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/m_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/m_1_1"
    }
  }
}
node {
  name: "training_5/Adam/m_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_1_1"
}
node {
  name: "training_5/Adam/m_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_1_1"
  input: "training_5/Adam/m_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/m_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/m_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/m_2_1"
    }
  }
}
node {
  name: "training_5/Adam/m_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_2_1"
}
node {
  name: "training_5/Adam/m_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_2_1"
  input: "training_5/Adam/m_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/m_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/m_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/m_3_1"
    }
  }
}
node {
  name: "training_5/Adam/m_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_3_1"
}
node {
  name: "training_5/Adam/m_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_3_1"
  input: "training_5/Adam/m_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/m_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/m_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/m_4_1"
    }
  }
}
node {
  name: "training_5/Adam/m_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_4_1"
}
node {
  name: "training_5/Adam/m_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_4_1"
  input: "training_5/Adam/m_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/m_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/m_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/m_5_1"
    }
  }
}
node {
  name: "training_5/Adam/m_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_5_1"
}
node {
  name: "training_5/Adam/m_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_5_1"
  input: "training_5/Adam/m_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/m_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/v_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/v_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/v_0_1"
    }
  }
}
node {
  name: "training_5/Adam/v_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_0_1"
}
node {
  name: "training_5/Adam/v_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_0_1"
  input: "training_5/Adam/v_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/v_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/v_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/v_1_1"
    }
  }
}
node {
  name: "training_5/Adam/v_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_1_1"
}
node {
  name: "training_5/Adam/v_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_1_1"
  input: "training_5/Adam/v_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/v_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/v_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/v_2_1"
    }
  }
}
node {
  name: "training_5/Adam/v_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_2_1"
}
node {
  name: "training_5/Adam/v_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_2_1"
  input: "training_5/Adam/v_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/v_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/v_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/v_3_1"
    }
  }
}
node {
  name: "training_5/Adam/v_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_3_1"
}
node {
  name: "training_5/Adam/v_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_3_1"
  input: "training_5/Adam/v_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/v_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/v_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/v_4_1"
    }
  }
}
node {
  name: "training_5/Adam/v_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_4_1"
}
node {
  name: "training_5/Adam/v_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_4_1"
  input: "training_5/Adam/v_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/v_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/v_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/v_5_1"
    }
  }
}
node {
  name: "training_5/Adam/v_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_5_1"
}
node {
  name: "training_5/Adam/v_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_5_1"
  input: "training_5/Adam/v_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/v_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_0/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_0"
  op: "Fill"
  input: "training_5/Adam/vhat_0/shape_as_tensor"
  input: "training_5/Adam/vhat_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/vhat_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/vhat_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/vhat_0_1"
    }
  }
}
node {
  name: "training_5/Adam/vhat_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_0_1"
}
node {
  name: "training_5/Adam/vhat_0_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_0_1"
  input: "training_5/Adam/vhat_0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_1"
  op: "Fill"
  input: "training_5/Adam/vhat_1/shape_as_tensor"
  input: "training_5/Adam/vhat_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/vhat_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/vhat_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/vhat_1_1"
    }
  }
}
node {
  name: "training_5/Adam/vhat_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_1_1"
}
node {
  name: "training_5/Adam/vhat_1_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_1_1"
  input: "training_5/Adam/vhat_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_2"
  op: "Fill"
  input: "training_5/Adam/vhat_2/shape_as_tensor"
  input: "training_5/Adam/vhat_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/vhat_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/vhat_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/vhat_2_1"
    }
  }
}
node {
  name: "training_5/Adam/vhat_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_2_1"
}
node {
  name: "training_5/Adam/vhat_2_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_2_1"
  input: "training_5/Adam/vhat_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_3/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_3"
  op: "Fill"
  input: "training_5/Adam/vhat_3/shape_as_tensor"
  input: "training_5/Adam/vhat_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/vhat_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/vhat_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/vhat_3_1"
    }
  }
}
node {
  name: "training_5/Adam/vhat_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_3_1"
}
node {
  name: "training_5/Adam/vhat_3_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_3_1"
  input: "training_5/Adam/vhat_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_4"
  op: "Fill"
  input: "training_5/Adam/vhat_4/shape_as_tensor"
  input: "training_5/Adam/vhat_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/vhat_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/vhat_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/vhat_4_1"
    }
  }
}
node {
  name: "training_5/Adam/vhat_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_4_1"
}
node {
  name: "training_5/Adam/vhat_4_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_4_1"
  input: "training_5/Adam/vhat_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_5/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/vhat_5"
  op: "Fill"
  input: "training_5/Adam/vhat_5/shape_as_tensor"
  input: "training_5/Adam/vhat_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_5/Adam/vhat_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_5/Adam/vhat_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training_5/Adam/vhat_5_1"
    }
  }
}
node {
  name: "training_5/Adam/vhat_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_5_1"
}
node {
  name: "training_5/Adam/vhat_5_1/Assign"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_5_1"
  input: "training_5/Adam/vhat_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/vhat_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_1"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_2"
  input: "training_5/Adam/mul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_2"
  op: "Sub"
  input: "training_5/Adam/sub_2/x"
  input: "training_5/Adam/ReadVariableOp_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_2"
  op: "Mul"
  input: "training_5/Adam/sub_2"
  input: "training_5/Adam/gradients/dense_7_2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_1"
  op: "AddV2"
  input: "training_5/Adam/mul_1"
  input: "training_5/Adam/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_3"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_4"
  input: "training_5/Adam/mul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_3"
  op: "Sub"
  input: "training_5/Adam/sub_3/x"
  input: "training_5/Adam/ReadVariableOp_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Square"
  op: "Square"
  input: "training_5/Adam/gradients/dense_7_2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_4"
  op: "Mul"
  input: "training_5/Adam/sub_3"
  input: "training_5/Adam/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_2"
  op: "AddV2"
  input: "training_5/Adam/mul_3"
  input: "training_5/Adam/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_5"
  op: "Mul"
  input: "training_5/Adam/mul"
  input: "training_5/Adam/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training_5/Adam/add_2"
  input: "training_5/Adam/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_1"
  op: "Maximum"
  input: "training_5/Adam/clip_by_value_1/Minimum"
  input: "training_5/Adam/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Sqrt_1"
  op: "Sqrt"
  input: "training_5/Adam/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_5/Adam/add_3"
  op: "AddV2"
  input: "training_5/Adam/Sqrt_1"
  input: "training_5/Adam/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/truediv_1"
  op: "RealDiv"
  input: "training_5/Adam/mul_5"
  input: "training_5/Adam/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "dense_7_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_4"
  op: "Sub"
  input: "training_5/Adam/ReadVariableOp_6"
  input: "training_5/Adam/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_0_1"
  input: "training_5/Adam/add_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_0_1"
  input: "^training_5/Adam/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_0_1"
  input: "training_5/Adam/add_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_0_1"
  input: "^training_5/Adam/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "dense_7_2/kernel"
  input: "training_5/Adam/sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "dense_7_2/kernel"
  input: "^training_5/Adam/AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_6"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_10"
  input: "training_5/Adam/mul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_5"
  op: "Sub"
  input: "training_5/Adam/sub_5/x"
  input: "training_5/Adam/ReadVariableOp_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_7"
  op: "Mul"
  input: "training_5/Adam/sub_5"
  input: "training_5/Adam/gradients/dense_7_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_4"
  op: "AddV2"
  input: "training_5/Adam/mul_6"
  input: "training_5/Adam/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_8"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_12"
  input: "training_5/Adam/mul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_6"
  op: "Sub"
  input: "training_5/Adam/sub_6/x"
  input: "training_5/Adam/ReadVariableOp_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Square_1"
  op: "Square"
  input: "training_5/Adam/gradients/dense_7_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_9"
  op: "Mul"
  input: "training_5/Adam/sub_6"
  input: "training_5/Adam/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_5"
  op: "AddV2"
  input: "training_5/Adam/mul_8"
  input: "training_5/Adam/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_10"
  op: "Mul"
  input: "training_5/Adam/mul"
  input: "training_5/Adam/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training_5/Adam/add_5"
  input: "training_5/Adam/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_2"
  op: "Maximum"
  input: "training_5/Adam/clip_by_value_2/Minimum"
  input: "training_5/Adam/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Sqrt_2"
  op: "Sqrt"
  input: "training_5/Adam/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_5/Adam/add_6"
  op: "AddV2"
  input: "training_5/Adam/Sqrt_2"
  input: "training_5/Adam/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/truediv_2"
  op: "RealDiv"
  input: "training_5/Adam/mul_10"
  input: "training_5/Adam/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "dense_7_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_7"
  op: "Sub"
  input: "training_5/Adam/ReadVariableOp_14"
  input: "training_5/Adam/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_1_1"
  input: "training_5/Adam/add_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_1_1"
  input: "^training_5/Adam/AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_1_1"
  input: "training_5/Adam/add_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_1_1"
  input: "^training_5/Adam/AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "dense_7_2/bias"
  input: "training_5/Adam/sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "dense_7_2/bias"
  input: "^training_5/Adam/AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_11"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_18"
  input: "training_5/Adam/mul_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_8"
  op: "Sub"
  input: "training_5/Adam/sub_8/x"
  input: "training_5/Adam/ReadVariableOp_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_12"
  op: "Mul"
  input: "training_5/Adam/sub_8"
  input: "training_5/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_7"
  op: "AddV2"
  input: "training_5/Adam/mul_11"
  input: "training_5/Adam/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_13"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_20"
  input: "training_5/Adam/mul_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_9"
  op: "Sub"
  input: "training_5/Adam/sub_9/x"
  input: "training_5/Adam/ReadVariableOp_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Square_2"
  op: "Square"
  input: "training_5/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_14"
  op: "Mul"
  input: "training_5/Adam/sub_9"
  input: "training_5/Adam/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_8"
  op: "AddV2"
  input: "training_5/Adam/mul_13"
  input: "training_5/Adam/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_15"
  op: "Mul"
  input: "training_5/Adam/mul"
  input: "training_5/Adam/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training_5/Adam/add_8"
  input: "training_5/Adam/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_3"
  op: "Maximum"
  input: "training_5/Adam/clip_by_value_3/Minimum"
  input: "training_5/Adam/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Sqrt_3"
  op: "Sqrt"
  input: "training_5/Adam/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_5/Adam/add_9"
  op: "AddV2"
  input: "training_5/Adam/Sqrt_3"
  input: "training_5/Adam/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/truediv_3"
  op: "RealDiv"
  input: "training_5/Adam/mul_15"
  input: "training_5/Adam/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "dense_8_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_10"
  op: "Sub"
  input: "training_5/Adam/ReadVariableOp_22"
  input: "training_5/Adam/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_2_1"
  input: "training_5/Adam/add_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_2_1"
  input: "^training_5/Adam/AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_2_1"
  input: "training_5/Adam/add_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_2_1"
  input: "^training_5/Adam/AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dense_8_2/kernel"
  input: "training_5/Adam/sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "dense_8_2/kernel"
  input: "^training_5/Adam/AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_16"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_26"
  input: "training_5/Adam/mul_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_11"
  op: "Sub"
  input: "training_5/Adam/sub_11/x"
  input: "training_5/Adam/ReadVariableOp_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_17"
  op: "Mul"
  input: "training_5/Adam/sub_11"
  input: "training_5/Adam/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_10"
  op: "AddV2"
  input: "training_5/Adam/mul_16"
  input: "training_5/Adam/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_18"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_28"
  input: "training_5/Adam/mul_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_12"
  op: "Sub"
  input: "training_5/Adam/sub_12/x"
  input: "training_5/Adam/ReadVariableOp_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Square_3"
  op: "Square"
  input: "training_5/Adam/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_19"
  op: "Mul"
  input: "training_5/Adam/sub_12"
  input: "training_5/Adam/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_11"
  op: "AddV2"
  input: "training_5/Adam/mul_18"
  input: "training_5/Adam/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_20"
  op: "Mul"
  input: "training_5/Adam/mul"
  input: "training_5/Adam/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training_5/Adam/add_11"
  input: "training_5/Adam/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_4"
  op: "Maximum"
  input: "training_5/Adam/clip_by_value_4/Minimum"
  input: "training_5/Adam/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Sqrt_4"
  op: "Sqrt"
  input: "training_5/Adam/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_5/Adam/add_12"
  op: "AddV2"
  input: "training_5/Adam/Sqrt_4"
  input: "training_5/Adam/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/truediv_4"
  op: "RealDiv"
  input: "training_5/Adam/mul_20"
  input: "training_5/Adam/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "dense_8_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_13"
  op: "Sub"
  input: "training_5/Adam/ReadVariableOp_30"
  input: "training_5/Adam/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_3_1"
  input: "training_5/Adam/add_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_3_1"
  input: "^training_5/Adam/AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_3_1"
  input: "training_5/Adam/add_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_3_1"
  input: "^training_5/Adam/AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dense_8_2/bias"
  input: "training_5/Adam/sub_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "dense_8_2/bias"
  input: "^training_5/Adam/AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_21"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_34"
  input: "training_5/Adam/mul_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_14"
  op: "Sub"
  input: "training_5/Adam/sub_14/x"
  input: "training_5/Adam/ReadVariableOp_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_22"
  op: "Mul"
  input: "training_5/Adam/sub_14"
  input: "training_5/Adam/gradients/dense_9_2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_13"
  op: "AddV2"
  input: "training_5/Adam/mul_21"
  input: "training_5/Adam/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_23"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_36"
  input: "training_5/Adam/mul_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_15"
  op: "Sub"
  input: "training_5/Adam/sub_15/x"
  input: "training_5/Adam/ReadVariableOp_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Square_4"
  op: "Square"
  input: "training_5/Adam/gradients/dense_9_2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_24"
  op: "Mul"
  input: "training_5/Adam/sub_15"
  input: "training_5/Adam/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_14"
  op: "AddV2"
  input: "training_5/Adam/mul_23"
  input: "training_5/Adam/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_25"
  op: "Mul"
  input: "training_5/Adam/mul"
  input: "training_5/Adam/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training_5/Adam/add_14"
  input: "training_5/Adam/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_5"
  op: "Maximum"
  input: "training_5/Adam/clip_by_value_5/Minimum"
  input: "training_5/Adam/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Sqrt_5"
  op: "Sqrt"
  input: "training_5/Adam/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_5/Adam/add_15"
  op: "AddV2"
  input: "training_5/Adam/Sqrt_5"
  input: "training_5/Adam/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/truediv_5"
  op: "RealDiv"
  input: "training_5/Adam/mul_25"
  input: "training_5/Adam/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "dense_9_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_16"
  op: "Sub"
  input: "training_5/Adam/ReadVariableOp_38"
  input: "training_5/Adam/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_4_1"
  input: "training_5/Adam/add_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_4_1"
  input: "^training_5/Adam/AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_4_1"
  input: "training_5/Adam/add_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_4_1"
  input: "^training_5/Adam/AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "dense_9_2/kernel"
  input: "training_5/Adam/sub_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "dense_9_2/kernel"
  input: "^training_5/Adam/AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_26"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_42"
  input: "training_5/Adam/mul_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "Adam_5/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_17"
  op: "Sub"
  input: "training_5/Adam/sub_17/x"
  input: "training_5/Adam/ReadVariableOp_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_27"
  op: "Mul"
  input: "training_5/Adam/sub_17"
  input: "training_5/Adam/gradients/dense_9_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_16"
  op: "AddV2"
  input: "training_5/Adam/mul_26"
  input: "training_5/Adam/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_28"
  op: "Mul"
  input: "training_5/Adam/ReadVariableOp_44"
  input: "training_5/Adam/mul_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "Adam_5/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_5/Adam/sub_18"
  op: "Sub"
  input: "training_5/Adam/sub_18/x"
  input: "training_5/Adam/ReadVariableOp_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Square_5"
  op: "Square"
  input: "training_5/Adam/gradients/dense_9_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_29"
  op: "Mul"
  input: "training_5/Adam/sub_18"
  input: "training_5/Adam/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_17"
  op: "AddV2"
  input: "training_5/Adam/mul_28"
  input: "training_5/Adam/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/mul_30"
  op: "Mul"
  input: "training_5/Adam/mul"
  input: "training_5/Adam/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_5/Adam/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training_5/Adam/add_17"
  input: "training_5/Adam/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/clip_by_value_6"
  op: "Maximum"
  input: "training_5/Adam/clip_by_value_6/Minimum"
  input: "training_5/Adam/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/Sqrt_6"
  op: "Sqrt"
  input: "training_5/Adam/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_5/Adam/add_18"
  op: "AddV2"
  input: "training_5/Adam/Sqrt_6"
  input: "training_5/Adam/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/truediv_6"
  op: "RealDiv"
  input: "training_5/Adam/mul_30"
  input: "training_5/Adam/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "dense_9_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/sub_19"
  op: "Sub"
  input: "training_5/Adam/ReadVariableOp_46"
  input: "training_5/Adam/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_5_1"
  input: "training_5/Adam/add_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_5_1"
  input: "^training_5/Adam/AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_5_1"
  input: "training_5/Adam/add_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_5_1"
  input: "^training_5/Adam/AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "dense_9_2/bias"
  input: "training_5/Adam/sub_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/Adam/ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "dense_9_2/bias"
  input: "^training_5/Adam/AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_5/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_2_1"
}
node {
  name: "training_5/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "total_11"
}
node {
  name: "training_5/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_3_1"
}
node {
  name: "training_5/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_5_1"
}
node {
  name: "training_5/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "Adam_5/decay"
}
node {
  name: "training_5/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_0_1"
}
node {
  name: "training_5/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_2_1"
}
node {
  name: "training_5/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_1_1"
}
node {
  name: "training_5/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_5_1"
}
node {
  name: "training_5/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_0_1"
}
node {
  name: "training_5/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "Adam_5/learning_rate"
}
node {
  name: "training_5/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "total_10"
}
node {
  name: "training_5/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "Adam_5/iterations"
}
node {
  name: "training_5/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_4_1"
}
node {
  name: "training_5/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "Adam_5/beta_2"
}
node {
  name: "training_5/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_1_1"
}
node {
  name: "training_5/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_5_1"
}
node {
  name: "training_5/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_1_1"
}
node {
  name: "training_5/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "count_11"
}
node {
  name: "training_5/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_4_1"
}
node {
  name: "training_5/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_4_1"
}
node {
  name: "training_5/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_3_1"
}
node {
  name: "training_5/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/vhat_3_1"
}
node {
  name: "training_5/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "Adam_5/beta_1"
}
node {
  name: "training_5/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/m_2_1"
}
node {
  name: "training_5/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "count_10"
}
node {
  name: "training_5/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "training_5/Adam/v_0_1"
}
node {
  name: "training_5/init"
  op: "NoOp"
  input: "^Adam_5/beta_1/Assign"
  input: "^Adam_5/beta_2/Assign"
  input: "^Adam_5/decay/Assign"
  input: "^Adam_5/iterations/Assign"
  input: "^Adam_5/learning_rate/Assign"
  input: "^count_10/Assign"
  input: "^count_11/Assign"
  input: "^total_10/Assign"
  input: "^total_11/Assign"
  input: "^training_5/Adam/m_0_1/Assign"
  input: "^training_5/Adam/m_1_1/Assign"
  input: "^training_5/Adam/m_2_1/Assign"
  input: "^training_5/Adam/m_3_1/Assign"
  input: "^training_5/Adam/m_4_1/Assign"
  input: "^training_5/Adam/m_5_1/Assign"
  input: "^training_5/Adam/v_0_1/Assign"
  input: "^training_5/Adam/v_1_1/Assign"
  input: "^training_5/Adam/v_2_1/Assign"
  input: "^training_5/Adam/v_3_1/Assign"
  input: "^training_5/Adam/v_4_1/Assign"
  input: "^training_5/Adam/v_5_1/Assign"
  input: "^training_5/Adam/vhat_0_1/Assign"
  input: "^training_5/Adam/vhat_1_1/Assign"
  input: "^training_5/Adam/vhat_2_1/Assign"
  input: "^training_5/Adam/vhat_3_1/Assign"
  input: "^training_5/Adam/vhat_4_1/Assign"
  input: "^training_5/Adam/vhat_5_1/Assign"
}
node {
  name: "training_5/group_deps"
  op: "NoOp"
  input: "^Mean_5"
  input: "^metrics_5/accuracy/AssignAddVariableOp"
  input: "^metrics_5/accuracy/AssignAddVariableOp_1"
  input: "^metrics_5/binary_crossentropy/AssignAddVariableOp"
  input: "^metrics_5/binary_crossentropy/AssignAddVariableOp_1"
  input: "^training_5/Adam/AssignAddVariableOp"
  input: "^training_5/Adam/AssignVariableOp"
  input: "^training_5/Adam/AssignVariableOp_1"
  input: "^training_5/Adam/AssignVariableOp_10"
  input: "^training_5/Adam/AssignVariableOp_11"
  input: "^training_5/Adam/AssignVariableOp_12"
  input: "^training_5/Adam/AssignVariableOp_13"
  input: "^training_5/Adam/AssignVariableOp_14"
  input: "^training_5/Adam/AssignVariableOp_15"
  input: "^training_5/Adam/AssignVariableOp_16"
  input: "^training_5/Adam/AssignVariableOp_17"
  input: "^training_5/Adam/AssignVariableOp_2"
  input: "^training_5/Adam/AssignVariableOp_3"
  input: "^training_5/Adam/AssignVariableOp_4"
  input: "^training_5/Adam/AssignVariableOp_5"
  input: "^training_5/Adam/AssignVariableOp_6"
  input: "^training_5/Adam/AssignVariableOp_7"
  input: "^training_5/Adam/AssignVariableOp_8"
  input: "^training_5/Adam/AssignVariableOp_9"
}
node {
  name: "Placeholder_131"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "Adam_5/iterations"
  input: "Placeholder_131"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_131"
  op: "ReadVariableOp"
  input: "Adam_5/iterations"
  input: "^AssignVariableOp_131"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Placeholder_132"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_0_1"
  input: "Placeholder_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_132"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_0_1"
  input: "^AssignVariableOp_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_133"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_1_1"
  input: "Placeholder_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_133"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_1_1"
  input: "^AssignVariableOp_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_134"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_2_1"
  input: "Placeholder_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_134"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_2_1"
  input: "^AssignVariableOp_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_135"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_3_1"
  input: "Placeholder_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_135"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_3_1"
  input: "^AssignVariableOp_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_136"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_4_1"
  input: "Placeholder_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_136"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_4_1"
  input: "^AssignVariableOp_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_137"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_5_1"
  input: "Placeholder_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_137"
  op: "ReadVariableOp"
  input: "training_5/Adam/m_5_1"
  input: "^AssignVariableOp_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_138"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_0_1"
  input: "Placeholder_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_138"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_0_1"
  input: "^AssignVariableOp_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_139"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_1_1"
  input: "Placeholder_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_139"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_1_1"
  input: "^AssignVariableOp_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_140"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_2_1"
  input: "Placeholder_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_140"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_2_1"
  input: "^AssignVariableOp_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_141"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_3_1"
  input: "Placeholder_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_141"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_3_1"
  input: "^AssignVariableOp_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_142"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_4_1"
  input: "Placeholder_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_142"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_4_1"
  input: "^AssignVariableOp_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_143"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_5_1"
  input: "Placeholder_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_143"
  op: "ReadVariableOp"
  input: "training_5/Adam/v_5_1"
  input: "^AssignVariableOp_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_144"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_0_1"
  input: "Placeholder_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_144"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_0_1"
  input: "^AssignVariableOp_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_145"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_1_1"
  input: "Placeholder_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_145"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_1_1"
  input: "^AssignVariableOp_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_146"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_2_1"
  input: "Placeholder_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_146"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_2_1"
  input: "^AssignVariableOp_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_147"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_3_1"
  input: "Placeholder_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_147"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_3_1"
  input: "^AssignVariableOp_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_148"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_4_1"
  input: "Placeholder_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_148"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_4_1"
  input: "^AssignVariableOp_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_149"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_5_1"
  input: "Placeholder_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_149"
  op: "ReadVariableOp"
  input: "training_5/Adam/vhat_5_1"
  input: "^AssignVariableOp_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 198
          }
        }
        string_val: "Adam/beta_1"
        string_val: "Adam/beta_2"
        string_val: "Adam/decay"
        string_val: "Adam/iterations"
        string_val: "Adam/learning_rate"
        string_val: "Adam_1/beta_1"
        string_val: "Adam_1/beta_2"
        string_val: "Adam_1/decay"
        string_val: "Adam_1/iterations"
        string_val: "Adam_1/learning_rate"
        string_val: "Adam_2/beta_1"
        string_val: "Adam_2/beta_2"
        string_val: "Adam_2/decay"
        string_val: "Adam_2/iterations"
        string_val: "Adam_2/learning_rate"
        string_val: "Adam_3/beta_1"
        string_val: "Adam_3/beta_2"
        string_val: "Adam_3/decay"
        string_val: "Adam_3/iterations"
        string_val: "Adam_3/learning_rate"
        string_val: "Adam_4/beta_1"
        string_val: "Adam_4/beta_2"
        string_val: "Adam_4/decay"
        string_val: "Adam_4/iterations"
        string_val: "Adam_4/learning_rate"
        string_val: "Adam_5/beta_1"
        string_val: "Adam_5/beta_2"
        string_val: "Adam_5/decay"
        string_val: "Adam_5/iterations"
        string_val: "Adam_5/learning_rate"
        string_val: "count"
        string_val: "count_1"
        string_val: "count_10"
        string_val: "count_11"
        string_val: "count_2"
        string_val: "count_3"
        string_val: "count_4"
        string_val: "count_5"
        string_val: "count_6"
        string_val: "count_7"
        string_val: "count_8"
        string_val: "count_9"
        string_val: "dense_1/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_10/bias"
        string_val: "dense_10/kernel"
        string_val: "dense_11/bias"
        string_val: "dense_11/kernel"
        string_val: "dense_12/bias"
        string_val: "dense_12/kernel"
        string_val: "dense_2/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_3/bias"
        string_val: "dense_3/kernel"
        string_val: "dense_4/bias"
        string_val: "dense_4/kernel"
        string_val: "dense_5/bias"
        string_val: "dense_5/kernel"
        string_val: "dense_6/bias"
        string_val: "dense_6/kernel"
        string_val: "dense_7/bias"
        string_val: "dense_7/kernel"
        string_val: "dense_7_1/bias"
        string_val: "dense_7_1/kernel"
        string_val: "dense_7_2/bias"
        string_val: "dense_7_2/kernel"
        string_val: "dense_8/bias"
        string_val: "dense_8/kernel"
        string_val: "dense_8_1/bias"
        string_val: "dense_8_1/kernel"
        string_val: "dense_8_2/bias"
        string_val: "dense_8_2/kernel"
        string_val: "dense_9/bias"
        string_val: "dense_9/kernel"
        string_val: "dense_9_1/bias"
        string_val: "dense_9_1/kernel"
        string_val: "dense_9_2/bias"
        string_val: "dense_9_2/kernel"
        string_val: "total"
        string_val: "total_1"
        string_val: "total_10"
        string_val: "total_11"
        string_val: "total_2"
        string_val: "total_3"
        string_val: "total_4"
        string_val: "total_5"
        string_val: "total_6"
        string_val: "total_7"
        string_val: "total_8"
        string_val: "total_9"
        string_val: "training/Adam/m_0_1"
        string_val: "training/Adam/m_1_1"
        string_val: "training/Adam/m_2_1"
        string_val: "training/Adam/m_3_1"
        string_val: "training/Adam/m_4_1"
        string_val: "training/Adam/m_5_1"
        string_val: "training/Adam/v_0_1"
        string_val: "training/Adam/v_1_1"
        string_val: "training/Adam/v_2_1"
        string_val: "training/Adam/v_3_1"
        string_val: "training/Adam/v_4_1"
        string_val: "training/Adam/v_5_1"
        string_val: "training/Adam/vhat_0_1"
        string_val: "training/Adam/vhat_1_1"
        string_val: "training/Adam/vhat_2_1"
        string_val: "training/Adam/vhat_3_1"
        string_val: "training/Adam/vhat_4_1"
        string_val: "training/Adam/vhat_5_1"
        string_val: "training_1/Adam/m_0_1"
        string_val: "training_1/Adam/m_1_1"
        string_val: "training_1/Adam/m_2_1"
        string_val: "training_1/Adam/m_3_1"
        string_val: "training_1/Adam/m_4_1"
        string_val: "training_1/Adam/m_5_1"
        string_val: "training_1/Adam/v_0_1"
        string_val: "training_1/Adam/v_1_1"
        string_val: "training_1/Adam/v_2_1"
        string_val: "training_1/Adam/v_3_1"
        string_val: "training_1/Adam/v_4_1"
        string_val: "training_1/Adam/v_5_1"
        string_val: "training_1/Adam/vhat_0_1"
        string_val: "training_1/Adam/vhat_1_1"
        string_val: "training_1/Adam/vhat_2_1"
        string_val: "training_1/Adam/vhat_3_1"
        string_val: "training_1/Adam/vhat_4_1"
        string_val: "training_1/Adam/vhat_5_1"
        string_val: "training_2/Adam/m_0_1"
        string_val: "training_2/Adam/m_1_1"
        string_val: "training_2/Adam/m_2_1"
        string_val: "training_2/Adam/m_3_1"
        string_val: "training_2/Adam/m_4_1"
        string_val: "training_2/Adam/m_5_1"
        string_val: "training_2/Adam/v_0_1"
        string_val: "training_2/Adam/v_1_1"
        string_val: "training_2/Adam/v_2_1"
        string_val: "training_2/Adam/v_3_1"
        string_val: "training_2/Adam/v_4_1"
        string_val: "training_2/Adam/v_5_1"
        string_val: "training_2/Adam/vhat_0_1"
        string_val: "training_2/Adam/vhat_1_1"
        string_val: "training_2/Adam/vhat_2_1"
        string_val: "training_2/Adam/vhat_3_1"
        string_val: "training_2/Adam/vhat_4_1"
        string_val: "training_2/Adam/vhat_5_1"
        string_val: "training_3/Adam/m_0_1"
        string_val: "training_3/Adam/m_1_1"
        string_val: "training_3/Adam/m_2_1"
        string_val: "training_3/Adam/m_3_1"
        string_val: "training_3/Adam/m_4_1"
        string_val: "training_3/Adam/m_5_1"
        string_val: "training_3/Adam/v_0_1"
        string_val: "training_3/Adam/v_1_1"
        string_val: "training_3/Adam/v_2_1"
        string_val: "training_3/Adam/v_3_1"
        string_val: "training_3/Adam/v_4_1"
        string_val: "training_3/Adam/v_5_1"
        string_val: "training_3/Adam/vhat_0_1"
        string_val: "training_3/Adam/vhat_1_1"
        string_val: "training_3/Adam/vhat_2_1"
        string_val: "training_3/Adam/vhat_3_1"
        string_val: "training_3/Adam/vhat_4_1"
        string_val: "training_3/Adam/vhat_5_1"
        string_val: "training_4/Adam/m_0_1"
        string_val: "training_4/Adam/m_1_1"
        string_val: "training_4/Adam/m_2_1"
        string_val: "training_4/Adam/m_3_1"
        string_val: "training_4/Adam/m_4_1"
        string_val: "training_4/Adam/m_5_1"
        string_val: "training_4/Adam/v_0_1"
        string_val: "training_4/Adam/v_1_1"
        string_val: "training_4/Adam/v_2_1"
        string_val: "training_4/Adam/v_3_1"
        string_val: "training_4/Adam/v_4_1"
        string_val: "training_4/Adam/v_5_1"
        string_val: "training_4/Adam/vhat_0_1"
        string_val: "training_4/Adam/vhat_1_1"
        string_val: "training_4/Adam/vhat_2_1"
        string_val: "training_4/Adam/vhat_3_1"
        string_val: "training_4/Adam/vhat_4_1"
        string_val: "training_4/Adam/vhat_5_1"
        string_val: "training_5/Adam/m_0_1"
        string_val: "training_5/Adam/m_1_1"
        string_val: "training_5/Adam/m_2_1"
        string_val: "training_5/Adam/m_3_1"
        string_val: "training_5/Adam/m_4_1"
        string_val: "training_5/Adam/m_5_1"
        string_val: "training_5/Adam/v_0_1"
        string_val: "training_5/Adam/v_1_1"
        string_val: "training_5/Adam/v_2_1"
        string_val: "training_5/Adam/v_3_1"
        string_val: "training_5/Adam/v_4_1"
        string_val: "training_5/Adam/v_5_1"
        string_val: "training_5/Adam/vhat_0_1"
        string_val: "training_5/Adam/vhat_1_1"
        string_val: "training_5/Adam/vhat_2_1"
        string_val: "training_5/Adam/vhat_3_1"
        string_val: "training_5/Adam/vhat_4_1"
        string_val: "training_5/Adam/vhat_5_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 198
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Adam/beta_1/Read/ReadVariableOp"
  input: "Adam/beta_2/Read/ReadVariableOp"
  input: "Adam/decay/Read/ReadVariableOp"
  input: "Adam/iterations/Read/ReadVariableOp"
  input: "Adam/learning_rate/Read/ReadVariableOp"
  input: "Adam_1/beta_1/Read/ReadVariableOp"
  input: "Adam_1/beta_2/Read/ReadVariableOp"
  input: "Adam_1/decay/Read/ReadVariableOp"
  input: "Adam_1/iterations/Read/ReadVariableOp"
  input: "Adam_1/learning_rate/Read/ReadVariableOp"
  input: "Adam_2/beta_1/Read/ReadVariableOp"
  input: "Adam_2/beta_2/Read/ReadVariableOp"
  input: "Adam_2/decay/Read/ReadVariableOp"
  input: "Adam_2/iterations/Read/ReadVariableOp"
  input: "Adam_2/learning_rate/Read/ReadVariableOp"
  input: "Adam_3/beta_1/Read/ReadVariableOp"
  input: "Adam_3/beta_2/Read/ReadVariableOp"
  input: "Adam_3/decay/Read/ReadVariableOp"
  input: "Adam_3/iterations/Read/ReadVariableOp"
  input: "Adam_3/learning_rate/Read/ReadVariableOp"
  input: "Adam_4/beta_1/Read/ReadVariableOp"
  input: "Adam_4/beta_2/Read/ReadVariableOp"
  input: "Adam_4/decay/Read/ReadVariableOp"
  input: "Adam_4/iterations/Read/ReadVariableOp"
  input: "Adam_4/learning_rate/Read/ReadVariableOp"
  input: "Adam_5/beta_1/Read/ReadVariableOp"
  input: "Adam_5/beta_2/Read/ReadVariableOp"
  input: "Adam_5/decay/Read/ReadVariableOp"
  input: "Adam_5/iterations/Read/ReadVariableOp"
  input: "Adam_5/learning_rate/Read/ReadVariableOp"
  input: "count/Read/ReadVariableOp"
  input: "count_1/Read/ReadVariableOp"
  input: "count_10/Read/ReadVariableOp"
  input: "count_11/Read/ReadVariableOp"
  input: "count_2/Read/ReadVariableOp"
  input: "count_3/Read/ReadVariableOp"
  input: "count_4/Read/ReadVariableOp"
  input: "count_5/Read/ReadVariableOp"
  input: "count_6/Read/ReadVariableOp"
  input: "count_7/Read/ReadVariableOp"
  input: "count_8/Read/ReadVariableOp"
  input: "count_9/Read/ReadVariableOp"
  input: "dense_1/bias/Read/ReadVariableOp"
  input: "dense_1/kernel/Read/ReadVariableOp"
  input: "dense_10/bias/Read/ReadVariableOp"
  input: "dense_10/kernel/Read/ReadVariableOp"
  input: "dense_11/bias/Read/ReadVariableOp"
  input: "dense_11/kernel/Read/ReadVariableOp"
  input: "dense_12/bias/Read/ReadVariableOp"
  input: "dense_12/kernel/Read/ReadVariableOp"
  input: "dense_2/bias/Read/ReadVariableOp"
  input: "dense_2/kernel/Read/ReadVariableOp"
  input: "dense_3/bias/Read/ReadVariableOp"
  input: "dense_3/kernel/Read/ReadVariableOp"
  input: "dense_4/bias/Read/ReadVariableOp"
  input: "dense_4/kernel/Read/ReadVariableOp"
  input: "dense_5/bias/Read/ReadVariableOp"
  input: "dense_5/kernel/Read/ReadVariableOp"
  input: "dense_6/bias/Read/ReadVariableOp"
  input: "dense_6/kernel/Read/ReadVariableOp"
  input: "dense_7/bias/Read/ReadVariableOp"
  input: "dense_7/kernel/Read/ReadVariableOp"
  input: "dense_7_1/bias/Read/ReadVariableOp"
  input: "dense_7_1/kernel/Read/ReadVariableOp"
  input: "dense_7_2/bias/Read/ReadVariableOp"
  input: "dense_7_2/kernel/Read/ReadVariableOp"
  input: "dense_8/bias/Read/ReadVariableOp"
  input: "dense_8/kernel/Read/ReadVariableOp"
  input: "dense_8_1/bias/Read/ReadVariableOp"
  input: "dense_8_1/kernel/Read/ReadVariableOp"
  input: "dense_8_2/bias/Read/ReadVariableOp"
  input: "dense_8_2/kernel/Read/ReadVariableOp"
  input: "dense_9/bias/Read/ReadVariableOp"
  input: "dense_9/kernel/Read/ReadVariableOp"
  input: "dense_9_1/bias/Read/ReadVariableOp"
  input: "dense_9_1/kernel/Read/ReadVariableOp"
  input: "dense_9_2/bias/Read/ReadVariableOp"
  input: "dense_9_2/kernel/Read/ReadVariableOp"
  input: "total/Read/ReadVariableOp"
  input: "total_1/Read/ReadVariableOp"
  input: "total_10/Read/ReadVariableOp"
  input: "total_11/Read/ReadVariableOp"
  input: "total_2/Read/ReadVariableOp"
  input: "total_3/Read/ReadVariableOp"
  input: "total_4/Read/ReadVariableOp"
  input: "total_5/Read/ReadVariableOp"
  input: "total_6/Read/ReadVariableOp"
  input: "total_7/Read/ReadVariableOp"
  input: "total_8/Read/ReadVariableOp"
  input: "total_9/Read/ReadVariableOp"
  input: "training/Adam/m_0_1/Read/ReadVariableOp"
  input: "training/Adam/m_1_1/Read/ReadVariableOp"
  input: "training/Adam/m_2_1/Read/ReadVariableOp"
  input: "training/Adam/m_3_1/Read/ReadVariableOp"
  input: "training/Adam/m_4_1/Read/ReadVariableOp"
  input: "training/Adam/m_5_1/Read/ReadVariableOp"
  input: "training/Adam/v_0_1/Read/ReadVariableOp"
  input: "training/Adam/v_1_1/Read/ReadVariableOp"
  input: "training/Adam/v_2_1/Read/ReadVariableOp"
  input: "training/Adam/v_3_1/Read/ReadVariableOp"
  input: "training/Adam/v_4_1/Read/ReadVariableOp"
  input: "training/Adam/v_5_1/Read/ReadVariableOp"
  input: "training/Adam/vhat_0_1/Read/ReadVariableOp"
  input: "training/Adam/vhat_1_1/Read/ReadVariableOp"
  input: "training/Adam/vhat_2_1/Read/ReadVariableOp"
  input: "training/Adam/vhat_3_1/Read/ReadVariableOp"
  input: "training/Adam/vhat_4_1/Read/ReadVariableOp"
  input: "training/Adam/vhat_5_1/Read/ReadVariableOp"
  input: "training_1/Adam/m_0_1/Read/ReadVariableOp"
  input: "training_1/Adam/m_1_1/Read/ReadVariableOp"
  input: "training_1/Adam/m_2_1/Read/ReadVariableOp"
  input: "training_1/Adam/m_3_1/Read/ReadVariableOp"
  input: "training_1/Adam/m_4_1/Read/ReadVariableOp"
  input: "training_1/Adam/m_5_1/Read/ReadVariableOp"
  input: "training_1/Adam/v_0_1/Read/ReadVariableOp"
  input: "training_1/Adam/v_1_1/Read/ReadVariableOp"
  input: "training_1/Adam/v_2_1/Read/ReadVariableOp"
  input: "training_1/Adam/v_3_1/Read/ReadVariableOp"
  input: "training_1/Adam/v_4_1/Read/ReadVariableOp"
  input: "training_1/Adam/v_5_1/Read/ReadVariableOp"
  input: "training_1/Adam/vhat_0_1/Read/ReadVariableOp"
  input: "training_1/Adam/vhat_1_1/Read/ReadVariableOp"
  input: "training_1/Adam/vhat_2_1/Read/ReadVariableOp"
  input: "training_1/Adam/vhat_3_1/Read/ReadVariableOp"
  input: "training_1/Adam/vhat_4_1/Read/ReadVariableOp"
  input: "training_1/Adam/vhat_5_1/Read/ReadVariableOp"
  input: "training_2/Adam/m_0_1/Read/ReadVariableOp"
  input: "training_2/Adam/m_1_1/Read/ReadVariableOp"
  input: "training_2/Adam/m_2_1/Read/ReadVariableOp"
  input: "training_2/Adam/m_3_1/Read/ReadVariableOp"
  input: "training_2/Adam/m_4_1/Read/ReadVariableOp"
  input: "training_2/Adam/m_5_1/Read/ReadVariableOp"
  input: "training_2/Adam/v_0_1/Read/ReadVariableOp"
  input: "training_2/Adam/v_1_1/Read/ReadVariableOp"
  input: "training_2/Adam/v_2_1/Read/ReadVariableOp"
  input: "training_2/Adam/v_3_1/Read/ReadVariableOp"
  input: "training_2/Adam/v_4_1/Read/ReadVariableOp"
  input: "training_2/Adam/v_5_1/Read/ReadVariableOp"
  input: "training_2/Adam/vhat_0_1/Read/ReadVariableOp"
  input: "training_2/Adam/vhat_1_1/Read/ReadVariableOp"
  input: "training_2/Adam/vhat_2_1/Read/ReadVariableOp"
  input: "training_2/Adam/vhat_3_1/Read/ReadVariableOp"
  input: "training_2/Adam/vhat_4_1/Read/ReadVariableOp"
  input: "training_2/Adam/vhat_5_1/Read/ReadVariableOp"
  input: "training_3/Adam/m_0_1/Read/ReadVariableOp"
  input: "training_3/Adam/m_1_1/Read/ReadVariableOp"
  input: "training_3/Adam/m_2_1/Read/ReadVariableOp"
  input: "training_3/Adam/m_3_1/Read/ReadVariableOp"
  input: "training_3/Adam/m_4_1/Read/ReadVariableOp"
  input: "training_3/Adam/m_5_1/Read/ReadVariableOp"
  input: "training_3/Adam/v_0_1/Read/ReadVariableOp"
  input: "training_3/Adam/v_1_1/Read/ReadVariableOp"
  input: "training_3/Adam/v_2_1/Read/ReadVariableOp"
  input: "training_3/Adam/v_3_1/Read/ReadVariableOp"
  input: "training_3/Adam/v_4_1/Read/ReadVariableOp"
  input: "training_3/Adam/v_5_1/Read/ReadVariableOp"
  input: "training_3/Adam/vhat_0_1/Read/ReadVariableOp"
  input: "training_3/Adam/vhat_1_1/Read/ReadVariableOp"
  input: "training_3/Adam/vhat_2_1/Read/ReadVariableOp"
  input: "training_3/Adam/vhat_3_1/Read/ReadVariableOp"
  input: "training_3/Adam/vhat_4_1/Read/ReadVariableOp"
  input: "training_3/Adam/vhat_5_1/Read/ReadVariableOp"
  input: "training_4/Adam/m_0_1/Read/ReadVariableOp"
  input: "training_4/Adam/m_1_1/Read/ReadVariableOp"
  input: "training_4/Adam/m_2_1/Read/ReadVariableOp"
  input: "training_4/Adam/m_3_1/Read/ReadVariableOp"
  input: "training_4/Adam/m_4_1/Read/ReadVariableOp"
  input: "training_4/Adam/m_5_1/Read/ReadVariableOp"
  input: "training_4/Adam/v_0_1/Read/ReadVariableOp"
  input: "training_4/Adam/v_1_1/Read/ReadVariableOp"
  input: "training_4/Adam/v_2_1/Read/ReadVariableOp"
  input: "training_4/Adam/v_3_1/Read/ReadVariableOp"
  input: "training_4/Adam/v_4_1/Read/ReadVariableOp"
  input: "training_4/Adam/v_5_1/Read/ReadVariableOp"
  input: "training_4/Adam/vhat_0_1/Read/ReadVariableOp"
  input: "training_4/Adam/vhat_1_1/Read/ReadVariableOp"
  input: "training_4/Adam/vhat_2_1/Read/ReadVariableOp"
  input: "training_4/Adam/vhat_3_1/Read/ReadVariableOp"
  input: "training_4/Adam/vhat_4_1/Read/ReadVariableOp"
  input: "training_4/Adam/vhat_5_1/Read/ReadVariableOp"
  input: "training_5/Adam/m_0_1/Read/ReadVariableOp"
  input: "training_5/Adam/m_1_1/Read/ReadVariableOp"
  input: "training_5/Adam/m_2_1/Read/ReadVariableOp"
  input: "training_5/Adam/m_3_1/Read/ReadVariableOp"
  input: "training_5/Adam/m_4_1/Read/ReadVariableOp"
  input: "training_5/Adam/m_5_1/Read/ReadVariableOp"
  input: "training_5/Adam/v_0_1/Read/ReadVariableOp"
  input: "training_5/Adam/v_1_1/Read/ReadVariableOp"
  input: "training_5/Adam/v_2_1/Read/ReadVariableOp"
  input: "training_5/Adam/v_3_1/Read/ReadVariableOp"
  input: "training_5/Adam/v_4_1/Read/ReadVariableOp"
  input: "training_5/Adam/v_5_1/Read/ReadVariableOp"
  input: "training_5/Adam/vhat_0_1/Read/ReadVariableOp"
  input: "training_5/Adam/vhat_1_1/Read/ReadVariableOp"
  input: "training_5/Adam/vhat_2_1/Read/ReadVariableOp"
  input: "training_5/Adam/vhat_3_1/Read/ReadVariableOp"
  input: "training_5/Adam/vhat_4_1/Read/ReadVariableOp"
  input: "training_5/Adam/vhat_5_1/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 198
          }
        }
        string_val: "Adam/beta_1"
        string_val: "Adam/beta_2"
        string_val: "Adam/decay"
        string_val: "Adam/iterations"
        string_val: "Adam/learning_rate"
        string_val: "Adam_1/beta_1"
        string_val: "Adam_1/beta_2"
        string_val: "Adam_1/decay"
        string_val: "Adam_1/iterations"
        string_val: "Adam_1/learning_rate"
        string_val: "Adam_2/beta_1"
        string_val: "Adam_2/beta_2"
        string_val: "Adam_2/decay"
        string_val: "Adam_2/iterations"
        string_val: "Adam_2/learning_rate"
        string_val: "Adam_3/beta_1"
        string_val: "Adam_3/beta_2"
        string_val: "Adam_3/decay"
        string_val: "Adam_3/iterations"
        string_val: "Adam_3/learning_rate"
        string_val: "Adam_4/beta_1"
        string_val: "Adam_4/beta_2"
        string_val: "Adam_4/decay"
        string_val: "Adam_4/iterations"
        string_val: "Adam_4/learning_rate"
        string_val: "Adam_5/beta_1"
        string_val: "Adam_5/beta_2"
        string_val: "Adam_5/decay"
        string_val: "Adam_5/iterations"
        string_val: "Adam_5/learning_rate"
        string_val: "count"
        string_val: "count_1"
        string_val: "count_10"
        string_val: "count_11"
        string_val: "count_2"
        string_val: "count_3"
        string_val: "count_4"
        string_val: "count_5"
        string_val: "count_6"
        string_val: "count_7"
        string_val: "count_8"
        string_val: "count_9"
        string_val: "dense_1/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_10/bias"
        string_val: "dense_10/kernel"
        string_val: "dense_11/bias"
        string_val: "dense_11/kernel"
        string_val: "dense_12/bias"
        string_val: "dense_12/kernel"
        string_val: "dense_2/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_3/bias"
        string_val: "dense_3/kernel"
        string_val: "dense_4/bias"
        string_val: "dense_4/kernel"
        string_val: "dense_5/bias"
        string_val: "dense_5/kernel"
        string_val: "dense_6/bias"
        string_val: "dense_6/kernel"
        string_val: "dense_7/bias"
        string_val: "dense_7/kernel"
        string_val: "dense_7_1/bias"
        string_val: "dense_7_1/kernel"
        string_val: "dense_7_2/bias"
        string_val: "dense_7_2/kernel"
        string_val: "dense_8/bias"
        string_val: "dense_8/kernel"
        string_val: "dense_8_1/bias"
        string_val: "dense_8_1/kernel"
        string_val: "dense_8_2/bias"
        string_val: "dense_8_2/kernel"
        string_val: "dense_9/bias"
        string_val: "dense_9/kernel"
        string_val: "dense_9_1/bias"
        string_val: "dense_9_1/kernel"
        string_val: "dense_9_2/bias"
        string_val: "dense_9_2/kernel"
        string_val: "total"
        string_val: "total_1"
        string_val: "total_10"
        string_val: "total_11"
        string_val: "total_2"
        string_val: "total_3"
        string_val: "total_4"
        string_val: "total_5"
        string_val: "total_6"
        string_val: "total_7"
        string_val: "total_8"
        string_val: "total_9"
        string_val: "training/Adam/m_0_1"
        string_val: "training/Adam/m_1_1"
        string_val: "training/Adam/m_2_1"
        string_val: "training/Adam/m_3_1"
        string_val: "training/Adam/m_4_1"
        string_val: "training/Adam/m_5_1"
        string_val: "training/Adam/v_0_1"
        string_val: "training/Adam/v_1_1"
        string_val: "training/Adam/v_2_1"
        string_val: "training/Adam/v_3_1"
        string_val: "training/Adam/v_4_1"
        string_val: "training/Adam/v_5_1"
        string_val: "training/Adam/vhat_0_1"
        string_val: "training/Adam/vhat_1_1"
        string_val: "training/Adam/vhat_2_1"
        string_val: "training/Adam/vhat_3_1"
        string_val: "training/Adam/vhat_4_1"
        string_val: "training/Adam/vhat_5_1"
        string_val: "training_1/Adam/m_0_1"
        string_val: "training_1/Adam/m_1_1"
        string_val: "training_1/Adam/m_2_1"
        string_val: "training_1/Adam/m_3_1"
        string_val: "training_1/Adam/m_4_1"
        string_val: "training_1/Adam/m_5_1"
        string_val: "training_1/Adam/v_0_1"
        string_val: "training_1/Adam/v_1_1"
        string_val: "training_1/Adam/v_2_1"
        string_val: "training_1/Adam/v_3_1"
        string_val: "training_1/Adam/v_4_1"
        string_val: "training_1/Adam/v_5_1"
        string_val: "training_1/Adam/vhat_0_1"
        string_val: "training_1/Adam/vhat_1_1"
        string_val: "training_1/Adam/vhat_2_1"
        string_val: "training_1/Adam/vhat_3_1"
        string_val: "training_1/Adam/vhat_4_1"
        string_val: "training_1/Adam/vhat_5_1"
        string_val: "training_2/Adam/m_0_1"
        string_val: "training_2/Adam/m_1_1"
        string_val: "training_2/Adam/m_2_1"
        string_val: "training_2/Adam/m_3_1"
        string_val: "training_2/Adam/m_4_1"
        string_val: "training_2/Adam/m_5_1"
        string_val: "training_2/Adam/v_0_1"
        string_val: "training_2/Adam/v_1_1"
        string_val: "training_2/Adam/v_2_1"
        string_val: "training_2/Adam/v_3_1"
        string_val: "training_2/Adam/v_4_1"
        string_val: "training_2/Adam/v_5_1"
        string_val: "training_2/Adam/vhat_0_1"
        string_val: "training_2/Adam/vhat_1_1"
        string_val: "training_2/Adam/vhat_2_1"
        string_val: "training_2/Adam/vhat_3_1"
        string_val: "training_2/Adam/vhat_4_1"
        string_val: "training_2/Adam/vhat_5_1"
        string_val: "training_3/Adam/m_0_1"
        string_val: "training_3/Adam/m_1_1"
        string_val: "training_3/Adam/m_2_1"
        string_val: "training_3/Adam/m_3_1"
        string_val: "training_3/Adam/m_4_1"
        string_val: "training_3/Adam/m_5_1"
        string_val: "training_3/Adam/v_0_1"
        string_val: "training_3/Adam/v_1_1"
        string_val: "training_3/Adam/v_2_1"
        string_val: "training_3/Adam/v_3_1"
        string_val: "training_3/Adam/v_4_1"
        string_val: "training_3/Adam/v_5_1"
        string_val: "training_3/Adam/vhat_0_1"
        string_val: "training_3/Adam/vhat_1_1"
        string_val: "training_3/Adam/vhat_2_1"
        string_val: "training_3/Adam/vhat_3_1"
        string_val: "training_3/Adam/vhat_4_1"
        string_val: "training_3/Adam/vhat_5_1"
        string_val: "training_4/Adam/m_0_1"
        string_val: "training_4/Adam/m_1_1"
        string_val: "training_4/Adam/m_2_1"
        string_val: "training_4/Adam/m_3_1"
        string_val: "training_4/Adam/m_4_1"
        string_val: "training_4/Adam/m_5_1"
        string_val: "training_4/Adam/v_0_1"
        string_val: "training_4/Adam/v_1_1"
        string_val: "training_4/Adam/v_2_1"
        string_val: "training_4/Adam/v_3_1"
        string_val: "training_4/Adam/v_4_1"
        string_val: "training_4/Adam/v_5_1"
        string_val: "training_4/Adam/vhat_0_1"
        string_val: "training_4/Adam/vhat_1_1"
        string_val: "training_4/Adam/vhat_2_1"
        string_val: "training_4/Adam/vhat_3_1"
        string_val: "training_4/Adam/vhat_4_1"
        string_val: "training_4/Adam/vhat_5_1"
        string_val: "training_5/Adam/m_0_1"
        string_val: "training_5/Adam/m_1_1"
        string_val: "training_5/Adam/m_2_1"
        string_val: "training_5/Adam/m_3_1"
        string_val: "training_5/Adam/m_4_1"
        string_val: "training_5/Adam/m_5_1"
        string_val: "training_5/Adam/v_0_1"
        string_val: "training_5/Adam/v_1_1"
        string_val: "training_5/Adam/v_2_1"
        string_val: "training_5/Adam/v_3_1"
        string_val: "training_5/Adam/v_4_1"
        string_val: "training_5/Adam/v_5_1"
        string_val: "training_5/Adam/vhat_0_1"
        string_val: "training_5/Adam/vhat_1_1"
        string_val: "training_5/Adam/vhat_2_1"
        string_val: "training_5/Adam/vhat_3_1"
        string_val: "training_5/Adam/vhat_4_1"
        string_val: "training_5/Adam/vhat_5_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 198
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "Adam/beta_1"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Adam/beta_2"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "Adam/decay"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "Adam/iterations"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "Adam/learning_rate"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "Adam_1/beta_1"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "Adam_1/beta_2"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "Adam_1/decay"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "Adam_1/iterations"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "Adam_1/learning_rate"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "Adam_2/beta_1"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "Adam_2/beta_2"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "Adam_2/decay"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "Adam_2/iterations"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "Adam_2/learning_rate"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "Adam_3/beta_1"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "Adam_3/beta_2"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "Adam_3/decay"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "Adam_3/iterations"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "Adam_3/learning_rate"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "Adam_4/beta_1"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "Adam_4/beta_2"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "Adam_4/decay"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "Adam_4/iterations"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "Adam_4/learning_rate"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "Adam_5/beta_1"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "Adam_5/beta_2"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "Adam_5/decay"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "Adam_5/iterations"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "Adam_5/learning_rate"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "count"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "count_1"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "count_10"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "count_11"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "count_2"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "count_3"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "count_4"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "count_5"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "count_6"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "count_7"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "count_8"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "count_9"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "dense_10/bias"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "dense_10/kernel"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "dense_11/bias"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "dense_11/kernel"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "dense_12/bias"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "dense_12/kernel"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "dense_4/bias"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "dense_4/kernel"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "dense_5/bias"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "dense_5/kernel"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "dense_6/bias"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "dense_6/kernel"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "dense_7/bias"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "dense_7/kernel"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "dense_7_1/bias"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "dense_7_1/kernel"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "dense_7_2/bias"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "dense_7_2/kernel"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "dense_8/bias"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "dense_8/kernel"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "dense_8_1/bias"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "dense_8_1/kernel"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "dense_8_2/bias"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "dense_8_2/kernel"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "dense_9/bias"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "dense_9/kernel"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "dense_9_1/bias"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "dense_9_1/kernel"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "dense_9_2/bias"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "dense_9_2/kernel"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "total"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "total_1"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "total_10"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "total_11"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "total_2"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "total_3"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "total_4"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "total_5"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "total_6"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "total_7"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "total_8"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "total_9"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "training/Adam/m_0_1"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "training/Adam/m_1_1"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "training/Adam/m_2_1"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "training/Adam/m_3_1"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "training/Adam/m_4_1"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "training/Adam/m_5_1"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "training/Adam/v_0_1"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "training/Adam/v_1_1"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "training/Adam/v_2_1"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "training/Adam/v_3_1"
  input: "save/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "training/Adam/v_4_1"
  input: "save/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "training/Adam/v_5_1"
  input: "save/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_0_1"
  input: "save/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_1_1"
  input: "save/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_2_1"
  input: "save/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_3_1"
  input: "save/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_4_1"
  input: "save/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_5_1"
  input: "save/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_0_1"
  input: "save/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_1_1"
  input: "save/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_2_1"
  input: "save/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_3_1"
  input: "save/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_4_1"
  input: "save/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "training_1/Adam/m_5_1"
  input: "save/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_0_1"
  input: "save/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_1_1"
  input: "save/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_2_1"
  input: "save/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_3_1"
  input: "save/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_4_1"
  input: "save/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "training_1/Adam/v_5_1"
  input: "save/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_0_1"
  input: "save/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_1_1"
  input: "save/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_2_1"
  input: "save/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_3_1"
  input: "save/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_4_1"
  input: "save/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "training_1/Adam/vhat_5_1"
  input: "save/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_0_1"
  input: "save/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_1_1"
  input: "save/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_2_1"
  input: "save/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_3_1"
  input: "save/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_4_1"
  input: "save/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "training_2/Adam/m_5_1"
  input: "save/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_0_1"
  input: "save/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_1_1"
  input: "save/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_2_1"
  input: "save/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_3_1"
  input: "save/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_4_1"
  input: "save/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "training_2/Adam/v_5_1"
  input: "save/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_0_1"
  input: "save/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_1_1"
  input: "save/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_2_1"
  input: "save/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_3_1"
  input: "save/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_4_1"
  input: "save/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "training_2/Adam/vhat_5_1"
  input: "save/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_0_1"
  input: "save/Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_1_1"
  input: "save/Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_2_1"
  input: "save/Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_3_1"
  input: "save/Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_4_1"
  input: "save/Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "training_3/Adam/m_5_1"
  input: "save/Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_0_1"
  input: "save/Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_1_1"
  input: "save/Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_152"
  op: "Identity"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_2_1"
  input: "save/Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_153"
  op: "Identity"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_3_1"
  input: "save/Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_154"
  op: "Identity"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_4_1"
  input: "save/Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_155"
  op: "Identity"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "training_3/Adam/v_5_1"
  input: "save/Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_156"
  op: "Identity"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_0_1"
  input: "save/Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_157"
  op: "Identity"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_1_1"
  input: "save/Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_158"
  op: "Identity"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_2_1"
  input: "save/Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_159"
  op: "Identity"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_3_1"
  input: "save/Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_160"
  op: "Identity"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_4_1"
  input: "save/Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_161"
  op: "Identity"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "training_3/Adam/vhat_5_1"
  input: "save/Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_162"
  op: "Identity"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_0_1"
  input: "save/Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_163"
  op: "Identity"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_1_1"
  input: "save/Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_164"
  op: "Identity"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_2_1"
  input: "save/Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_165"
  op: "Identity"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_3_1"
  input: "save/Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_166"
  op: "Identity"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_4_1"
  input: "save/Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_167"
  op: "Identity"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "training_4/Adam/m_5_1"
  input: "save/Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_168"
  op: "Identity"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_0_1"
  input: "save/Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_169"
  op: "Identity"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_1_1"
  input: "save/Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_170"
  op: "Identity"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_2_1"
  input: "save/Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_171"
  op: "Identity"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_3_1"
  input: "save/Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_172"
  op: "Identity"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_4_1"
  input: "save/Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_173"
  op: "Identity"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "training_4/Adam/v_5_1"
  input: "save/Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_174"
  op: "Identity"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_0_1"
  input: "save/Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_175"
  op: "Identity"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_1_1"
  input: "save/Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_176"
  op: "Identity"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_2_1"
  input: "save/Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_177"
  op: "Identity"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_3_1"
  input: "save/Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_178"
  op: "Identity"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_4_1"
  input: "save/Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_179"
  op: "Identity"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "training_4/Adam/vhat_5_1"
  input: "save/Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_180"
  op: "Identity"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_0_1"
  input: "save/Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_181"
  op: "Identity"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_1_1"
  input: "save/Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_182"
  op: "Identity"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_2_1"
  input: "save/Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_183"
  op: "Identity"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_3_1"
  input: "save/Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_184"
  op: "Identity"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_4_1"
  input: "save/Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_185"
  op: "Identity"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "training_5/Adam/m_5_1"
  input: "save/Identity_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_186"
  op: "Identity"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_0_1"
  input: "save/Identity_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_187"
  op: "Identity"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_1_1"
  input: "save/Identity_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_188"
  op: "Identity"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_2_1"
  input: "save/Identity_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_189"
  op: "Identity"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_3_1"
  input: "save/Identity_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_190"
  op: "Identity"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_4_1"
  input: "save/Identity_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_191"
  op: "Identity"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "training_5/Adam/v_5_1"
  input: "save/Identity_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_192"
  op: "Identity"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_0_1"
  input: "save/Identity_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_193"
  op: "Identity"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_1_1"
  input: "save/Identity_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_194"
  op: "Identity"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_2_1"
  input: "save/Identity_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_195"
  op: "Identity"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_3_1"
  input: "save/Identity_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_196"
  op: "Identity"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_4_1"
  input: "save/Identity_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_197"
  op: "Identity"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "training_5/Adam/vhat_5_1"
  input: "save/Identity_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_100"
  input: "^save/AssignVariableOp_101"
  input: "^save/AssignVariableOp_102"
  input: "^save/AssignVariableOp_103"
  input: "^save/AssignVariableOp_104"
  input: "^save/AssignVariableOp_105"
  input: "^save/AssignVariableOp_106"
  input: "^save/AssignVariableOp_107"
  input: "^save/AssignVariableOp_108"
  input: "^save/AssignVariableOp_109"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_110"
  input: "^save/AssignVariableOp_111"
  input: "^save/AssignVariableOp_112"
  input: "^save/AssignVariableOp_113"
  input: "^save/AssignVariableOp_114"
  input: "^save/AssignVariableOp_115"
  input: "^save/AssignVariableOp_116"
  input: "^save/AssignVariableOp_117"
  input: "^save/AssignVariableOp_118"
  input: "^save/AssignVariableOp_119"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_120"
  input: "^save/AssignVariableOp_121"
  input: "^save/AssignVariableOp_122"
  input: "^save/AssignVariableOp_123"
  input: "^save/AssignVariableOp_124"
  input: "^save/AssignVariableOp_125"
  input: "^save/AssignVariableOp_126"
  input: "^save/AssignVariableOp_127"
  input: "^save/AssignVariableOp_128"
  input: "^save/AssignVariableOp_129"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_130"
  input: "^save/AssignVariableOp_131"
  input: "^save/AssignVariableOp_132"
  input: "^save/AssignVariableOp_133"
  input: "^save/AssignVariableOp_134"
  input: "^save/AssignVariableOp_135"
  input: "^save/AssignVariableOp_136"
  input: "^save/AssignVariableOp_137"
  input: "^save/AssignVariableOp_138"
  input: "^save/AssignVariableOp_139"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_140"
  input: "^save/AssignVariableOp_141"
  input: "^save/AssignVariableOp_142"
  input: "^save/AssignVariableOp_143"
  input: "^save/AssignVariableOp_144"
  input: "^save/AssignVariableOp_145"
  input: "^save/AssignVariableOp_146"
  input: "^save/AssignVariableOp_147"
  input: "^save/AssignVariableOp_148"
  input: "^save/AssignVariableOp_149"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_150"
  input: "^save/AssignVariableOp_151"
  input: "^save/AssignVariableOp_152"
  input: "^save/AssignVariableOp_153"
  input: "^save/AssignVariableOp_154"
  input: "^save/AssignVariableOp_155"
  input: "^save/AssignVariableOp_156"
  input: "^save/AssignVariableOp_157"
  input: "^save/AssignVariableOp_158"
  input: "^save/AssignVariableOp_159"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_160"
  input: "^save/AssignVariableOp_161"
  input: "^save/AssignVariableOp_162"
  input: "^save/AssignVariableOp_163"
  input: "^save/AssignVariableOp_164"
  input: "^save/AssignVariableOp_165"
  input: "^save/AssignVariableOp_166"
  input: "^save/AssignVariableOp_167"
  input: "^save/AssignVariableOp_168"
  input: "^save/AssignVariableOp_169"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_170"
  input: "^save/AssignVariableOp_171"
  input: "^save/AssignVariableOp_172"
  input: "^save/AssignVariableOp_173"
  input: "^save/AssignVariableOp_174"
  input: "^save/AssignVariableOp_175"
  input: "^save/AssignVariableOp_176"
  input: "^save/AssignVariableOp_177"
  input: "^save/AssignVariableOp_178"
  input: "^save/AssignVariableOp_179"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_180"
  input: "^save/AssignVariableOp_181"
  input: "^save/AssignVariableOp_182"
  input: "^save/AssignVariableOp_183"
  input: "^save/AssignVariableOp_184"
  input: "^save/AssignVariableOp_185"
  input: "^save/AssignVariableOp_186"
  input: "^save/AssignVariableOp_187"
  input: "^save/AssignVariableOp_188"
  input: "^save/AssignVariableOp_189"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_190"
  input: "^save/AssignVariableOp_191"
  input: "^save/AssignVariableOp_192"
  input: "^save/AssignVariableOp_193"
  input: "^save/AssignVariableOp_194"
  input: "^save/AssignVariableOp_195"
  input: "^save/AssignVariableOp_196"
  input: "^save/AssignVariableOp_197"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
  input: "^save/AssignVariableOp_99"
}
versions {
  producer: 134
}
